#N canvas 0 0 760 555 12;
#X obj 20 53 ui.link @title index @url ../index-help.pd;
#X text 62 50 ::;
#X obj 80 53 ui.link @title ceammc @url ceammc-help.pd;
#X obj 30 117 env.adsr~;
#X text 200 117 ADSR (Attack \, Decay \, Sustain \, Release) envelope
generator;
#X obj 30 145 env.ar~;
#X text 200 145 Attack/Release envelope generator;
#X obj 30 173 env.asr2~;
#X text 200 173 stereo Attack/Sustain/Release envelope generator;
#X obj 30 201 env.asr~;
#X text 200 201 Attack/Sustain/Release envelope generator;
#X obj 30 229 env.concat;
#X text 200 229 Envelope concatenation;
#X obj 30 257 env.follow~;
#X text 200 257 Envelope follower with independent attack and release
times;
#X obj 30 285 env.mix;
#X text 200 285 Mix between two envelopes. Envelopes should contain
equal number of segments;
#X obj 30 325 env.smooth~;
#X text 200 325 An envelope with an exponential attack and release;
#X obj 30 353 env.tscale;
#X text 200 353 Envelope time-scale;
#X obj 30 381 env.tshift;
#X text 200 381 Envelope time-shift (horizontal);
#X obj 30 409 env.vscale;
#X text 200 409 Envelope value-scale;
#X obj 30 437 env2array;
#X text 200 437 Renders envelope to specified array;
#X obj 30 465 env2vline;
#X text 200 465 Converts envelope to bunch of vline messages;
#X obj 30 493 envelope;
#X text 200 493 Envelope data type;
#X obj 30 521 vline2env;
#X text 200 521 Converts vline messages to env;
#X obj 1 1 cnv 5 740 40 empty empty ceammc::env 20 20 0 20 -104026
-4096 0;
#X obj 1 549 cnv 5 740 40 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 20 559 library: ceammc;