#N canvas 0 0 760 555 12;
#X obj 20 53 ui.link @title index @url ../index-help.pd;
#X text 62 50 ::;
#X obj 80 53 ui.link @title ceammc @url ceammc-help.pd;
#X obj 30 117 color.mix;
#X text 200 117 color mixer;
#X obj 30 145 color.scale;
#X text 200 145 create color scales;
#X obj 30 173 data.bimap;
#X text 200 173 bidirectional map container;
#X obj 30 201 data.color;
#X text 200 201 Color datatype;
#X obj 30 229 data.copy;
#X text 200 229 make copy for any data types: MList \, Set etc...;
#X obj 30 257 data.dict;
#X text 200 257 dictionary container: store values by key;
#X obj 30 285 data.fifo;
#X text 200 285 First-In-First-Out (FIFO) queue data container;
#X obj 30 313 data.float;
#X text 200 313 robust float object;
#X obj 30 341 data.int;
#X text 200 341 robust int object;
#X obj 30 369 data.list;
#X text 200 369 list container;
#X obj 30 397 data.mlist;
#X text 200 397 multidimensional list container;
#X obj 30 425 data.set;
#X text 200 425 container that store unique elements;
#X obj 30 453 data.set2list;
#X text 200 453 converts set to list;
#X obj 30 481 dict.contains;
#X text 200 481 predicate to check if dict contains a keys;
#X obj 30 509 dict.each;
#X text 200 509 map each value in dict;
#X obj 30 537 dict.from_list;
#X text 200 537 creates dictionary from list;
#X obj 30 565 dict.get;
#X text 200 565 output dict values;
#X obj 30 593 dict.keys;
#X text 200 593 get list of dict keys;
#X obj 30 621 dict.pass;
#X text 200 621 passes specified keys in dict;
#X obj 30 649 dict.reject;
#X text 200 649 rejects specified keys from dict;
#X obj 30 677 dict.size;
#X text 200 677 dictionary size;
#X obj 30 705 dict.to_list;
#X text 200 705 converts dictionary to plain list;
#X obj 30 733 dict.values;
#X text 200 733 dictionary values as mlist;
#X obj 30 761 global.bimap;
#X text 200 761 Global visibility bidirectional map container;
#X obj 30 789 local.bimap;
#X text 200 789 local to patch bidirectional map container;
#X obj 30 817 mlist.flatten;
#X text 200 817 flatten nested mlist;
#X obj 30 845 rtree.to_list;
#X text 200 845 convert OpenMusic-like rhythm tree to list of fractions;
#X obj 30 873 set.contains;
#X text 200 873 check if specified element is in set;
#X obj 30 901 set.diff;
#X text 200 901 difference between two sets;
#X obj 30 929 set.equal;
#X text 200 929 checks if two sets are equal (contains same elements);
#X obj 30 957 set.intersect;
#X text 200 957 output intersection of given sets;
#X obj 30 985 set.size;
#X text 200 985 get number of elements in set;
#X obj 30 1013 set.symdiff;
#X text 200 1013 symmetric difference between two sets;
#X obj 30 1041 set.union;
#X text 200 1041 output union of given sets;
#X obj 1 1 cnv 5 740 40 empty empty ceammc::data 20 20 0 20 -104026
-4096 0;
#X obj 1 1069 cnv 5 740 40 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 20 1079 library: ceammc;