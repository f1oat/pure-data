#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 629 50 cnv 1 136 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 629 50 duffing attractor;
#X obj 1 1 cnv 5 765 40 empty empty noise.duffing 20 20 0 20 -104026
-4096 0;
#X obj 646 11 noise.duffing;
#X obj 210 80 cnv 1 555 300 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 Duffing Attractor;
#X text 215 105 Written by Paul Bourke;
#X text 215 130 ---;
#X text 215 155 The solution to the Duffing equations is often used
as an example of a classic chaotic system.;
#X text 215 195 The Duffing system of differential equations is:;
#X text 215 220 ===========;
#X text 215 245 dx / dt = y;
#X text 215 270 dy / dt = x - x3 - a y + b cos(w t);
#X text 215 295 ===================================;
#X text 215 320 where typically \, a = 0.25 \, b = 0.3 \, w = 1;
#X text 215 345 The following shows a "typical" segment of (x \, y)
values.;
#X obj 50 423 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1;
#X obj 50 452 metro 50;
#X obj 69 480 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1;
#X floatatom 184 480 5 0 0 0 - - -;
#X msg 69 509 om \$1;
#X msg 184 509 set \$1;
#X msg 318 509 reset;
#X floatatom 88 538 5 0 0 0 - - -;
#X floatatom 184 538 5 0 0 0 - - -;
#X floatatom 280 538 5 0 0 0 - - -;
#X floatatom 376 538 5 0 0 0 - - -;
#X msg 88 567 a \$1;
#X msg 184 567 b \$1;
#X msg 280 567 w \$1;
#X msg 376 567 dt \$1;
#X obj 50 595 noise.duffing;
#X obj 50 624 ui.display;
#X obj 20 658 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 663 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 698 1\.;
#X text 150 698 float;
#X obj 246 699 cnv 1 17 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 698 A: a value (default 0.25) \, optional. Type: float.;
#X text 110 718 2\.;
#X text 150 718 float;
#X obj 246 719 cnv 1 16 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 718 B: b value (default 0.3) \, optional. Type: float.;
#X text 110 738 3\.;
#X text 150 738 float;
#X obj 246 739 cnv 1 17 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 738 W: w value (default 1.0) \, optional. Type: float.;
#X text 110 758 4\.;
#X text 150 758 float;
#X obj 246 759 cnv 1 24 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 758 DT: dt value (default 0.01) \, optional. Type: float.;
#X obj 20 788 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 793 cnv 5 73 26 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 828 a;
#X text 245 828 Arguments are:;
#X obj 255 851 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 851 A: a value. Type: float.;
#X msg 110 876 b;
#X text 245 876 Arguments are:;
#X obj 255 899 cnv 1 14 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 899 B: b value. Type: float.;
#X msg 110 924 dt;
#X text 245 924 Arguments are:;
#X obj 255 947 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 947 DT: dt value. Type: float.;
#X msg 110 972 om;
#X text 245 972 Arguments are:;
#X obj 255 995 cnv 1 21 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 995 OM: enables output when cut or fold value is changed.
Type: int.;
#X msg 110 1035 reset;
#X text 245 1035 reset state.;
#X msg 110 1062 set;
#X text 245 1062 Arguments are:;
#X obj 255 1085 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1085 SET: set to value. Type: float.;
#X msg 110 1110 w;
#X text 245 1110 Arguments are:;
#X obj 255 1133 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1133 W: w value. Type: float.;
#X obj 20 1168 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1173 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1174 1\.;
#X text 150 1174 *bang*;
#X text 245 1174 output value.;
#X obj 20 1204 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1209 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1210 1\.;
#X text 245 1210 dx output.;
#X text 110 1230 2\.;
#X text 245 1230 dy output.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title noise @url ceammc.noise-help.pd;
#X obj 1 1280 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1283 library: ceammc v0.9.6;
#N canvas 10 1302 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.6;
#X text 10 54 object:;
#X text 120 54 noise.duffing;
#X text 10 76 category:;
#X text 120 76 noise;
#X text 10 98 since:;
#X text 120 98 0.5;
#X text 10 120 authors:;
#X text 120 120 Paul Bourke \, Andr√© Sier;
#X text 10 142 license:;
#X text 120 142 %;
#X text 10 164 keywords:;
#X text 120 164 noise;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1302 pd info;
#X connect 16 0 17 0;
#X connect 18 0 20 0;
#X connect 19 0 21 0;
#X connect 23 0 27 0;
#X connect 24 0 28 0;
#X connect 25 0 29 0;
#X connect 26 0 30 0;
#X connect 31 0 32 0;
#X connect 27 0 31 0;
#X connect 28 0 31 0;
#X connect 29 0 31 0;
#X connect 30 0 31 0;
#X connect 20 0 31 0;
#X connect 21 0 31 0;
#X connect 22 0 31 0;
#X connect 17 0 31 0;