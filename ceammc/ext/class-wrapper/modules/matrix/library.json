{
    "authors": [
        "Serge Poltavski"
    ],
    "classes": [
        {
            "brief": "Matrix data type",
            "class": "Matrix",
            "constructor": "NROWS NCOLS ...",
            "keywords": [
                "algebra",
                "linear",
                "matrix"
            ],
            "methods": {
                "abs": {
                    "brief": "calc abs value for each matrix element",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.abs",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2 -1 -2 -3 -4(\n|\n[matrix.abs]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "abs",
                        "magnitude"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "new matrix"
                    ],
                    "since": "0.1"
                },
                "accu": {
                    "brief": "accumulate (sum) all elements of matrix",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.accu",
                    "doc_outlets": [
                        {
                            "info": "sum all elements of matrix",
                            "type": "float"
                        }
                    ],
                    "example": "\n[2( [4(           [B]\n|   |             |\n[matrix.identity] [matrix.linspace 1 10 100]\n|                 |\n[matrix.accu      ]\n|\n[F]",
                    "keywords": [
                        "accumulate",
                        "sum"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "sum all elements of matrix"
                    ],
                    "see": [
                        "matrix.sum"
                    ],
                    "since": "0.1"
                },
                "acos": {
                    "brief": "element-wise acrcosine",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.acos",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[-1 1 100(         [A ARR_ACOS size=100 w=260 h=130 yr=0..3]\n|\n[matrix.linspace]\n|\n[matrix.acos]\n|\n[matrix->list]\n|\n[array.set ARR_ACOS]",
                    "keywords": [
                        "acrcosine",
                        "trigonometric"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.cos"
                    ],
                    "since": "0.1"
                },
                "acosh": {
                    "brief": "element-wise hyperbolic acrcosine",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.acosh",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[0 4 100(         [A ARR_ACOSH size=100 w=260 h=130 yr=0..2]\n|\n[matrix.linspace]\n|\n[matrix.acosh]\n|\n[matrix->list]\n|\n[array.set ARR_ACOSH]",
                    "keywords": [
                        "hyperbolic",
                        "acrcosine",
                        "trigonometric"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.cosh"
                    ],
                    "since": "0.1"
                },
                "add": {
                    "brief": "element-wise matrix addition",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "float"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "float to add",
                                "type": "float"
                            },
                            {
                                "info": "matrix to add (NROWS NCOLS ...)",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.add",
                    "doc_outlets": [
                        {
                            "info": "result Matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 3(         [2 3(\n|             |\n[matrix.ones] [matrix.randu]\n|             |.\n[matrix.add  10]\n|\n[ui.display @display_type=1]",
                    "overloads": {
                        "param_names": [
                            "m"
                        ],
                        "params": [
                            [
                                "matrix to add"
                            ]
                        ]
                    },
                    "param_names": [
                        "v"
                    ],
                    "params": [
                        "float to add"
                    ],
                    "pd_aliases": [
                        "matrix.+"
                    ],
                    "pddoc_args": [
                        {
                            "info": "float to add or matrix to add (Matrix NROWS NCOLS ...)",
                            "name": "v",
                            "type": "list"
                        }
                    ],
                    "return": [
                        "result Matrix"
                    ],
                    "see": [
                        "matrix.sub"
                    ],
                    "since": "0.1"
                },
                "all": {
                    "brief": "check if all elements of the matrix are non-zero",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.all",
                    "doc_outlets": [
                        {
                            "info": "1 or 0",
                            "type": "bool"
                        }
                    ],
                    "example": "\n[2 2(         [3 3(          [4(\n|             |              |\n[matrix.ones] [matrix.zeros] [matrix.id]\n|             |              |\n|             |              |\n|             |              |\n[matrix.all                  ]\n|\n[F]",
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "1 or 0"
                    ],
                    "see": [
                        "matrix.any"
                    ],
                    "since": "0.1"
                },
                "all_col": {
                    "brief": "row with each element (0 or 1) indicating whether the corresponding column has all non-zero elements",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.all_col",
                    "doc_outlets": [
                        {
                            "info": "row vector",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2 1 2 3 4( [2 2 1 2 0 3( [2 2 1 0 0 1(\n|             |             |\n|             |             |\n|             |             |\n[matrix.all_col             ]\n|\n[ui.display @display_type=1]",
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "row vector"
                    ],
                    "see": [
                        "matrix.all",
                        "matrix.all_row"
                    ],
                    "since": "0.1"
                },
                "all_row": {
                    "brief": "column with each element (0 or 1) indicating whether the corresponding row has all non-zero elements",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.all_row",
                    "doc_outlets": [
                        {
                            "info": "row vector",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2 1 2 3 4( [2 2 1 2 0 3( [2 2 1 0 0 1(\n|             |             |\n|             |             |\n|             |             |\n[matrix.all_row             ]\n|\n[ui.display @display_type=1]",
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "row vector"
                    ],
                    "see": [
                        "matrix.all",
                        "matrix.all_col"
                    ],
                    "since": "0.1"
                },
                "any": {
                    "brief": "check if any elements of the matrix are non-zero",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.any",
                    "doc_outlets": [
                        {
                            "info": "1 or 0",
                            "type": "bool"
                        }
                    ],
                    "example": "\n[2 2(         [3 3(          [4(\n|             |              |\n[matrix.ones] [matrix.zeros] [matrix.id]\n|             |              |\n|             |              |\n|             |              |\n[matrix.any                  ]\n|\n[F]",
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "1 or 0"
                    ],
                    "see": [
                        "matrix.all"
                    ],
                    "since": "0.1"
                },
                "any_col": {
                    "brief": "row with each element (0 or 1) indicating whether the corresponding column has any non-zero elements",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.any_col",
                    "doc_outlets": [
                        {
                            "info": "row vector",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2 1 2 3 4( [2 2 1 2 0 3( [2 2 1 0 0 0(\n|             |             |\n|             |             |\n|             |             |\n[matrix.any_col             ]\n|\n[ui.display @display_type=1]",
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "row vector"
                    ],
                    "see": [
                        "matrix.any",
                        "matrix.any_row"
                    ],
                    "since": "0.1"
                },
                "any_row": {
                    "brief": "column with each element (0 or 1) indicating whether the corresponding row has any non-zero elements",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.any_row",
                    "doc_outlets": [
                        {
                            "info": "row vector",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2 1 2 3 4( [2 2 1 2 0 3( [2 2 1 0 0 0(\n|             |             |\n|             |             |\n|             |             |\n[matrix.any_row             ]\n|\n[ui.display @display_type=1]",
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "row vector"
                    ],
                    "see": [
                        "matrix.any",
                        "matrix.any_col"
                    ],
                    "since": "0.1"
                },
                "asin": {
                    "brief": "element-wise acrsine",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.asin",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[-1 1 100(         [A ARR_ASIN size=100 w=260 h=130 yr=-2..2]\n|\n[matrix.linspace]\n|\n[matrix.asin]\n|\n[matrix->list]\n|\n[array.set ARR_ASIN]",
                    "keywords": [
                        "arcsine",
                        "trigonometric"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.sin"
                    ],
                    "since": "0.1"
                },
                "asinh": {
                    "brief": "element-wise hyperbolic acrsine",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.asinh",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[-3 3 100(         [A ARR_ASINH size=100 w=260 h=130 yr=-2..2]\n|\n[matrix.linspace]\n|\n[matrix.asinh]\n|\n[matrix->list]\n|\n[array.set ARR_ASINH]",
                    "keywords": [
                        "acrsinh",
                        "trigonometric"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.sinh"
                    ],
                    "since": "0.1"
                },
                "at": {
                    "brief": "select matrix element at specified position",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "int",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "row number",
                                "type": "int"
                            }
                        ],
                        [
                            {
                                "info": "column number",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.at",
                    "doc_outlets": [
                        {
                            "info": "float element",
                            "type": "float"
                        }
                    ],
                    "example": "\n[0 64 65(\n|\n[matrix.linspace]\n|\n[matrix.reshape 8 8]\n|\n|           [hradio]\n|           |\n|           |   [hradio]\n|           |.  |..\n[matrix.at     1 1]\n|\n[F]",
                    "param_names": [
                        "m",
                        "n"
                    ],
                    "params": [
                        "row number",
                        "column number"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "row number",
                            "minvalue": 0,
                            "name": "m",
                            "type": "int"
                        },
                        {
                            "info": "column number",
                            "minvalue": 0,
                            "name": "n",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "float element"
                    ],
                    "see": [
                        "matrix.col_at"
                    ],
                    "since": "0.1"
                },
                "atan": {
                    "brief": "element-wise arctangent",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.atan",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[-2 2 100(         [A ARR_ATAN size=100 w=260 h=130 yr=-1..1]\n|\n[matrix.linspace]\n|\n[matrix.atan]\n|\n[matrix->list]\n|\n[array.set ARR_ATAN]",
                    "keywords": [
                        "arctangent",
                        "trigonometric"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.tan",
                        "matrix.sin"
                    ],
                    "since": "0.1"
                },
                "atanh": {
                    "brief": "element-wise hyperbolic acrtangent",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.atanh",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[-1 1 100(         [A ARR_ATANH size=100 w=260 h=130 yr=-3..3]\n|\n[matrix.linspace]\n|\n[matrix.atanh]\n|\n[matrix->list]\n|\n[array.set ARR_TANH]",
                    "keywords": [
                        "tangent",
                        "trigonometric",
                        "hyperbolic"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.tanh"
                    ],
                    "since": "0.1"
                },
                "clip": {
                    "brief": "clip matrix value to range [min, max]",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "float",
                            "float"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "minimal value",
                                "type": "float"
                            }
                        ],
                        [
                            {
                                "info": "maximum value",
                                "type": "float"
                            }
                        ]
                    ],
                    "doc_name": "matrix.clip",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 3(\n|\n[matrix.randn]\n|\n[matrix.clip 0 1]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "clip",
                        "min",
                        "max"
                    ],
                    "param_names": [
                        "min",
                        "max"
                    ],
                    "params": [
                        "minimal value",
                        "maximum value"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "minimal value",
                            "name": "min",
                            "type": "float"
                        },
                        {
                            "info": "maximum value",
                            "name": "max",
                            "type": "float"
                        }
                    ],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.min",
                        "matrix.max"
                    ],
                    "since": "0.1"
                },
                "col": {
                    "brief": "create Matrix column with specified values",
                    "doc_args": {
                        "pd_types": [
                            "list"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "column values",
                                "type": "list"
                            }
                        ]
                    ],
                    "doc_name": "matrix.col",
                    "doc_outlets": [
                        {
                            "info": "column",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[B] [1 2 3 4(\n|   |\n[matrix.col 0.2345 1.2345 3.1415]\n|       |\n[print] [ui.display @display_type=1]",
                    "param_names": [
                        "v"
                    ],
                    "params": [
                        "column values"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "column values",
                            "name": "v",
                            "type": "list"
                        }
                    ],
                    "return": [
                        "column"
                    ],
                    "see": [
                        "matrix.row"
                    ],
                    "since": "0.1"
                },
                "col_at": {
                    "brief": "get specified column",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "column number",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.col_at",
                    "doc_outlets": [
                        {
                            "info": "matrix column",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 3 1 2 3 4 5 6(  [F]\n|                  |.\n[matrix.col_at 1    ]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "row",
                        "col"
                    ],
                    "param_names": [
                        "n"
                    ],
                    "params": [
                        "column number"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "column number",
                            "minvalue": 0,
                            "name": "n",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "matrix column"
                    ],
                    "see": [
                        "matrix.row_at"
                    ],
                    "since": "0.1"
                },
                "conv2": {
                    "brief": "2D matrix convolution",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "convolution kernel: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "convolution kernel",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.conv2",
                    "doc_outlets": [
                        {
                            "info": "new matrix of same size",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[T]\n|\n[metro 200]\n|\n[get list(\n|\n[ui.matrix @size=100x100 @cols=10 @rows=10 #d]\n|\n|\n|\n|                    [loadbang]\n|                    |\n|                    [10 10(\n|                    |\n[route list]         [matrix.randu]\n|                    |\n[msg 10 10]          [matrix.> 0.6]\n|                    |\n[matrix.new        #a]\n|\n[t a a]\n|  ^|\n|  [matrix.conv2 3 3 1 1 1 1 0 1 1 1 1]\n|  |\n|  [t a a         ]\n|  |             ^|\n|  [matrix.== 2] [matrix.== 3]\n|  |.            |\n[matrix.*]       |\n|                |.\n[matrix.+          ]\n|              |\n[matrix->list] [msg set #b]\n|\n[msg set list #c]\n\n[X b->a]\n[X c->d]",
                    "keywords": [
                        "convolution"
                    ],
                    "param_names": [
                        "b"
                    ],
                    "params": [
                        "convolution kernel"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "convolution kernel",
                            "name": "b",
                            "type": "list"
                        }
                    ],
                    "return": [
                        "new matrix of same size"
                    ],
                    "since": "0.1"
                },
                "cos": {
                    "brief": "element-wise cosine",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.cos",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[0 6.4 100(         [A ARR_COS size=100 w=260 h=130 yr=-1..1]\n|\n[matrix.linspace]\n|\n[matrix.cos]\n|\n[matrix->list]\n|\n[array.set ARR_COS]",
                    "keywords": [
                        "cosine",
                        "trigonometric"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.acos"
                    ],
                    "since": "0.1"
                },
                "cosh": {
                    "brief": "element-wise hyperbolic cosine",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.cosh",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[-2 2 100(         [A ARR_COSH size=100 w=260 h=130 yr=0..4]\n|\n[matrix.linspace]\n|\n[matrix.cosh]\n|\n[matrix->list]\n|\n[array.set ARR_COSH]",
                    "keywords": [
                        "hyperbolic",
                        "cosine",
                        "trigonometric"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.acosh"
                    ],
                    "since": "0.1"
                },
                "det": {
                    "brief": "determinant of square matrix",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.det",
                    "doc_outlets": [
                        {
                            "info": "value",
                            "type": "float"
                        }
                    ],
                    "example": "\n[3 3(\n|\n[matrix.randu]  [3 5(\n|               |\n[matrix.det     ]\n|\n[F digits=8]",
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "value"
                    ],
                    "since": "0.1"
                },
                "diag": {
                    "brief": "get matrix diagonals",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "number of diagonal (0 - means main diagonal)",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.diag",
                    "doc_outlets": [
                        {
                            "info": "diagonal as column",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 3 1 2 3 4 5 6 7 8 9(\n|\n[list->matrix] [F]\n|              |.\n[matrix.diag   0]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "diagonal"
                    ],
                    "param_names": [
                        "n"
                    ],
                    "params": [
                        "number of diagonal (0 - means main diagonal)"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "number of diagonal (0 - means main diagonal)",
                            "name": "n",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "diagonal as column"
                    ],
                    "since": "0.1"
                },
                "div": {
                    "brief": "element-wise matrix division",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "divisor matrix: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "divisor matrix",
                                "type": "data"
                            },
                            {
                                "info": "float to divide all elements",
                                "type": "float"
                            }
                        ]
                    ],
                    "doc_name": "matrix.div",
                    "doc_outlets": [
                        {
                            "info": "result Matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 4(\n|\n[matrix.ones]  [2 4 1 2 3 4 5 6 7 8(\n|              |.\n[matrix.div    4]\n|\n[ui.display @display_type=1]",
                    "overloads": {
                        "param_names": [
                            "v"
                        ],
                        "params": [
                            [
                                "float to divide all elements"
                            ]
                        ]
                    },
                    "param_names": [
                        "m"
                    ],
                    "params": [
                        "divisor matrix"
                    ],
                    "pd_aliases": [
                        "matrix./"
                    ],
                    "pddoc_args": [
                        {
                            "info": "divisor matrix (Matrix NROWS NCOLS ...) or float to divide all elements",
                            "name": "m",
                            "type": "list"
                        }
                    ],
                    "return": [
                        "result Matrix"
                    ],
                    "see": [
                        "matrix.mul"
                    ],
                    "since": "0.1"
                },
                "eq": {
                    "brief": "element-wise matrix equal comparasion",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "float"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "float to compare",
                                "type": "float"
                            },
                            {
                                "info": "matrix to compare (NROWS NCOLS ...)",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.==",
                    "doc_outlets": [
                        {
                            "info": "compare result - matrix with 1 and 0",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2 1 2 3 4(        [F]   [2 2 1 4 3 6(\n|                    |.    |.\n[matrix.== Matrix 2 2 1 2 3 4]\n|\n[ui.display @display_type=1]",
                    "overloads": {
                        "param_names": [
                            "b"
                        ],
                        "params": [
                            [
                                "matrix to compare"
                            ]
                        ]
                    },
                    "param_names": [
                        "v"
                    ],
                    "params": [
                        "float to compare"
                    ],
                    "pd_aliases": [],
                    "pd_name": "==",
                    "pddoc_args": [
                        {
                            "info": "float to compare or matrix to compare (Matrix NROWS NCOLS ...)",
                            "name": "v",
                            "type": "list"
                        }
                    ],
                    "return": [
                        "compare result - matrix with 1 and 0"
                    ],
                    "see": [
                        "matrix.>",
                        "matrix.<"
                    ],
                    "since": "0.1"
                },
                "exp": {
                    "brief": "element-wise base-e exponent: e^x",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.exp",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2 1 2 3 4(\n|\n[matrix.exp]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "exponent"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "new matrix"
                    ],
                    "since": "0.1"
                },
                "exp10": {
                    "brief": "element-wise base-10 exponent: 10^x",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.exp10",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2 0 1 2 3(\n|\n[matrix.exp10]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "exponent"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "new matrix"
                    ],
                    "since": "0.1"
                },
                "exp2": {
                    "brief": "element-wise base-2 exponent: 2^x",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.exp2",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2 1 2 3 4(\n|\n[matrix.exp2]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "exponent"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "new matrix"
                    ],
                    "since": "0.1"
                },
                "fill": {
                    "brief": "fill input Matrix with value",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "float"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "fill value",
                                "type": "float"
                            }
                        ]
                    ],
                    "doc_name": "matrix.fill",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 4(\n|\n[matrix.randu]\n|\n[matrix.fill 0.1]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "fill"
                    ],
                    "param_names": [
                        "v"
                    ],
                    "params": [
                        "fill value"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "fill value",
                            "name": "v",
                            "type": "float"
                        }
                    ],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.identity"
                    ],
                    "since": "0.1"
                },
                "fromList": {
                    "brief": "create Matrix from list values",
                    "doc_args": {
                        "pd_types": [
                            "list"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "element values",
                                "type": "list"
                            }
                        ]
                    ],
                    "doc_name": "matrix.from_list",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2 10 20 30 40(\n|\n[matrix.from_list]\n|\n[ui.display @display_type=1]",
                    "param_names": [
                        "v"
                    ],
                    "params": [
                        "element values"
                    ],
                    "pd_aliases": [
                        "list->matrix"
                    ],
                    "pd_name": "from_list",
                    "pddoc_args": [
                        {
                            "info": "element values",
                            "name": "v",
                            "type": "list"
                        }
                    ],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.to_list"
                    ],
                    "since": "0.1"
                },
                "full": {
                    "brief": "create Matrix filled with specified value",
                    "doc_args": {
                        "pd_types": [
                            "int",
                            "int",
                            "float"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "number of rows",
                                "type": "int"
                            }
                        ],
                        [
                            {
                                "info": "number of columns",
                                "type": "int"
                            }
                        ],
                        [
                            {
                                "info": "fill value",
                                "type": "float"
                            }
                        ]
                    ],
                    "doc_name": "matrix.full",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[B] [2 2 4(      [F]\n|   |            |..\n[matrix.full 2 3 -5]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "fill"
                    ],
                    "param_names": [
                        "m",
                        "n",
                        "v"
                    ],
                    "params": [
                        "number of rows",
                        "number of columns",
                        "fill value"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "number of rows",
                            "minvalue": 0,
                            "name": "m",
                            "type": "int"
                        },
                        {
                            "info": "number of columns",
                            "minvalue": 0,
                            "name": "n",
                            "type": "int"
                        },
                        {
                            "info": "fill value",
                            "name": "v",
                            "type": "float"
                        }
                    ],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.fill"
                    ],
                    "since": "0.1"
                },
                "ge": {
                    "brief": "element-wise greater equal comparasion",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "matrix to compare: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "matrix to compare",
                                "type": "data"
                            },
                            {
                                "info": "float to compare",
                                "type": "float"
                            }
                        ]
                    ],
                    "doc_name": "matrix.>=",
                    "doc_outlets": [
                        {
                            "info": "compare result - matrix with 1 and 0",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2 1 2 3 4(             [F]\n|                         |.\n[matrix.>= Matrix 2 2 4 3 2 1]\n|\n[ui.display @display_type=1]",
                    "overloads": {
                        "param_names": [
                            "v"
                        ],
                        "params": [
                            [
                                "float to compare"
                            ]
                        ]
                    },
                    "param_names": [
                        "b"
                    ],
                    "params": [
                        "matrix to compare"
                    ],
                    "pd_aliases": [],
                    "pd_name": ">=",
                    "pddoc_args": [
                        {
                            "info": "matrix to compare (Matrix NROWS NCOLS ...) or float to compare",
                            "name": "b",
                            "type": "list"
                        }
                    ],
                    "return": [
                        "compare result - matrix with 1 and 0"
                    ],
                    "see": [
                        "matrix.>"
                    ],
                    "since": "0.1"
                },
                "gt": {
                    "brief": "element-wise greater then comparasion",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "matrix to compare: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "matrix to compare",
                                "type": "data"
                            },
                            {
                                "info": "float to compare",
                                "type": "float"
                            }
                        ]
                    ],
                    "doc_name": "matrix.>",
                    "doc_outlets": [
                        {
                            "info": "compare result - matrix with 1 and 0",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2 1 2 3 4(             [F]\n|                         |.\n[matrix.> Matrix 2 2 4 3 2 1]\n|\n[ui.display @display_type=1]",
                    "overloads": {
                        "param_names": [
                            "v"
                        ],
                        "params": [
                            [
                                "float to compare"
                            ]
                        ]
                    },
                    "param_names": [
                        "b"
                    ],
                    "params": [
                        "matrix to compare"
                    ],
                    "pd_aliases": [],
                    "pd_name": ">",
                    "pddoc_args": [
                        {
                            "info": "matrix to compare (Matrix NROWS NCOLS ...) or float to compare",
                            "name": "b",
                            "type": "list"
                        }
                    ],
                    "return": [
                        "compare result - matrix with 1 and 0"
                    ],
                    "see": [
                        "matrix.==",
                        "matrix.>="
                    ],
                    "since": "0.1"
                },
                "hist": {
                    "brief": "produce a matrix containing column histogram counts",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "number of bins",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.hist",
                    "doc_outlets": [
                        {
                            "info": "hist matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[100 1( [1 100000(  [A A_HIST0 size=20 yr=0..1]\n|       |\n|       |\n|       |\n[matrix.randn]\n|\n|\n|\n|\n[matrix.hist 30]\n|\n[matrix->list]\n|\n[array.set A_HIST0 @normalize]",
                    "param_names": [
                        "n_bins"
                    ],
                    "params": [
                        "number of bins"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "number of bins",
                            "minvalue": 0,
                            "name": "n_bins",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "hist matrix"
                    ],
                    "since": "0.1"
                },
                "identity": {
                    "brief": "create identity Matrix",
                    "doc_args": {
                        "pd_types": [
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "number of rows and columns",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.identity",
                    "doc_outlets": [
                        {
                            "info": "identity matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[B] [3( [F]\n|   |   |\n[matrix.identity 2]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "fill",
                        "indentity"
                    ],
                    "param_names": [
                        "n"
                    ],
                    "params": [
                        "number of rows and columns"
                    ],
                    "pd_aliases": [
                        "matrix.id"
                    ],
                    "pddoc_args": [
                        {
                            "info": "number of rows and columns",
                            "minvalue": 0,
                            "name": "n",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "identity matrix"
                    ],
                    "see": [
                        "matrix.zeros",
                        "matrix.ones"
                    ],
                    "since": "0.1"
                },
                "insert_col": {
                    "brief": "insert vector at specified matrix column",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "int",
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "col number",
                                "type": "int"
                            }
                        ],
                        [
                            {
                                "info": "col to insert: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "col to insert",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.insert_col",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 3(                [B]\n|                    |\n[matrix.zeros] [F]   [matrix.col 10 20 30]\n|              |.    |..\n[matrix.insert_col    1 3 1 2 4 6]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "insert"
                    ],
                    "param_names": [
                        "n",
                        "r"
                    ],
                    "params": [
                        "col number",
                        "col to insert"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "col number",
                            "minvalue": 0,
                            "name": "n",
                            "type": "int"
                        },
                        {
                            "info": "col to insert",
                            "name": "r",
                            "type": "list"
                        }
                    ],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.col"
                    ],
                    "since": "0.1"
                },
                "insert_row": {
                    "brief": "insert vector at specified matrix row",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "int",
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "row number",
                                "type": "int"
                            }
                        ],
                        [
                            {
                                "info": "row to insert: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "row to insert",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.insert_row",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 3(                  [B]\n|                      |\n[matrix.zeros]  [F]    [matrix.row 10 20 30]\n|               |.     |..\n[matrix.insert_row     1 1 3 1 2 3]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "insert"
                    ],
                    "param_names": [
                        "n",
                        "r"
                    ],
                    "params": [
                        "row number",
                        "row to insert"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "row number",
                            "minvalue": 0,
                            "name": "n",
                            "type": "int"
                        },
                        {
                            "info": "row to insert",
                            "name": "r",
                            "type": "list"
                        }
                    ],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.row"
                    ],
                    "since": "0.1"
                },
                "inverse": {
                    "brief": "inverse square matrix",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.inverse",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2 1 2 3 4(\n|\n[matrix.inverse]\n|             |\n|             [ui.display @display_type=1]\n|\n[matrix.inverse]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "inverse",
                        "solve"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [
                        "matrix.-1"
                    ],
                    "pddoc_args": [],
                    "return": [
                        "new matrix"
                    ],
                    "since": "0.1"
                },
                "le": {
                    "brief": "element-wise less equal comparasion",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "matrix to compare: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "matrix to compare",
                                "type": "data"
                            },
                            {
                                "info": "float to compare",
                                "type": "float"
                            }
                        ]
                    ],
                    "doc_name": "matrix.<=",
                    "doc_outlets": [
                        {
                            "info": "compare result - matrix with 1 and 0",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2 1 2 3 4(              [F]\n|                          |.\n[matrix.<= Matrix 2 2 4 3 2 1]\n|\n[ui.display @display_type=1]",
                    "overloads": {
                        "param_names": [
                            "v"
                        ],
                        "params": [
                            [
                                "float to compare"
                            ]
                        ]
                    },
                    "param_names": [
                        "b"
                    ],
                    "params": [
                        "matrix to compare"
                    ],
                    "pd_aliases": [],
                    "pd_name": "<=",
                    "pddoc_args": [
                        {
                            "info": "matrix to compare (Matrix NROWS NCOLS ...) or float to compare",
                            "name": "b",
                            "type": "list"
                        }
                    ],
                    "return": [
                        "compare result - matrix with 1 and 0"
                    ],
                    "see": [
                        "matrix.<"
                    ],
                    "since": "0.1"
                },
                "linspace": {
                    "brief": "generate row with linearly spaced N elements",
                    "doc_args": {
                        "pd_types": [
                            "float",
                            "float",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "start element value",
                                "type": "float"
                            }
                        ],
                        [
                            {
                                "info": "including end element value",
                                "type": "float"
                            }
                        ],
                        [
                            {
                                "info": "number of element, if 0, means default value 100 elements",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.linspace",
                    "doc_outlets": [
                        {
                            "info": "matrix row",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[B] [0 10 5(\n|   |\n[matrix.linspace 1 2 3]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "linspace"
                    ],
                    "param_names": [
                        "start",
                        "end",
                        "N"
                    ],
                    "params": [
                        "start element value",
                        "including end element value",
                        "number of element, if 0, means default value 100 elements"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "start element value",
                            "name": "start",
                            "type": "float"
                        },
                        {
                            "info": "including end element value",
                            "name": "end",
                            "type": "float"
                        },
                        {
                            "info": "number of element, if 0, means default value 100 elements",
                            "minvalue": 0,
                            "name": "N",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "matrix row"
                    ],
                    "see": [
                        "matrix.logspace"
                    ],
                    "since": "0.1"
                },
                "load": {
                    "brief": "load matrix from CSV format",
                    "doc_args": {
                        "pd_types": [
                            "symbol"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "filename to load",
                                "type": "symbol"
                            }
                        ]
                    ],
                    "doc_name": "matrix.load",
                    "doc_outlets": [
                        {
                            "info": "loaded matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 4(\n|\n[matrix.randu]         [symbol test_matrix2.csv(\n|                      |.\n[matrix.save test_matrix.csv]\n|\n[ui.display @display_type=1]\n\n\n\n\n\n[test_matrix.csv(      [test_matrix2.csv(\n|                      |\n[symbol                ]\n|\n[matrix.load]\n|\n[ui.display @display_type=1]",
                    "param_names": [
                        "fname"
                    ],
                    "params": [
                        "filename to load"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "filename to load",
                            "name": "fname",
                            "type": "symbol"
                        }
                    ],
                    "return": [
                        "loaded matrix"
                    ],
                    "see": [
                        "matrix.save"
                    ],
                    "since": "0.1"
                },
                "logspace": {
                    "brief": "generate row with N elements spaced logarithmically",
                    "doc_args": {
                        "pd_types": [
                            "float",
                            "float",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "start from 10^A",
                                "type": "float"
                            }
                        ],
                        [
                            {
                                "info": "end and including 10^B",
                                "type": "float"
                            }
                        ],
                        [
                            {
                                "info": "number of element, if 0, means default value 50 elements",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.logspace",
                    "doc_outlets": [
                        {
                            "info": "matrix row",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[B] [1 3 5( [1 3 20(\n|   |       |\n[matrix.logspace 1 2 10]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "logspace"
                    ],
                    "param_names": [
                        "A",
                        "B",
                        "N"
                    ],
                    "params": [
                        "start from 10^A",
                        "end and including 10^B",
                        "number of element, if 0, means default value 50 elements"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "start from 10^A",
                            "name": "A",
                            "type": "float"
                        },
                        {
                            "info": "end and including 10^B",
                            "name": "B",
                            "type": "float"
                        },
                        {
                            "info": "number of element, if 0, means default value 50 elements",
                            "minvalue": 0,
                            "name": "N",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "matrix row"
                    ],
                    "see": [
                        "matrix.linspace"
                    ],
                    "since": "0.1"
                },
                "lt": {
                    "brief": "element-wise less then comparasion",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "matrix to compare: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "matrix to compare",
                                "type": "data"
                            },
                            {
                                "info": "float to compare",
                                "type": "float"
                            }
                        ]
                    ],
                    "doc_name": "matrix.<",
                    "doc_outlets": [
                        {
                            "info": "compare result - matrix with 1 and 0",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2 1 2 3 4(         [F]\n|                     |.\n[matrix.< Matrix 2 2 4 3 2 1]\n|\n[ui.display @display_type=1]",
                    "overloads": {
                        "param_names": [
                            "v"
                        ],
                        "params": [
                            [
                                "float to compare"
                            ]
                        ]
                    },
                    "param_names": [
                        "b"
                    ],
                    "params": [
                        "matrix to compare"
                    ],
                    "pd_aliases": [],
                    "pd_name": "<",
                    "pddoc_args": [
                        {
                            "info": "matrix to compare (Matrix NROWS NCOLS ...) or float to compare",
                            "name": "b",
                            "type": "list"
                        }
                    ],
                    "return": [
                        "compare result - matrix with 1 and 0"
                    ],
                    "see": [
                        "matrix.<="
                    ],
                    "since": "0.1"
                },
                "matmul": {
                    "brief": "matrix product",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "Matrix to multiply: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix to multiply",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.matmul",
                    "doc_outlets": [
                        {
                            "info": "result Matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2(              [2 4(\n|                  |\n[matrix.fill 2]    [matrix.randu] [2 3 1 2 3 4 5 6(\n|                  |.             |.\n[matrix.dot Matrix       2 2 1 0 0 1]\n|\n[ui.display @display_type=1]",
                    "param_names": [
                        "m"
                    ],
                    "params": [
                        "Matrix to multiply"
                    ],
                    "pd_aliases": [
                        "matrix.dot"
                    ],
                    "pddoc_args": [
                        {
                            "info": "Matrix to multiply",
                            "name": "m",
                            "type": "list"
                        }
                    ],
                    "return": [
                        "result Matrix"
                    ],
                    "see": [
                        "matrix.mul"
                    ],
                    "since": "0.1"
                },
                "max": {
                    "brief": "returns maximum in Matrix",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.max",
                    "doc_outlets": [
                        {
                            "info": "maximum element",
                            "type": "float"
                        }
                    ],
                    "example": "\n[2 3(\n|\n[matrix.randu]\n|\n[matrix.max]\n|\n[F digits=8]",
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "maximum element"
                    ],
                    "see": [
                        "matrix.min"
                    ],
                    "since": "0.1"
                },
                "mean": {
                    "brief": "mean matrix value",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.mean",
                    "doc_outlets": [
                        {
                            "info": "mean value",
                            "type": "float"
                        }
                    ],
                    "example": "\n[3 5(\n|\n[matrix.randu]\n|\n[matrix.mean]\n|\n[F digits=8]",
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "mean value"
                    ],
                    "see": [
                        "matrix.mean_row",
                        "matrix.mean_col"
                    ],
                    "since": "0.1"
                },
                "mean_col": {
                    "brief": "mean value for each matrix column",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.mean_col",
                    "doc_outlets": [
                        {
                            "info": "row vector with mean value for each column",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 4(\n|\n[matrix.randu]\n|\n[matrix.mean_col]\n|\n[ui.display @display_type=1]",
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "row vector with mean value for each column"
                    ],
                    "see": [
                        "matrix.mean",
                        "matrix.mean_row"
                    ],
                    "since": "0.1"
                },
                "mean_row": {
                    "brief": "mean value for each matrix row",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.mean_row",
                    "doc_outlets": [
                        {
                            "info": "column vector with mean value for each row",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 4(\n|\n[matrix.randu]\n|\n[matrix.mean_row]\n|\n[ui.display @display_type=1]",
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "column vector with mean value for each row"
                    ],
                    "see": [
                        "matrix.mean",
                        "matrix.mean_col"
                    ],
                    "since": "0.1"
                },
                "median": {
                    "brief": "median matrix value",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.median",
                    "doc_outlets": [
                        {
                            "info": "median value",
                            "type": "float"
                        }
                    ],
                    "example": "\n[1 9 1 1 1 2 2 3 3 6 10(\n|               |\n[matrix.median] [matrix.mean]\n|               |\n[F digits=8]    [F digits=8]",
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "median value"
                    ],
                    "see": [
                        "matrix.median_row",
                        "matrix.median_col"
                    ],
                    "since": "0.1"
                },
                "median_col": {
                    "brief": "median matrix value for each column",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.median_col",
                    "doc_outlets": [
                        {
                            "info": "median value row",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 3 1 2 3 4 5 6 7 8 9(\n|\n[matrix.median_col]\n|\n[ui.display @display_type=1]",
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "median value row"
                    ],
                    "see": [
                        "matrix.median_row",
                        "matrix.median"
                    ],
                    "since": "0.1"
                },
                "median_row": {
                    "brief": "median matrix value for each row",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.median_row",
                    "doc_outlets": [
                        {
                            "info": "median value column",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 3 1 2 3 4 5 6 7 8 9(\n|\n[matrix.median_row]\n|\n[ui.display @display_type=1]",
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "median value column"
                    ],
                    "see": [
                        "matrix.median_col",
                        "matrix.median"
                    ],
                    "since": "0.1"
                },
                "min": {
                    "brief": "returns minimum value in Matrix",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.min",
                    "doc_outlets": [
                        {
                            "info": "minimum element",
                            "type": "float"
                        }
                    ],
                    "example": "\n[2 3(\n|\n[matrix.randu]\n|\n[matrix.min]\n|\n[F digits=8]",
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "minimum element"
                    ],
                    "see": [
                        "matrix.max"
                    ],
                    "since": "0.1"
                },
                "mul": {
                    "brief": "element-wise matrix multiplication",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "matrix to multiply element-wise: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "matrix to multiply element-wise",
                                "type": "data"
                            },
                            {
                                "info": "float to multiply all elements",
                                "type": "float"
                            }
                        ]
                    ],
                    "doc_name": "matrix.mul",
                    "doc_outlets": [
                        {
                            "info": "result matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2 1 2 3 4(   [2 2 4 3 2 1(\n|               |.\n[matrix.mul    10]\n|\n[ui.display @display_type=1]",
                    "overloads": {
                        "param_names": [
                            "v"
                        ],
                        "params": [
                            [
                                "float to multiply all elements"
                            ]
                        ]
                    },
                    "param_names": [
                        "b"
                    ],
                    "params": [
                        "matrix to multiply element-wise"
                    ],
                    "pd_aliases": [
                        "matrix.*"
                    ],
                    "pddoc_args": [
                        {
                            "info": "matrix to multiply element-wise (Matrix NROWS NCOLS ...) or float to multiply all elements",
                            "name": "b",
                            "type": "list"
                        }
                    ],
                    "return": [
                        "result matrix"
                    ],
                    "see": [
                        "matrix.add",
                        "matrix.dot"
                    ]
                },
                "ncols": {
                    "brief": "return number of columns in Matrix",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.ncols",
                    "doc_outlets": [
                        {
                            "info": "number of columns",
                            "type": "int"
                        }
                    ],
                    "example": "\n[bang( [4 2(\n|      |\n[matrix.new 3 8]\n|\n[matrix.ncols]\n|\n[F]",
                    "keywords": [
                        "size"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "number of columns"
                    ],
                    "see": [
                        "matrix.nrows",
                        "matrix.size"
                    ],
                    "since": "0.1"
                },
                "ne": {
                    "brief": "element-wise matrix not equal comparasion",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "float"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "float to compare",
                                "type": "float"
                            },
                            {
                                "info": "matrix to compare (NROWS NCOLS ...)",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.!=",
                    "doc_outlets": [
                        {
                            "info": "compare result - matrix with 1 and 0",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2 1 2 3 4(         [F]   [2 2 1 4 3 6(\n|                     |.    |.\n[matrix.!= Matrix 2 2 1 2 3 4]\n|\n[ui.display @display_type=1]",
                    "overloads": {
                        "param_names": [
                            "b"
                        ],
                        "params": [
                            [
                                "matrix to compare"
                            ]
                        ]
                    },
                    "param_names": [
                        "v"
                    ],
                    "params": [
                        "float to compare"
                    ],
                    "pd_aliases": [],
                    "pd_name": "!=",
                    "pddoc_args": [
                        {
                            "info": "float to compare or matrix to compare (Matrix NROWS NCOLS ...)",
                            "name": "v",
                            "type": "list"
                        }
                    ],
                    "return": [
                        "compare result - matrix with 1 and 0"
                    ],
                    "see": [
                        "matrix.=="
                    ],
                    "since": "0.1"
                },
                "nrows": {
                    "brief": "return number of rows in Matrix",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.nrows",
                    "doc_outlets": [
                        {
                            "info": "number of rows",
                            "type": "int"
                        }
                    ],
                    "example": "\n[bang( [10 16(\n|      |\n[matrix.new 3 8]\n|\n[matrix.nrows]\n|\n[F]",
                    "keywords": [
                        "size"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "number of rows"
                    ],
                    "see": [
                        "matrix.ncols",
                        "matrix.size"
                    ],
                    "since": "0.1"
                },
                "ones": {
                    "brief": "create Matrix with ones",
                    "doc_args": {
                        "pd_types": [
                            "int",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "number of rows",
                                "type": "int"
                            }
                        ],
                        [
                            {
                                "info": "number of columns",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.ones",
                    "doc_outlets": [
                        {
                            "info": "matrix filled with ones",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[B] [F]  [2 2(  [F]\n|   |    |      |.\n[matrix.ones  2 3]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "fill",
                        "ones"
                    ],
                    "param_names": [
                        "m",
                        "n"
                    ],
                    "params": [
                        "number of rows",
                        "number of columns"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "number of rows",
                            "minvalue": 0,
                            "name": "m",
                            "type": "int"
                        },
                        {
                            "info": "number of columns",
                            "minvalue": 0,
                            "name": "n",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "matrix filled with ones"
                    ],
                    "see": [
                        "matrix.zeros",
                        "matrix.ones_like",
                        "matrix.full"
                    ],
                    "since": "0.1"
                },
                "ones_like": {
                    "brief": "create Matrix filled with ones with the same shape as input",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.ones_like",
                    "doc_outlets": [
                        {
                            "info": "new matrix filled with ones",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 3(\n|\n[matrix.randu] [2 2(\n|              |\n[matrix.ones_like]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "fill",
                        "ones"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "new matrix filled with ones"
                    ],
                    "see": [
                        "matrix.ones"
                    ],
                    "since": "0.1"
                },
                "randn": {
                    "brief": "generates Matrix using Gaussian distribution with zero mean and unit variance",
                    "doc_args": {
                        "pd_types": [
                            "int",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "number of rows",
                                "type": "int"
                            }
                        ],
                        [
                            {
                                "info": "number of columns",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.randn",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[B] [3 3( [F]  [F]\n|   |     |    |.\n[matrix.randn 2 2]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "random",
                        "generate",
                        "gauss"
                    ],
                    "param_names": [
                        "m",
                        "n"
                    ],
                    "params": [
                        "number of rows",
                        "number of columns"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "number of rows",
                            "minvalue": 0,
                            "name": "m",
                            "type": "int"
                        },
                        {
                            "info": "number of columns",
                            "minvalue": 0,
                            "name": "n",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.randu"
                    ],
                    "since": "0.1"
                },
                "randu": {
                    "brief": "generates Matrix with uniform distribution [0-1]",
                    "doc_args": {
                        "pd_types": [
                            "int",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "number of rows",
                                "type": "int"
                            }
                        ],
                        [
                            {
                                "info": "number of columns",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.randu",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[B] [3 3( [F]  [F]\n|   |     |    |.\n[matrix.randu 2 2]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "random",
                        "generate"
                    ],
                    "param_names": [
                        "m",
                        "n"
                    ],
                    "params": [
                        "number of rows",
                        "number of columns"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "number of rows",
                            "minvalue": 0,
                            "name": "m",
                            "type": "int"
                        },
                        {
                            "info": "number of columns",
                            "minvalue": 0,
                            "name": "n",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.randn"
                    ],
                    "since": "0.1"
                },
                "range": {
                    "brief": "matrix range (difference between max and min)",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.range",
                    "doc_outlets": [
                        {
                            "info": "range value",
                            "type": "float"
                        }
                    ],
                    "example": "\n[3 3 1 2 3 4 5 6 7 8 9(\n|\n[matrix.range]\n|\n[F]",
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "range value"
                    ],
                    "see": [
                        "matrix.range_col",
                        "matrix.range_row"
                    ],
                    "since": "0.1"
                },
                "range_col": {
                    "brief": "matrix column range (difference between max and min)",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.range_col",
                    "doc_outlets": [
                        {
                            "info": "range value row",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 3 1 2 3 4 5 6 7 8 9(\n|\n[matrix.range_col]\n|\n[ui.display @display_type=1]",
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "range value row"
                    ],
                    "see": [
                        "matrix.range",
                        "matrix.range_row"
                    ],
                    "since": "0.1"
                },
                "range_row": {
                    "brief": "matrix row range (difference between max and min)",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.range_row",
                    "doc_outlets": [
                        {
                            "info": "range value column",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 3 1 2 3 4 5 6 7 8 9(\n|\n[matrix.range_row]\n|\n[ui.display @display_type=1]",
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "range value column"
                    ],
                    "see": [
                        "matrix.range",
                        "matrix.range_col"
                    ],
                    "since": "0.1"
                },
                "rank": {
                    "brief": "rank of the matrix",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.rank",
                    "doc_outlets": [
                        {
                            "info": "rank",
                            "type": "int"
                        }
                    ],
                    "example": "\n[2 2 1 1 0 1( [2 2 0 1 0 0( [2 2 0 0 0 0(\n|             |             |\n|             |             |\n|             |             |\n[matrix.new                 ]\n|             |\n[matrix.rank] [ui.display @display_type=1]\n|\n[F]",
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "rank"
                    ],
                    "since": "0.1"
                },
                "remove_col": {
                    "brief": "remove specified matrix column",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "column number",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.remove_col",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 3 1 2 3 4 5 6 7 8 9(  [F]\n|                        |.\n[matrix.remove_col        0]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "remove"
                    ],
                    "param_names": [
                        "n"
                    ],
                    "params": [
                        "column number"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "column number",
                            "minvalue": 0,
                            "name": "n",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.insert_col"
                    ],
                    "since": "0.1"
                },
                "remove_row": {
                    "brief": "remove specified matrix row",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "row number",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.remove_row",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 3 1 2 3 4 5 6 7 8 9(  [F]\n|                        |.\n[matrix.remove_row        0]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "remove"
                    ],
                    "param_names": [
                        "n"
                    ],
                    "params": [
                        "row number"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "row number",
                            "minvalue": 0,
                            "name": "n",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.insert_row"
                    ],
                    "since": "0.1"
                },
                "replace": {
                    "brief": "replace specific elements with a new value",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "float",
                            "float"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "old value",
                                "type": "float"
                            }
                        ],
                        [
                            {
                                "info": "new value",
                                "type": "float"
                            }
                        ]
                    ],
                    "doc_name": "matrix.replace",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 3(\n|\n[matrix.identity] [F]   [F]\n|                 |.    |..\n[matrix.replace      0  0.1]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "replace"
                    ],
                    "param_names": [
                        "old_value",
                        "new_value"
                    ],
                    "params": [
                        "old value",
                        "new value"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "old value",
                            "name": "old_value",
                            "type": "float"
                        },
                        {
                            "info": "new value",
                            "name": "new_value",
                            "type": "float"
                        }
                    ],
                    "return": [
                        "new matrix"
                    ],
                    "since": "0.1"
                },
                "reshape": {
                    "brief": "change size while keeping elements",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "int",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "new number of rows",
                                "type": "int"
                            }
                        ],
                        [
                            {
                                "info": "new number of columns",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.reshape",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 3 1 2 3 4 5 6(\n|\n[list->matrix] [F]   [F]\n|              |.    |..\n[matrix.reshape     3 2]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "reshape"
                    ],
                    "param_names": [
                        "nrows",
                        "ncols"
                    ],
                    "params": [
                        "new number of rows",
                        "new number of columns"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "new number of rows",
                            "name": "nrows",
                            "type": "int"
                        },
                        {
                            "info": "new number of columns",
                            "name": "ncols",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "new matrix"
                    ],
                    "since": "0.1"
                },
                "resize": {
                    "brief": "change size while keeping elements and preserving layout",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "int",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "new number of rows",
                                "type": "int"
                            }
                        ],
                        [
                            {
                                "info": "new number of columns",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.resize",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2 1 2 3 4(\n|\n[list->matrix] [F]  [F]\n|              |.   |..\n[matrix.resize       3 3]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "size"
                    ],
                    "param_names": [
                        "nrows",
                        "ncols"
                    ],
                    "params": [
                        "new number of rows",
                        "new number of columns"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "new number of rows",
                            "name": "nrows",
                            "type": "int"
                        },
                        {
                            "info": "new number of columns",
                            "name": "ncols",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.size"
                    ],
                    "since": "0.1"
                },
                "row": {
                    "brief": "create Matrix row with specified values",
                    "doc_args": {
                        "pd_types": [
                            "list"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "row values",
                                "type": "list"
                            }
                        ]
                    ],
                    "doc_name": "matrix.row",
                    "doc_outlets": [
                        {
                            "info": "row",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[B] [1 2 3 4(\n|   |\n[matrix.row 2 2 2]\n|       |\n[print] [ui.display @display_type=1]",
                    "param_names": [
                        "v"
                    ],
                    "params": [
                        "row values"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "row values",
                            "name": "v",
                            "type": "list"
                        }
                    ],
                    "return": [
                        "row"
                    ],
                    "see": [
                        "matrix.col"
                    ],
                    "since": "0.1"
                },
                "row_at": {
                    "brief": "get specified row",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "row number",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.row_at",
                    "doc_outlets": [
                        {
                            "info": "matrix row",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 3 1 2 3 4 5 6 7 8 9(  [F]\n|                        |.\n[matrix.row_at 1           ]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "row",
                        "col"
                    ],
                    "param_names": [
                        "n"
                    ],
                    "params": [
                        "row number"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "row number",
                            "minvalue": 0,
                            "name": "n",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "matrix row"
                    ],
                    "see": [
                        "matrix.row_at"
                    ],
                    "since": "0.1"
                },
                "save": {
                    "brief": "save matrix in CSV format",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "symbol"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "filename to save",
                                "type": "symbol"
                            }
                        ]
                    ],
                    "doc_name": "matrix.save",
                    "doc_outlets": [
                        {
                            "info": "original matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 4(\n|\n[matrix.randu]         [symbol test_matrix2.csv(\n|                      |.\n[matrix.save test_matrix.csv]\n|\n[ui.display @display_type=1]\n\n\n\n\n\n[test_matrix.csv(      [test_matrix2.csv(\n|                      |\n|                      |\n[symbol                ]\n|\n[matrix.load]\n|\n[ui.display @display_type=1]",
                    "param_names": [
                        "fname"
                    ],
                    "params": [
                        "filename to save"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "filename to save",
                            "name": "fname",
                            "type": "symbol"
                        }
                    ],
                    "return": [
                        "original matrix"
                    ],
                    "see": [
                        "matrix.load"
                    ],
                    "since": "0.1"
                },
                "shift_col": {
                    "brief": "shift Matrix elements by N positions in each column",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "shift value (can be negative)",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.shift_col",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 3 1 2 3 4 5 6 7 8 9(\n|\n[list->matrix] [F]\n|              |.\n[matrix.shift_col 1]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "shift"
                    ],
                    "param_names": [
                        "n"
                    ],
                    "params": [
                        "shift value (can be negative)"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "shift value (can be negative)",
                            "name": "n",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "shift_row"
                    ],
                    "since": "0.1"
                },
                "shift_row": {
                    "brief": "shift Matrix elements by N positions in each row",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "shift value (can be negative)",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.shift_row",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 3 1 2 3 4 5 6 7 8 9(\n|\n[list->matrix] [F]\n|              |.\n[matrix.shift_row 1]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "shift"
                    ],
                    "param_names": [
                        "n"
                    ],
                    "params": [
                        "shift value (can be negative)"
                    ],
                    "pd_aliases": [
                        "matrix.>>"
                    ],
                    "pddoc_args": [
                        {
                            "info": "shift value (can be negative)",
                            "name": "n",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "shift_col"
                    ],
                    "since": "0.1"
                },
                "sign": {
                    "brief": "element-wise signum function",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.sign",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 4(\n|\n[matrix.randn]\n|\n[matrix.sign]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "exponent"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "new matrix"
                    ],
                    "since": "0.1"
                },
                "sin": {
                    "brief": "element-wise sine",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.sin",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[0 6.4 100(         [A ARR_SIN size=100 w=260 h=130 yr=-1..1]\n|\n[matrix.linspace]\n|\n[matrix.sin]\n|\n[matrix->list]\n|\n[array.set ARR_SIN]",
                    "keywords": [
                        "sin",
                        "trigonometric"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.asin"
                    ],
                    "since": "0.1"
                },
                "sinh": {
                    "brief": "element-wise hyperbolic sine",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.sinh",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[-2 2 100(         [A ARR_SINH size=100 w=260 h=130 yr=-4..4]\n|\n[matrix.linspace]\n|\n[matrix.sinh]\n|\n[matrix->list]\n|\n[array.set ARR_SINH]",
                    "keywords": [
                        "sinh",
                        "trigonometric"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.asinh"
                    ],
                    "since": "0.1"
                },
                "size": {
                    "brief": "return Matrix size (rows, columns)",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.size",
                    "doc_outlets": [
                        {
                            "info": "list (rows, columns)",
                            "type": "std::vector<int>"
                        }
                    ],
                    "example": "\n[bang( [2 2 1 2 3 4(\n|      |\n[matrix.new 10 16]\n|\n[matrix.size]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "size",
                        "dimensions"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "list (rows, columns)"
                    ],
                    "see": [
                        "matrix.nrows",
                        "matrix.ncols"
                    ],
                    "since": "0.1"
                },
                "solve": {
                    "brief": "Solve a system of linear equations, A*X = B, where X is unknown",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "can be a vector or matrix: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "can be a vector or matrix",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.solve",
                    "doc_outlets": [
                        {
                            "info": "result X matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2 1 2 3 4(\n|\n[matrix.solve 2 2 1 2 3 4]\n|\n[ui.display @display_type=1]",
                    "param_names": [
                        "b"
                    ],
                    "params": [
                        "can be a vector or matrix"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "can be a vector or matrix",
                            "name": "b",
                            "type": "list"
                        }
                    ],
                    "return": [
                        "result X matrix"
                    ],
                    "since": "0.1"
                },
                "stddev": {
                    "brief": "standart deviation for matrix values",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "if 0 given, N-1 normalization used, if 1 - N",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.stddev",
                    "doc_outlets": [
                        {
                            "info": "standart deviation",
                            "type": "float"
                        }
                    ],
                    "example": "\n[5 5(          [5 5(\n|              |\n[matrix.randu] [matrix.randn]\n|              |\n[matrix.stddev ]\n|\n[F digits=8]",
                    "param_names": [
                        "norm_type"
                    ],
                    "params": [
                        "if 0 given, N-1 normalization used, if 1 - N"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "enum": "0 1",
                            "info": "if 0 given, N-1 normalization used, if 1 - N",
                            "name": "norm_type",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "standart deviation"
                    ],
                    "see": [
                        "matrix.stddev_col",
                        "matrix.stddev_row"
                    ],
                    "since": "0.1"
                },
                "stddev_col": {
                    "brief": "standart deviation matrix value for each column",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "if 0 given, N-1 normalization used, if 1 - N",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.stddev_col",
                    "doc_outlets": [
                        {
                            "info": "standart deviation value row",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 3 3 3 3 3 4 5 3 2 6(\n|\n[matrix.stddev_col]\n|\n[ui.display @display_type=1]",
                    "param_names": [
                        "norm_type"
                    ],
                    "params": [
                        "if 0 given, N-1 normalization used, if 1 - N"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "enum": "0 1",
                            "info": "if 0 given, N-1 normalization used, if 1 - N",
                            "name": "norm_type",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "standart deviation value row"
                    ],
                    "see": [
                        "matrix.stddev",
                        "matrix.stddev_row"
                    ],
                    "since": "0.1"
                },
                "stddev_row": {
                    "brief": "standart deviation matrix value for each row",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "if 0 given, N-1 normalization used, if 1 - N",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.stddev_row",
                    "doc_outlets": [
                        {
                            "info": "standart deviation value col",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 3 3 3 3 3 4 5 3 2 6(\n|\n[matrix.stddev_row]\n|\n[ui.display @display_type=1]",
                    "param_names": [
                        "norm_type"
                    ],
                    "params": [
                        "if 0 given, N-1 normalization used, if 1 - N"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "enum": "0 1",
                            "info": "if 0 given, N-1 normalization used, if 1 - N",
                            "name": "norm_type",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "standart deviation value col"
                    ],
                    "see": [
                        "matrix.stddev",
                        "matrix.stddev_col"
                    ],
                    "since": "0.1"
                },
                "sub": {
                    "brief": "element-wise matrix subtraction",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "subtrahend matrix: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "subtrahend matrix",
                                "type": "data"
                            },
                            {
                                "info": "float to add to all matrix elements",
                                "type": "float"
                            }
                        ]
                    ],
                    "doc_name": "matrix.sub",
                    "doc_outlets": [
                        {
                            "info": "result Matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 4(         [2 4(\n|             |\n[matrix.ones] [matrix.randu]\n|             |.\n[matrix.add   1]\n|\n[ui.display @display_type=1]",
                    "overloads": {
                        "param_names": [
                            "v"
                        ],
                        "params": [
                            [
                                "float to add to all matrix elements"
                            ]
                        ]
                    },
                    "param_names": [
                        "m"
                    ],
                    "params": [
                        "subtrahend matrix"
                    ],
                    "pd_aliases": [
                        "matrix.-"
                    ],
                    "pddoc_args": [
                        {
                            "info": "subtrahend matrix (Matrix NROWS NCOLS ...) or float to add to all matrix elements",
                            "name": "m",
                            "type": "list"
                        }
                    ],
                    "return": [
                        "result Matrix"
                    ],
                    "see": [
                        "matrix.add"
                    ],
                    "since": "0.1"
                },
                "swap_cols": {
                    "brief": "swaps specified columns in matrix",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "int",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "first column index",
                                "type": "int"
                            }
                        ],
                        [
                            {
                                "info": "second column index",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.swap_cols",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 3 1 2 3 4 5 6 7 8 9(\n|\n[matrix.swap_cols 0 2]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "swap"
                    ],
                    "param_names": [
                        "a",
                        "b"
                    ],
                    "params": [
                        "first column index",
                        "second column index"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "first column index",
                            "minvalue": 0,
                            "name": "a",
                            "type": "int"
                        },
                        {
                            "info": "second column index",
                            "minvalue": 0,
                            "name": "b",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.swap_rows"
                    ],
                    "since": "0.1"
                },
                "swap_rows": {
                    "brief": "swaps specified rows in matrix",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "int",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "first row index",
                                "type": "int"
                            }
                        ],
                        [
                            {
                                "info": "second row index",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.swap_rows",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 3 1 2 3 4 5 6 7 8 9(\n|\n[matrix.swap_rows 1 2]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "swap"
                    ],
                    "param_names": [
                        "a",
                        "b"
                    ],
                    "params": [
                        "first row index",
                        "second row index"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "first row index",
                            "minvalue": 0,
                            "name": "a",
                            "type": "int"
                        },
                        {
                            "info": "second row index",
                            "minvalue": 0,
                            "name": "b",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.swap_cols"
                    ],
                    "since": "0.1"
                },
                "tan": {
                    "brief": "element-wise tangent",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.tan",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[-10 10 100(         [A ARR_TAN size=100 w=260 h=130 yr=-10..10]\n|\n[matrix.linspace]\n|\n[matrix.tan]\n|\n[matrix->list]\n|\n[array.set ARR_TAN]",
                    "keywords": [
                        "tangent",
                        "trigonometric"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.atan",
                        "matrix.sin"
                    ],
                    "since": "0.1"
                },
                "tanh": {
                    "brief": "element-wise hyperbolic tangent",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.tanh",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[-3 3 100(         [A ARR_TANH size=100 w=260 h=130 yr=-1..1]\n|\n[matrix.linspace]\n|\n[matrix.tanh]\n|\n[matrix->list]\n|\n[array.set ARR_TANH]",
                    "keywords": [
                        "tangent",
                        "trigonometric",
                        "hyperbolic"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "new matrix"
                    ],
                    "see": [
                        "matrix.atanh"
                    ],
                    "since": "0.1"
                },
                "toList": {
                    "brief": "convert Matrix to list",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.to_list",
                    "doc_outlets": [
                        {
                            "info": "elements list",
                            "type": "list"
                        },
                        {
                            "info": "matrix size",
                            "type": "list"
                        }
                    ],
                    "example": "\n[2 2 1 2 3 4(\n|\n[list->matrix]\n|\n[matrix.to_list      ]\n|                   ^|\n[ui.display]      [ui.display]",
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [
                        "matrix->list"
                    ],
                    "pd_name": "to_list",
                    "pddoc_args": [],
                    "return": [
                        "elements list",
                        "matrix size"
                    ],
                    "see": [
                        "matrix.from_list"
                    ],
                    "since": "0.1"
                },
                "transpose": {
                    "brief": "transpose Matrix",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.transpose",
                    "doc_outlets": [
                        {
                            "info": "transposed matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 3 1 2 3 4 5 6 7 8 9(\n|\n[matrix.transpose]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "transpose"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [
                        "matrix.t"
                    ],
                    "pddoc_args": [],
                    "return": [
                        "transposed matrix"
                    ],
                    "since": "0.1"
                },
                "trunc_exp": {
                    "brief": "element-wise base-e exponent, truncated to avoid infinity",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.trunc_exp",
                    "doc_outlets": [
                        {
                            "info": "new matrix",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2 10 50 100 150(      [2 2 10 50 100 150(\n|                        |\n[matrix.trunc_exp]       [matrix.exp]\n|                        |\n[ui.display @display_type=1]",
                    "keywords": [
                        "exponent"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "new matrix"
                    ],
                    "since": "0.1"
                },
                "vectorise": {
                    "brief": "generate a column vector or row vector from matrix",
                    "doc_args": {
                        "pd_types": [
                            "data",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ],
                        [
                            {
                                "info": "if == 0, generates column, if 1 - row",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.vectorise",
                    "doc_outlets": [
                        {
                            "info": "column or row",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[2 2 1 2 3 4(  [T]\n|              |.\n[matrix.vectorise 1]\n|\n[ui.display @display_type=1]",
                    "param_names": [
                        "dim"
                    ],
                    "params": [
                        "if == 0, generates column, if 1 - row"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "enum": "0 1",
                            "info": "if == 0, generates column, if 1 - row",
                            "name": "dim",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "column or row"
                    ],
                    "since": "0.1"
                },
                "zeros": {
                    "brief": "create Matrix with zeros",
                    "doc_args": {
                        "pd_types": [
                            "int",
                            "int"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "number of rows",
                                "type": "int"
                            }
                        ],
                        [
                            {
                                "info": "number of columns",
                                "type": "int"
                            }
                        ]
                    ],
                    "doc_name": "matrix.zeros",
                    "doc_outlets": [
                        {
                            "info": "matrix filled with zeros",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[B] [F]  [2 2(  [F]\n|   |    |      |.\n[matrix.zeros 2 3]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "fill",
                        "zeros"
                    ],
                    "param_names": [
                        "m",
                        "n"
                    ],
                    "params": [
                        "number of rows",
                        "number of columns"
                    ],
                    "pd_aliases": [],
                    "pddoc_args": [
                        {
                            "info": "number of rows",
                            "minvalue": 0,
                            "name": "m",
                            "type": "int"
                        },
                        {
                            "info": "number of columns",
                            "minvalue": 0,
                            "name": "n",
                            "type": "int"
                        }
                    ],
                    "return": [
                        "matrix filled with zeros"
                    ],
                    "see": [
                        "matrix.ones",
                        "matrix.full"
                    ],
                    "since": "0.1"
                },
                "zeros_like": {
                    "brief": "create Matrix filled with zeros with the same shape as input",
                    "doc_args": {
                        "pd_types": [
                            "data"
                        ]
                    },
                    "doc_class": {
                        "pd_args": "NROWS NCOLS ...",
                        "pd_name": "matrix"
                    },
                    "doc_inlets": [
                        [
                            {
                                "info": "Matrix data constructor: NROWS NCOLS ...",
                                "type": "list"
                            },
                            {
                                "info": "Matrix data",
                                "type": "data"
                            }
                        ]
                    ],
                    "doc_name": "matrix.zeros_like",
                    "doc_outlets": [
                        {
                            "info": "new matrix filled with zeros",
                            "type": "Matrix"
                        }
                    ],
                    "example": "\n[3 3(\n|\n[matrix.randu] [2 2(\n|              |\n[matrix.zeros_like]\n|\n[ui.display @display_type=1]",
                    "keywords": [
                        "fill",
                        "zeros"
                    ],
                    "param_names": [],
                    "params": [],
                    "pd_aliases": [],
                    "pddoc_args": [],
                    "return": [
                        "new matrix filled with zeros"
                    ],
                    "see": [
                        "matrix.zeros"
                    ],
                    "since": "0.1"
                }
            },
            "param_names": [],
            "params": [],
            "pd_aliases": [],
            "pd_class": "matrix",
            "pddoc": {
                "arguments": [
                    {
                        "info": "number of rows",
                        "name": "m",
                        "type": "int"
                    },
                    {
                        "info": "number of columns",
                        "name": "n",
                        "type": "int"
                    }
                ],
                "example": "\n[B] [3 4 10 20 30(\n|   |\n|   |     [set 3 2 6 5 4 3 2 1(\n|   |     |\n[matrix.new 2 2 1 2 3 4]\n|  |\n|  [set $1( [B]\n|  |        |\n|  [matrix.new]\n|  |\n[ui.display @display_type=1]",
                "inlets": [
                    [
                        {
                            "info": "output current data",
                            "type": "bang"
                        },
                        {
                            "info": "(on Matrix) set new data value and output it",
                            "type": "data"
                        },
                        {
                            "info": "list: int int (number of rows/number of columns)",
                            "type": "list"
                        }
                    ]
                ],
                "methods": [
                    {
                        "info": "set new data without output",
                        "name": "set"
                    }
                ]
            },
            "return": [],
            "since": "0.1"
        }
    ],
    "library": "matrix",
    "license": "GPLv3",
    "param_names": [],
    "params": [],
    "pd_aliases": [],
    "return": [],
    "version": "0.1"
}