<?xml version='1.0' encoding='utf-8'?>
<pddoc xmlns:xi="http://www.w3.org/2001/XInclude" version="1.0">
    <object name="snd.play~">
        <title>snd.play~</title>
        <meta>
            <authors>
                <author>Serge Poltavsky</author>
            </authors>
            <description>Sound file player on steriods</description>
            <license>GPL3 or later</license>
            <library>ceammc</library>
            <category>snd</category>
            <keywords>play sound</keywords>
            <since>0.9.7</since>
        </meta>
        <info>
            <par>Supports variable speed playing, pausing, seeking, time-stretching and
            resampling</par>
        </info>
        <arguments>
            <argument name="N" type="int" minvalue="1" maxvalue="32">number of output
            channels</argument>
            <argument name="NAME" type="symbol">absolute or relative to patch soundfile
            name</argument>
        </arguments>
        <properties>
            <property name="@n" type="int" access="initonly" default="2" minvalue="1"
            maxvalue="32">number of output channels</property>
            <property name="@name" type="symbol" default="">absolute or relative to patch soundfile
            name</property>
            <property name="@begin" type="atom" default="0" units="sample sec msec smpte">start
            playing position</property>
            <property name="@end" type="atom" default="-1" units="sample sec msec smpte">end
            playing position</property>
            <property name="@loop" type="bool" default="0">play in the loop</property>
            <property name="@sync" type="symbol" default="now" enum="now defer wait">sync mode.
            'now': immidiately starts playing (abort previous) after receving start message.
            'defer': wait until previous playing will be done, that starts new. 'wait': do not
            playing until previous playing will not finished</property>
            <property name="@stretch" type="bool" default="0">stretch mode. If true: use
            timestretch and pitch-shifting</property>
            <property name="@pitch" type="float" default="1" minvalue="0.25" maxvalue="4">
            pitch-shift correction. Used only if @stretch mode enabled.</property>
            <property name="@speed" type="float" default="1" minvalue="0.25" maxvalue="4">playing
            speed. If @stretch mode is disabled (default): changes playing speed (also with pitch
            change respectively) in realtime. If @stretch mode is enabled: can only change speed
            (without pitch change) only on the next playing cycle</property>
            <property name="@on_err" type="symbol" default="">the error send destination. For example, if soundfile was not found,
            the message [not_found( will be send to this global name</property>
        </properties>
        <methods>
            <!-- open -->
            <method name="open">sets @name property
            <param name="FILENAME" type="symbol" required="true">absolute or relative to patch soundfile
            name</param></method>
            <!-- start -->
            <method name="start">start playing 
            <param name="FLAG" type="bool" required="false">start/stop flag. If true or ommited:
            start, if false: stop.</param></method>
            <!-- stop -->
            <method name="stop">stop playing 
            <param name="FLAG" type="bool" required="false">start/stop flag. If true or ommited:
            stop, if false: start.</param></method>
            <!-- pause -->
            <method name="pause">pause 
            <param name="FLAG" type="bool" required="false">pause/resume flag. If true or ommited:
            pause, if false: resume.</param></method>
            <!-- ff -->
            <method name="ff">fast forward by specified amount of timne 
            <param name="TIME" type="atom" required="false">time amount. Can't be in seconds,
            milliseconds, samples, SMPTE. If the time unit is not specified treat float values as
            samples. If argument is not specified: jump one second forward.</param></method>
            <!-- rewind -->
            <method name="rewind">move backwards by specified amount of time (relative value) 
            <param name="TIME" type="atom" required="false">time amount. Can't be in seconds,
            milliseconds, samples, SMPTE. If the time unit is not specified treat float values as
            milliseconds. If arguments is not specified jump: one second backward.</param></method>
            <!-- seek -->
            <method name="seek">move to specified time (absolute value) 
            <param name="TIME" type="atom" required="false">Time position. Can't be in seconds,
            milliseconds, samples, SMPTE. If the time unit is not specified treat float values as
            milliseconds. If arguments is not specified jump: seek to the
            beginning</param></method>
        </methods>
        <inlets>
            <inlet type="control">
                <xinfo on="float">1: start playing, 0: stop</xinfo>
            </inlet>
        </inlets>
        <outlets dynamic="true">
            <outlet type="audio" number="1">first output channel</outlet>
            <outlet type="audio" number="...">... output channel</outlet>
            <outlet type="audio" number="n">n-th output channel</outlet>
            <outlet type="control" number="n+1">control output</outlet>
        </outlets>
        <example>
            <pdascii>
<![CDATA[
[B]
|
[openpanel #a]

 [open %CEAMMC%/guitar1.wav, 1 #b(

 [@name %CEAMMC%/sound/loop_breakbeat.flac, 1(
 |
 |  [@name %CEAMMC%/sound/vla-overtones-3.mp3, 1(
 |  |
[expand_env #x]

 [T]      [T]           [T]        [ui.hsl #c]
 |        |             |          |
 | [stop( [pause $1 #d( [@loop $1( [@speed $1(
 | |                    |          |
 | | [start(            |          |
 | | |                  |          |
[snd.play~ 2 @loop 1 #z            ]
| ^|                    ^^|
|  |                    [ui.dt]
|  |.
[ui.hgain2~ {i:2,o:2}] [ui.dsp~]
*|*
[dac~]

[snd.play~-seek] [snd.play~-resamp] [snd.play~-err]

#c 0.25 4 @show_value 1

[X a->x] [X b->x]  [X d->z]  [X x->z]
]]>
            </pdascii>
            <pdascii id="seek">
<![CDATA[
[symbol #c(                [msg.onclose bang]
|                          |
[expand_env] [seek 500 #a( [stop #b(
|
| [seek(     [seek 500ms(  [seek 1.5sec( [seek 15000samp(
| |          |             |              |
| |          |             |              |
| |          |             |              |
[snd.play~ 1 @loop 1 #z                   ]
|*
[ui.hgain2~ {i:2,o:2}] [ui.dsp~]
*|*
[dac~]

#c %CEAMMC%/guitar1.wav, 1
[X a->z] [X b->z]
]]>
            </pdascii>
            <pdascii id="resamp">
<![CDATA[
/*change in Audio Preferences samplerate, then play both variants*/


[symbol #c(
|
|                     [open #c(
|                     |
|                     |
|                     |
[expand_env]          [expand_env]
|                     |
[snd.play~ 1]         [readsf~]
|*                    |*
[ui.hgain2~ {i:2,o:2}] [ui.dsp~]
*|*
[dac~]

#c %CEAMMC%/guitar1.wav, 1
[X a->z] [X b->z]
]]>
            </pdascii>
            <pdascii id="err">
<![CDATA[
[r snd-err]
|
[ui.dt]

[open not_exists.wav, 1(
|
[snd.play~ 1 @on_err snd-err]
]]>
            </pdascii>
        </example>
    </object>
</pddoc>
