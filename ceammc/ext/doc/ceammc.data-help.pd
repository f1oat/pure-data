#N canvas 0 0 715 500 12;
#X obj 20 53 ui.link @title index @url ../index-help.pd;
#X text 62 50 ::;
#X obj 79 53 ui.link @title ceammc @url ceammc-help.pd;
#X obj 30 116 data.dict;
#X text 175 116 dictionary container: store values by key;
#X obj 30 143 data.fifo;
#X text 175 143 First-In-First-Out (FIFO) queue data container;
#X obj 30 170 data.float;
#X text 175 170 robust float object;
#X obj 30 197 data.int;
#X text 175 197 robust int object;
#X obj 30 224 data.list;
#X text 175 224 list container;
#X obj 30 251 data.mlist;
#X text 175 251 multidimensial list container;
#X obj 30 278 data.set;
#X text 175 278 container that store unique elements;
#X obj 30 305 data.set2list;
#X text 175 305 converts set to list;
#X obj 30 332 dict.contains;
#X text 175 332 predicate to check dict contains key;
#X obj 30 359 dict.keys;
#X text 175 359 get list of dict keys;
#X obj 30 386 dict.size;
#X text 175 386 dictionary size;
#X obj 30 413 dict.values;
#X text 175 413 dictionary values as mlist;
#X obj 30 440 mlist.flatten;
#X text 175 440 flatten nested mlist;
#X obj 30 467 set.contains;
#X text 175 467 check if specified element is in set;
#X obj 30 494 set.diff;
#X text 175 494 difference between two sets;
#X obj 30 521 set.equal;
#X text 175 521 checks if two sets are equal (contains same elements);
#X obj 30 548 set.intersect;
#X text 175 548 output intersection of given sets;
#X obj 30 575 set.size;
#X text 175 575 get number of elements in set;
#X obj 30 602 set.symdiff;
#X text 175 602 symmetric difference between two sets;
#X obj 30 629 set.union;
#X text 175 629 output union of given sets;
#X obj 1 1 cnv 5 712 40 empty empty ceammc::data 20 20 0 20 -104026
-4096 0;
#X obj 1 656 cnv 5 712 40 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 20 666 library: ceammc;