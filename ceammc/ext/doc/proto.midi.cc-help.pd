#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 561 50 cnv 1 204 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 561 50 raw midi CC encoder/parser;
#X obj 1 1 cnv 5 765 40 empty empty proto.midi.cc 20 20 0 20 -104026
-4096 0;
#X obj 646 11 proto.midi.cc;
#X obj 50 118 proto.midi.cc.pan;
#X obj 50 147 proto.midi.cc.vol;
#X obj 20 196 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 201 cnv 5 98 26 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 236 @list;
#X text 245 236 output as list.;
#X obj 20 275 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 280 cnv 5 73 26 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 315 bank;
#X text 245 315 send CC Bank Select. Arguments are:;
#X obj 255 338 cnv 1 31 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 338 [CH]: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 361 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 361 BANK: bank. Type: int. Range: 0\...16384\.;
#X msg 110 386 bank:i;
#X text 245 386 same as [bank(.;
#X msg 110 413 bank:lsb;
#X text 245 413 send CC Bank Select LSB. Arguments are:;
#X obj 255 436 cnv 1 31 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 436 [CH]: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 459 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 459 BANK: bank LSB. Type: int. Range: 0\...127\.;
#X msg 110 484 bank:msb;
#X text 245 484 send CC Bank Select MSB. Arguments are:;
#X obj 255 507 cnv 1 31 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 507 [CH]: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 530 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 530 BANK: bank MSB. Type: int. Range: 0\...127\.;
#X msg 110 555 bendsens;
#X text 245 555 send Pitch bend sensitivity message. Arguments are:;
#X obj 255 578 cnv 1 21 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 578 CH: midi channel. Type: int. Min value: 0\.;
#X msg 110 603 exp.;
#X text 245 603 send fine CC Expression message. Arguments are:;
#X obj 255 626 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 626 CHAN: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 649 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 649 VAL: expression value. Type: int. Range: 0\...127\.;
#X msg 110 674 exp:f;
#X text 245 674 send CC normalized Expression message. Arguments are:;
#X obj 255 697 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 697 CHAN: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 720 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 720 VAL: expression value. Type: float. Range: 0\...1\.;
#X msg 110 745 exp:i;
#X text 245 745 send 14-bit CC Expression message. Arguments are:;
#X obj 255 768 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 768 CHAN: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 791 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 791 VAL: expression. Type: int. Range: 0\...16384\.;
#X msg 110 816 exp~;
#X text 245 816 send coarse CC Expression message. Arguments are:;
#X obj 255 839 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 839 CHAN: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 862 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 862 VAL: expression value. Type: int. Range: 0\...127\.;
#X msg 110 887 hold;
#X text 245 887 send CC Hold pedal message. Arguments are:;
#X obj 255 910 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 910 [CHAN]: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 933 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 933 BOOL: on/off value. Type: int. Allowed values: 0 \,
1\.;
#X msg 110 958 mod.;
#X text 245 958 send fine CC Modulation message. Arguments are:;
#X obj 255 981 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 981 CHAN: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 1004 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1004 VAL: modulation value. Type: int. Range: 0\...127\.;
#X msg 110 1029 mod:f;
#X text 245 1029 send CC normalized Modulation message. Arguments are:;
#X obj 255 1052 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1052 CHAN: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 1075 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1075 VAL: modulation value. Type: float. Range: 0\...1\.;
#X msg 110 1100 mod:i;
#X text 245 1100 send 14-bit CC Modulation message. Arguments are:;
#X obj 255 1123 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1123 CHAN: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 1146 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1146 VAL: modulation. Type: int. Range: 0\...16384\.;
#X msg 110 1171 mod~;
#X text 245 1171 send coarse CC Modulation message. Arguments are:;
#X obj 255 1194 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1194 CHAN: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 1217 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1217 VAL: modulation value. Type: int. Range: 0\...127\.;
#X msg 110 1242 notes_off;
#X text 245 1242 send All Notes Off message. Arguments are:;
#X obj 255 1265 cnv 1 21 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1265 CH: midi channel. if missing or -1: send to all channels.
Type: int. Range: 0\...15\.;
#X msg 110 1305 pan.;
#X text 245 1305 send Pan CC fine message. Arguments are:;
#X obj 255 1328 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1328 CHAN: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 1351 cnv 1 28 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1351 PAN: pan value. Type: int. Range: 0\...127\.;
#X msg 110 1376 pan:f;
#X text 245 1376 send CC Pan messages (coarse and fine). Arguments
are:;
#X obj 255 1399 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1399 CHAN: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 1422 cnv 1 28 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1422 PAN: pan value. -1 means left \, 0: center \, +1:
right. Type: float. Range: -1\...1\.;
#X msg 110 1462 pan:i;
#X text 245 1462 send Pan CC message. Args: CHAN PAN(0\..0x3fff) or
CHAN MSB(0\..127) LSB(0\..127). In case of 14 bit value 0 means left
\, 0x2000: center and 0x3fff: right.;
#X msg 110 1517 panic;
#X text 245 1517 send All Notes Off message. Arguments are:;
#X obj 255 1540 cnv 1 21 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1540 CH: midi channel. if missing or -1: send to all channels.
Type: int. Range: 0\...15\.;
#X msg 110 1580 pan~;
#X text 245 1580 send Pan CC coarse message. Arguments are:;
#X obj 255 1603 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1603 CHAN: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 1626 cnv 1 28 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1626 PAN: pan value. Type: int. Range: 0\...127\.;
#X msg 110 1651 portamento;
#X text 245 1651 send CC portamento message. Arguments are:;
#X obj 255 1674 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1674 [CHAN]: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 1697 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1697 VALUE: portamento amount. Type: int. Range: 0\...127\.;
#X msg 110 1722 portswitch;
#X text 245 1722 send CC portamento switch message. Arguments are:;
#X obj 255 1745 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1745 [CHAN]: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 1768 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1768 BOOL: on/off value. Type: int. Allowed values: 0 \,
1\.;
#X msg 110 1793 sostenuto;
#X text 245 1793 send CC sostenuto pedal message. Arguments are:;
#X obj 255 1816 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1816 [CHAN]: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 1839 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1839 BOOL: on/off value. Type: int. Allowed values: 0 \,
1\.;
#X msg 110 1864 sound_off;
#X text 245 1864 send All Sound Off message. Arguments are:;
#X obj 255 1887 cnv 1 31 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1887 [CH]: midi channel. if missing or -1: send to all
channels. Type: int. Range: 0\...15\.;
#X msg 110 1927 tune.;
#X text 245 1927 send RPN fine tuning request (in cents). Arguments
are:;
#X obj 255 1950 cnv 1 31 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1950 [CH]: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 1973 cnv 1 44 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1973 CENTS: tuning in cents. Type: float. Range: -100\...100\.;
#X msg 110 1998 tune:c;
#X text 245 1998 send RPN fine tuning request (in cents). Arguments
are:;
#X obj 255 2021 cnv 1 31 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2021 [CH]: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 2044 cnv 1 44 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2044 CENTS: tuning in cents. Type: float. Range: -100\...100\.;
#X msg 110 2069 tune:s;
#X text 245 2069 send RPN tuning request in semitones. Arguments are:;
#X obj 255 2092 cnv 1 31 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2092 [CH]: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 2115 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2115 SEMI: tuning in semitones. Type: float. Range: -64\...63\.;
#X msg 110 2140 tunebank;
#X text 245 2140 send RPN tune bank select. Arguments are:;
#X obj 255 2163 cnv 1 31 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2163 [CH]: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 2186 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2186 BANK: tuning bank. Type: int. Range: 0\...127\.;
#X msg 110 2211 tuneprog;
#X text 245 2211 send RPN tune prog change. Arguments are:;
#X obj 255 2234 cnv 1 31 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2234 [CH]: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 2257 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2257 PROG: tuning program. Type: int. Range: 0\...127\.;
#X msg 110 2282 tunesel;
#X text 245 2282 send RPN tune select. Arguments are:;
#X obj 255 2305 cnv 1 31 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2305 [CH]: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 2328 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2328 BANK: tuning bank. Type: int. Range: 0\...127\.;
#X obj 255 2351 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2351 PROG: tuning program. Type: int. Range: 0\...127\.;
#X msg 110 2376 tune~;
#X text 245 2376 send RPN coarse tuning request (in semitones). Arguments
are:;
#X obj 255 2399 cnv 1 31 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2399 [CH]: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 2422 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2422 SEMI: tuning in semitones. Type: int. Range: -64\...63\.;
#X msg 110 2447 volume.;
#X text 245 2447 send fine CC Volume message. Arguments are:;
#X obj 255 2470 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2470 CHAN: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 2493 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2493 VOL: pan value. Type: int. Range: 0\...127\.;
#X msg 110 2518 volume:f;
#X text 245 2518 send CC normalized Volume message. Arguments are:;
#X obj 255 2541 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2541 CHAN: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 2564 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2564 VOL: volume value. Type: float. Range: 0\...1\.;
#X msg 110 2589 volume:i;
#X text 245 2589 send 14-bit CC Volume message. Arguments are:;
#X obj 255 2612 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2612 CHAN: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 2635 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2635 VOL: value. Type: int. Range: 0\...16384\.;
#X msg 110 2660 volume~;
#X text 245 2660 send coarse CC Volume message. Arguments are:;
#X obj 255 2683 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2683 CHAN: midi channel. Type: int. Range: 0\...15\.;
#X obj 255 2706 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2706 VOL: pan value. Type: int. Range: 0\...127\.;
#X obj 20 2741 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 2746 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 2747 1\.;
#X text 150 2747 *float*;
#X text 245 2747 raw midi input bytes.;
#X text 150 2767 *list*;
#X text 245 2767 raw midi input bytes.;
#X obj 20 2797 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 2802 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 2803 1\.;
#X text 245 2803 float: raw midi output or parsed messages with selector
(output format is the same as for corresponding methods).;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title proto @url ceammc.proto-help.pd;
#X obj 1 2868 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 2871 library: ceammc v0.9.6;
#N canvas 10 2890 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.6;
#X text 10 54 object:;
#X text 120 54 proto.midi.cc;
#X text 10 76 category:;
#X text 120 76 proto;
#X text 10 98 since:;
#X text 120 98 0.9.4;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 parser \, midi;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 2890 pd info;