#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 442 50 cnv 1 323 21 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 442 50 verbose information about current canvas;
#X obj 1 1 cnv 5 765 40 empty empty canvas.current 20 20 0 20 -104026
-4096 0;
#X obj 639 11 canvas.current;
#X msg 50 118 @name?;
#X msg 155 118 @dir?;
#X msg 261 118 @width?;
#X msg 69 147 @root?;
#X msg 174 147 @args?;
#X msg 280 147 @abstraction?;
#X msg 98 176 @x?;
#X msg 194 176 @y?;
#X msg 299 176 @height?;
#X obj 117 205 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 50 234 canvas.current;
#X obj 50 262 ui.display @display_type 1 @size 150 18;
#X obj 20 302 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 307 cnv 5 98 26 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 120 312 @name;
#X text 240 312 (readonly) Get canvas name. Type: symbol;
#X msg 120 339 @dir;
#X text 240 339 (readonly) Get canvas directory (only if top level or
abstraction). Type: symbol;
#X msg 120 376 @args;
#X text 240 376 (readonly) Get canvas creation arguments. Type: list;
#X msg 120 403 @root;
#X text 240 403 (readonly) Get 1 if canvas is top-level (window).
Type: int;
#X msg 120 430 @abstraction;
#X text 240 430 (readonly) Get 1 if canvas is abstraction. Type: int;
#X msg 120 457 @size;
#X text 240 457 (readonly) Get canvas dimensions. If root canvas
(window) return window size \, if subpatch return Graph on Parent
size. Type: list;
#X msg 120 508 @font;
#X text 240 508 (readonly) Get canvas font size. Type: float;
#X msg 120 535 @paths;
#X text 240 535 (readonly) Get canvas search paths. Type: list;
#X msg 120 562 @width;
#X text 240 562 (readonly) Get canvas width (window or GOP). Type:
int;
#X msg 120 589 @height;
#X text 240 589 (readonly) Get canvas height (window or GOP). Type:
int;
#X msg 120 616 @x;
#X text 240 616 (readonly) Get canvas x-pos (window or GOP). Type:
int;
#X msg 120 643 @y;
#X text 240 643 (readonly) Get canvas y-pos (window or GOP). Type:
int;
#X obj 20 680 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 685 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144 -49933
0;
#X text 120 690 1\.;
#X text 240 690 property request.;
#X text 150 708 *bang*;
#X text 240 708 output dict with all properties.;
#X obj 20 736 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 741 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 120 746 1\.;
#X text 240 746 dict or property output;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title patch @url ceammc.patch-help.pd;
#X obj 1 794 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 797 library: ceammc v0.7;
#X text 525 809 see also:;
#X obj 601 809 patch.args;
#X obj 688 809 canvas.top;
#N canvas 10 816 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.7;
#X text 10 54 object:;
#X text 120 54 canvas.current;
#X text 10 76 category:;
#X text 120 76 patch;
#X text 10 98 since:;
#X text 120 98 0.4;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3;
#X text 10 164 keywords:;
#X text 120 164 canvas;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 816 pd info;
#X connect 4 0 14 0;
#X connect 7 0 14 0;
#X connect 10 0 14 0;
#X connect 13 0 14 0;
#X connect 5 0 14 0;
#X connect 8 0 14 0;
#X connect 11 0 14 0;
#X connect 6 0 14 0;
#X connect 9 0 14 0;
#X connect 12 0 14 0;
#X connect 14 0 15 0;