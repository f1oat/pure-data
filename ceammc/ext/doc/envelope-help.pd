#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 622 50 cnv 1 143 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 622 50 Envelope data type;
#X obj 1 1 cnv 5 765 40 empty empty envelope 20 20 0 20 -104026 -4096
0;
#X obj 403 11 ceammc/envelope;
#X obj 537 11 ceammc/env;
#X obj 635 11 env;
#X obj 682 11 envelope;
#X obj 210 80 cnv 1 555 190 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 Data type for sound envelope. Contains points specified
by time and value. Points could have stop property - to execute oly
part of envelope and stop on this point. So multisegment envelopes
could be created;
#X text 215 150 Point also has segment type property \, that defines
following segment curve - it could be *step* \, *line* (default) or
*exp* (exponential);
#X text 215 205 Exponential segment also has curve property: if 0 -
(linear) <0 (concave \, negatively curved) >0 (convex \, positively
curved);
#X msg 50 298 ar 100 200 \, bang;
#X msg 232 298 exp 0 30 -2 1 100 -4 0 40 4 0.5 30 2 0 \, bang;
#X msg 69 327 adsr 10 30 60 150 \, bang;
#X msg 318 327 line 0.1 40 0.9 20 0.3 60 0 \, bang;
#X msg 88 356 ear 10 -2 60 -2 \, bang;
#X msg 318 356 sigmoid 0 40 14 1 100 8 0 \, bang;
#X msg 107 385 eadsr 20 -5 70 -12 30 100 -7 \, bang;
#X msg 462 385 sin2 0 80 1 80 0 \, bang;
#X obj 50 414 envelope;
#X obj 50 442 env->array env_arr;
#N canvas 0 22 450 300 (subpatch) 0;
#X array env_arr 100 float 1;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 100 0 400 100 1;
#X restore 50 485 graph;
#X obj 20 617 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 622 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 657 1\.;
#X text 150 657 list;
#X obj 246 658 cnv 1 39 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 657 adsr: ADSR envelope: attack(ms) \, decay(ms) \, sustain(%)
\, release(ms).;
#X text 110 692 2\.;
#X text 150 692 list;
#X obj 246 693 cnv 1 31 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 692 asr: ASR envelope: attack(ms) \, release(ms) - with
sustain stop point.;
#X text 110 727 3\.;
#X text 150 727 list;
#X obj 246 728 cnv 1 24 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 727 ar: AR envelope: attack(ms) \, release(ms).;
#X text 110 747 4\.;
#X text 150 747 list;
#X obj 246 748 cnv 1 47 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 747 eadsr: exponential ADSR envelope: attack(ms) \, attack_curve
\, decay(ms) \, decay_curve \, sustain(%) \, release(ms) \, release_curve.;
#X text 110 797 5\.;
#X text 150 797 list;
#X obj 246 798 cnv 1 39 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 797 easr: exponential ASR envelope: attack(ms) \, attack_curve
\, release(ms) \, release_curve - with sustain stop point.;
#X text 110 832 6\.;
#X text 150 832 list;
#X obj 246 833 cnv 1 31 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 832 ear: exponential ASR envelope: attack(ms) \, attack_curve
\, release(ms) \, release_curve - no sustain point.;
#X obj 20 877 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 882 cnv 5 98 26 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 917 @length;
#X text 245 917 (readonly) Get total envelope time length. Type: float.
Units: ms. Default value: 0\. Min value: 0\.;
#X msg 110 959 @npoints;
#X text 245 959 (readonly) Get number of points. Type: int. Default
value: 0\. Min value: 0\.;
#X msg 110 1001 @points;
#X text 245 1001 (readonly) Get list of point times (ms). Type: list.;
#X msg 110 1030 @stops;
#X text 245 1030 (readonly) Get list of stop points. Type: list.;
#X msg 110 1059 @values;
#X text 245 1059 (readonly) Get list of point values. Type: list.;
#X obj 20 1098 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1103 cnv 5 73 26 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 1138 add_point;
#X text 245 1138 add envelope point. Arguments are:;
#X obj 255 1161 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1161 TIME: point time. Type: float. Min value: 0\. Units:
ms.;
#X obj 255 1184 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1184 VALUE: point value. Type: float.;
#X obj 255 1207 cnv 1 85 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1207 [IS_STOP=0]: is stop point. Type: int. Allowed values:
0 \, 1\.;
#X obj 255 1230 cnv 1 85 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1230 [TYPE=line]: segment type: step \, linear \, exponential
\, sin^2 or sigmoid curve. Type: symbol. Allowed values: step \, line
\, exp \, sin2 \, sigmoid.;
#X obj 255 1283 cnv 1 70 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1283 [CURVE=1]: exponential curve degree: 0 (linear) <0
(concave \, negatively curved) >0 (convex \, positively curved). Type:
float.;
#X msg 110 1338 add_seg;
#X text 245 1338 add segment to the end of envelope. On empty envelope
adds start point at 0ms and 0 value. Arguments are:;
#X obj 255 1376 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1376 TYPE: segment type. Type: symbol. Allowed values:
step \, line \, sin2 \, exp \, sigmoid.;
#X obj 255 1414 cnv 1 51 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1414 LENGTH: segment length. Type: float. Units: ms.;
#X obj 255 1437 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1437 VALUE: end segment value. Type: float.;
#X obj 255 1460 cnv 1 70 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1460 [CURVE=0]: curve (for exp and sigmoid type). Type:
float.;
#X msg 110 1485 adsr;
#X text 245 1485 creates ADSR envelope with one stop point. Arguments
are:;
#X obj 255 1508 cnv 1 53 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1508 ATTACK: attack time. Type: float. Min value: 0\. Units:
ms.;
#X obj 255 1531 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1531 DECAY: decay time. Type: float. Min value: 0\. Units:
ms.;
#X obj 255 1554 cnv 1 59 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1554 SUSTAIN: sustain level. Type: float. Range: 0\...100\.
Units: %.;
#X obj 255 1592 cnv 1 59 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1592 RELEASE: release time. Type: float. Min value: 0\.
Units: ms.;
#X msg 110 1617 ar;
#X text 245 1617 creates AR envelope without stop points. Arguments
are:;
#X obj 255 1640 cnv 1 53 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1640 ATTACK: attack time. Type: float. Min value: 0\. Units:
ms.;
#X obj 255 1663 cnv 1 59 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1663 RELEASE: release time. Type: float. Min value: 0\.
Units: ms.;
#X msg 110 1688 asr;
#X text 245 1688 creates ASR envelope with one stop point. Arguments
are:;
#X obj 255 1711 cnv 1 53 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1711 ATTACK: attack time. Type: float. Min value: 0\. Units:
ms.;
#X obj 255 1734 cnv 1 59 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1734 RELEASE: release time. Type: float. Min value: 0\.
Units: ms.;
#X msg 110 1759 clear;
#X text 245 1759 remove all envelope points.;
#X msg 110 1786 eadsr;
#X text 245 1786 creates exponential ADSR envelope with one stop point.
Arguments are:;
#X obj 255 1824 cnv 1 53 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1824 ATTACK: attack time. Type: float. Min value: 0\. Units:
ms.;
#X obj 255 1847 cnv 1 98 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1847 ATTACK_CURVE: attack segment curve. Type: float.;
#X obj 255 1870 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1870 DECAY: decay time. Type: float. Min value: 0\. Units:
ms.;
#X obj 255 1893 cnv 1 90 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1893 DECAY_CURVE: decay segment curve. Type: float.;
#X obj 255 1916 cnv 1 59 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1916 SUSTAIN: sustain level. Type: float. Range: 0\...100\.
Units: %.;
#X obj 255 1954 cnv 1 59 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1954 RELEASE: release time. Type: float. Min value: 0\.
Units: ms.;
#X obj 255 1977 cnv 1 105 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1977 RELEASE_CURVE: release segment curve. Type: float.;
#X msg 110 2002 ear;
#X text 245 2002 creates exponential AR envelope without stop points.
Arguments are:;
#X obj 255 2040 cnv 1 53 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2040 ATTACK: attack time. Type: float. Units: ms.;
#X obj 255 2063 cnv 1 98 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2063 ATTACK_CURVE: attack segment curve. Type: float.;
#X obj 255 2086 cnv 1 59 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2086 RELEASE: release time. Type: float. Units: ms.;
#X obj 255 2109 cnv 1 105 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2109 RELEASE_CURVE: release segment curve. Type: float.;
#X msg 110 2134 easr;
#X text 245 2134 creates exponential AR envelope with one stop point.
Arguments are:;
#X obj 255 2172 cnv 1 53 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2172 ATTACK: attack time. Type: float. Min value: 0\. Units:
ms.;
#X obj 255 2195 cnv 1 98 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2195 ATTACK_CURVE: attack segment curve. Type: float.;
#X obj 255 2218 cnv 1 59 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2218 RELEASE: release time. Type: float. Min value: 0\.
Units: ms.;
#X obj 255 2241 cnv 1 105 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2241 RELEASE_CURVE: release segment curve. Type: float.;
#X msg 110 2266 exp;
#X text 245 2266 creates exponential-segmented envelope with arbitrary
number of segments. Arguments are:;
#X obj 255 2304 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2304 VAL0: begin value. Type: float.;
#X obj 255 2327 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2327 LEN0: line length. Type: float. Min value: 1\. Units:
ms.;
#X obj 255 2350 cnv 1 52 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2350 CURVE0: segment curve. Type: float.;
#X obj 255 2373 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2373 VAL1: value. Type: float.;
#X obj 255 2396 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2396 [LEN1]: segment length. Type: float.;
#X obj 255 2419 cnv 1 62 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2419 [CURVE1]: segment curve. Type: float.;
#X obj 255 2442 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2442 [VAL2]: value. Type: float.;
#X msg 110 2467 line;
#X text 245 2467 creates line-segmented envelope with arbitrary number
of segments. Arguments are:;
#X obj 255 2505 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2505 VAL0: begin value. Type: float.;
#X obj 255 2528 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2528 LEN0: line length. Type: float. Min value: 1\. Units:
ms.;
#X obj 255 2551 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2551 VAL1: value. Type: float.;
#X obj 255 2574 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2574 [LEN1]: segment length. Type: float.;
#X obj 255 2597 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2597 [VAL2]: value. Type: float.;
#X msg 110 2622 remove_point;
#X text 245 2622 remove envelope point by specified time. Arguments
are:;
#X obj 255 2645 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2645 IDX: point index. Type: int. Min value: 0\.;
#X msg 110 2670 set_point;
#X text 245 2670 set point time and value. Arguments are:;
#X obj 255 2693 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2693 IDX: point index. Type: int. Min value: 0\.;
#X obj 255 2716 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2716 TIME: point time. Type: float. Min value: 0\. Units:
ms.;
#X obj 255 2739 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2739 VALUE: point value. Type: int. Min value: 0\.;
#X obj 255 2762 cnv 1 85 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2762 [IS_STOP=0]: stop point. Type: int. Allowed values:
0 \, 1\.;
#X msg 110 2787 set_point_time;
#X text 245 2787 set point time. Arguments are:;
#X obj 255 2810 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2810 IDX: point index. Type: int. Min value: 0\.;
#X obj 255 2833 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2833 TIME: point time. Type: float. Min value: 0\. Units:
ms.;
#X msg 110 2858 set_point_value;
#X text 245 2858 set point time. Arguments are:;
#X obj 255 2881 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2881 IDX: point index. Type: int. Min value: 0\.;
#X obj 255 2904 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2904 VALUE: point value. Type: int. Min value: 0\.;
#X msg 110 2929 set_seg_type;
#X text 245 2929 set segment type. Arguments are:;
#X obj 255 2952 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2952 IDX: segment index \, starting from 0\. Type: int.
Min value: 0\.;
#X obj 255 2990 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2990 TYPE: segment type. Type: symbol. Allowed values:
step \, line \, sin2 \, exp \, sigmoid.;
#X msg 110 3030 set_stop_point;
#X text 245 3030 set stop-point. Arguments are:;
#X obj 255 3053 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3053 IDX: point index. Type: int. Min value: 0\.;
#X obj 255 3076 cnv 1 59 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3076 IS_STOP: stop point. Type: int. Allowed values: 0
\, 1\.;
#X msg 110 3101 sigmoid;
#X text 245 3101 creates sigmoid-segmented envelope with arbitrary
number of segments. Arguments are:;
#X obj 255 3139 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3139 VAL0: begin value. Type: float.;
#X obj 255 3162 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3162 LEN0: line length. Type: float. Min value: 1\. Units:
ms.;
#X obj 255 3185 cnv 1 52 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3185 CURVE0: segment curve. Type: float.;
#X obj 255 3208 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3208 VAL1: value. Type: float.;
#X obj 255 3231 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3231 [LEN1]: segment length. Type: float.;
#X obj 255 3254 cnv 1 62 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3254 [CURVE1]: segment curve. Type: float.;
#X obj 255 3277 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3277 [VAL2]: value. Type: float.;
#X msg 110 3302 sin2;
#X text 245 3302 creates quadratic sine-segmented envelope with arbitrary
number of segments. Arguments are:;
#X obj 255 3340 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3340 VAL0: begin value. Type: float.;
#X obj 255 3363 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3363 LEN0: line length. Type: float. Min value: 1\. Units:
ms.;
#X obj 255 3386 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3386 VAL1: value. Type: float.;
#X obj 255 3409 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3409 [LEN1]: segment length. Type: float.;
#X obj 255 3432 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3432 [VAL2]: value. Type: float.;
#X msg 110 3457 step;
#X text 245 3457 creates step-segmented envelope with arbitrary number
of segments. Arguments are:;
#X obj 255 3495 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3495 VAL0: begin value. Type: float.;
#X obj 255 3518 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3518 LEN0: step length. Type: float. Min value: 1\. Units:
ms.;
#X obj 255 3541 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3541 VAL1: value. Type: float.;
#X obj 255 3564 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3564 [LEN1]: segment length. Type: float.;
#X obj 255 3587 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3587 [VAL2]: value. Type: float.;
#X msg 110 3612 *;
#X text 245 3612 multiply all envelope points to specified value. Arguments
are:;
#X obj 255 3650 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3650 VALUE: value. Type: float.;
#X msg 110 3675 +;
#X text 245 3675 add specified value to all envelope points. Arguments
are:;
#X obj 255 3698 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3698 VALUE: value. Type: float.;
#X msg 110 3723 >>;
#X text 245 3723 shift all envelope point by specified time in milliseconds.
Arguments are:;
#X obj 255 3761 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3761 SHIFT: value. Type: float. Units: ms.;
#X obj 20 3796 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 3801 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 3802 1\.;
#X text 150 3802 *bang*;
#X text 245 3802 outputs current envelope.;
#X text 150 3822 *data*;
#X text 245 3822 set new envelope and output it.;
#X obj 20 3852 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 3857 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 3858 1\.;
#X text 245 3858 data output.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title env @url ceammc.env-help.pd;
#X obj 1 3908 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 3911 library: ceammc v0.9.3;
#X text 505 3923 see also:;
#X obj 579 3923 env->array;
#X obj 667 3923 env->vline;
#N canvas 10 3930 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.3;
#X text 10 54 object:;
#X text 120 54 envelope;
#X text 10 76 category:;
#X text 120 76 env;
#X text 10 98 since:;
#X text 120 98 0.5;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 envelope;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 3930 pd info;
#X connect 11 0 19 0;
#X connect 13 0 19 0;
#X connect 15 0 19 0;
#X connect 17 0 19 0;
#X connect 19 0 20 0;
#X connect 12 0 19 0;
#X connect 14 0 19 0;
#X connect 16 0 19 0;
#X connect 18 0 19 0;