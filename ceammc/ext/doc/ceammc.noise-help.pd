#N canvas 0 0 760 555 12;
#X obj 20 53 ui.link @title index @url ../index-help.pd;
#X text 62 50 ::;
#X obj 79 53 ui.link @title ceammc @url ceammc-help.pd;
#X obj 30 116 noise.baker;
#X text 200 116 Part of a-chaos library;
#X obj 30 143 noise.clifford;
#X text 200 143 clifford attractor;
#X obj 30 170 noise.collatz;
#X text 200 170 collatz conjecture output;
#X obj 30 197 noise.colored~;
#X text 200 197 colored noise generator with an arbitrary spectral
roll;
#X obj 30 224 noise.crackle~;
#X text 200 224 sparse noise generator;
#X obj 30 251 noise.duffing;
#X text 200 251 duffing attractor;
#X obj 30 278 noise.ginger;
#X text 200 278 Gingerbreadman map chaotic generator;
#X obj 30 305 noise.henon;
#X text 200 305 henon attractor;
#X obj 30 332 noise.henon_heilles;
#X text 200 332 Hénon–Heiles_system;
#X obj 30 359 noise.henon_phase;
#X text 200 359 henon phase Ddagrams;
#X obj 30 386 noise.henonf;
#X text 200 386 Henon phase;
#X obj 30 413 noise.ikeda;
#X text 200 413 Ikeda attractor;
#X obj 30 440 noise.lfreq0~;
#X text 200 440 sampled/held noise (piecewise constant);
#X obj 30 467 noise.lfreq~;
#X text 200 467 noise.lfreq0~ smoothed with no overshoot;
#X obj 30 494 noise.lorenz;
#X text 200 494 Lorenz chaos;
#X obj 30 521 noise.lyapunov;
#X text 200 521 lyapunov random attractor;
#X obj 30 548 noise.navier_stokes;
#X text 200 548 navier-stokes diff equations;
#X obj 30 575 noise.pink~;
#X text 200 575 Pink noise generator;
#X obj 30 602 noise.rossler;
#X text 200 602 Rössler attractor;
#X obj 30 629 noise.stein;
#X text 200 629 Stein distribution;
#X obj 30 656 noise.torus;
#X text 200 656 torus attractor;
#X obj 30 683 noise.verhulst;
#X text 200 683 verhulst distribution;
#X obj 30 710 noise.white~;
#X text 200 710 White noise generator;
#X obj 1 1 cnv 5 740 40 empty empty ceammc::noise 20 20 0 20 -104026
-4096 0;
#X obj 1 737 cnv 5 740 40 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 20 747 library: ceammc;