#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 521 50 cnv 1 244 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 521 50 multidimensional list container;
#X obj 1 1 cnv 5 765 40 empty empty data.mlist 20 20 0 20 -104026
-4096 0;
#N canvas 570 11 250 400 aliases 0;
#X obj 30 40 ceammc/mlist;
#X obj 30 78 mlist;
#X obj 30 116 ceammc/ml;
#X obj 30 154 ml;
#X restore 570 11 pd aliases;
#X obj 667 11 data.mlist;
#X obj 210 80 cnv 1 555 100 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 Syntax: values are separated by spaces: (1 2 3) - list
of 1 \, 2 and 3;
#X text 215 120 Nested lists: (1 2 3 (nested list values));
#X text 215 145 Symbols with spaces: ("single item list");
#X msg 50 208 bang;
#X msg 78 237 (A B C) \, bang;
#X msg 107 266 1 2 3 \, bang;
#X obj 50 295 data.mlist (1 2 3 (1 3 3));
#X obj 50 324 ui.d @display_type 1;
#X obj 20 374 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 379 cnv 5 115 25 empty empty mouse_events: 4 10 0 14 -262144
-49933 0;
#X text 110 414 Left-click;
#X text 285 414 open data editor.;
#X obj 20 444 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 449 cnv 5 90 25 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 484 1\.;
#X text 150 484 atom;
#X obj 246 485 cnv 1 48 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 484 VALUE: initial list values in (). For example: (1 2
3 (1 2) 4). Type: atom.;
#X obj 20 529 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 534 cnv 5 98 25 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 569 @value;
#X text 245 569 Get/Set mlist value. Type: atom. Default value: [].;
#X msg 110 599 @empty?;
#X text 245 599 (readonly) Get 1 if list is empty \, otherwise 0\.
Type: bool. Default value: 1\.;
#X msg 110 641 @size?;
#X text 245 641 (readonly) Get number of elements in list. Type: int.
Default value: 0\. Min value: 0\.;
#X obj 20 693 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 698 cnv 5 73 25 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 733 append;
#X text 245 733 adds values to the end of the list. Arguments are:;
#X obj 255 756 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 756 VAL: appended value. Type: atom.;
#X msg 110 781 at;
#X text 245 781 outputs atom at the specified position. Arguments are:;
#X obj 255 804 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 804 IDX: position (negative indexes are supported: -1 means
last element). Type: int.;
#X msg 110 844 back;
#X text 245 844 output last list element.;
#X msg 110 872 choose;
#X text 245 872 choose random element in list and output it.;
#X msg 110 900 clear;
#X text 245 900 removes all list elements.;
#X msg 110 928 fill;
#X text 245 928 fills with specified value. Arguments are:;
#X obj 255 951 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 951 VAL: fill value. Type: atom.;
#X msg 110 976 front;
#X text 245 976 output first list element.;
#X msg 110 1004 insert;
#X text 245 1004 inserts values to the specified position. Arguments
are:;
#X obj 255 1027 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1027 IDX: insert position. Type: int.;
#X obj 255 1050 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1050 VAL: value. Type: atom.;
#X msg 110 1075 pop;
#X text 245 1075 removes last list element.;
#X msg 110 1103 prepend;
#X text 245 1103 inserts values to the list beginning. Arguments are:;
#X obj 255 1126 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1126 VAL: prepended value. Type: atom.;
#X msg 110 1151 remove;
#X text 245 1151 removes specified element. Arguments are:;
#X obj 255 1174 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1174 IDX: element index. Type: int.;
#X msg 110 1199 reverse;
#X text 245 1199 reverses list.;
#X msg 110 1227 set;
#X text 245 1227 sets new list without output. Arguments are:;
#X obj 255 1250 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1250 LIST: new list content. Type: list.;
#X msg 110 1275 shuffle;
#X text 245 1275 put elements in random order.;
#X msg 110 1303 sort;
#X text 245 1303 sorts list.;
#X msg 110 1331 (....);
#X text 245 1331 sets new list without output.;
#X msg 110 1359 dump;
#X text 245 1359 dump object info to Pd window.;
#X obj 20 1397 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1402 cnv 5 64 25 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1403 1\.;
#X text 150 1403 *bang*;
#X text 245 1403 output current list value.;
#X text 150 1423 *symbol*;
#X text 245 1423 set new list with single symbol element and output.;
#X text 150 1443 *list*;
#X text 245 1443 sets new list and output it.;
#X obj 20 1473 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1478 cnv 5 73 25 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1479 1\.;
#X text 245 1479 output list or list elements.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 68 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 116 45 ::;
#X obj 133 48 ui.link @title data @url ceammc.data-help.pd;
#X obj 1 1529 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1532 library: ceammc v0.9.7;
#X text 599 1544 see also:;
#X obj 674 1544 data.list;
#N canvas 10 1551 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.7;
#X text 10 54 object:;
#X text 120 54 data.mlist;
#X text 10 76 category:;
#X text 120 76 data;
#X text 10 98 since:;
#X text 120 98 0.6;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 data \, multilist;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pd-ceammc @url
https://github.com/uliss/pd-ceammc;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1551 pd info;
#X connect 9 0 12 0;
#X connect 10 0 12 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;