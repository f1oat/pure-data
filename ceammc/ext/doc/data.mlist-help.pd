#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 512 50 cnv 1 253 21 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 512 50 multidimensional list container;
#X obj 1 1 cnv 5 765 40 empty empty data.mlist 20 20 0 20 -104026
-4096 0;
#X obj 565 11 mlist;
#X obj 626 11 ml;
#X obj 668 11 data.mlist;
#X obj 210 80 cnv 1 555 93 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 Syntax: values are separated by spaces: (1 2 3) - list
of 1 \, 2 and 3;
#X text 215 117 Nested lists: (1 2 3 (nested liat values));
#X text 215 140 Symbols with spaces: ("single item list");
#X msg 50 201 bang;
#X msg 78 230 (A B C) \, bang;
#X obj 50 259 data.mlist (1 2 3 (1 3 3));
#X obj 50 288 ui.display @display_type 1 @size 150 18;
#X obj 20 328 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 333 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 368 1\.;
#X text 150 368 any;
#X obj 246 369 cnv 1 17 18 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 368 X: initial list values in (). For example: (1 2 3 (1
2) 4).;
#X obj 20 396 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 401 cnv 5 98 26 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 436 @empty;
#X text 245 436 (readonly) Get 1 if list is empty \, otherwise 0\.
Type: int. Allowed values: 0 \, 1\.;
#X msg 110 475 @size;
#X text 245 475 (readonly) Get number of elements in list. Type: int.
Min value: 0\.;
#X obj 20 524 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 529 cnv 5 73 26 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 564 append;
#X text 245 564 adds values to the end of the list. Arguments are:;
#X obj 255 585 cnv 1 30 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 585 VAL: appended value. Type: atom.;
#X msg 110 608 clear;
#X text 245 608 removes all list elements.;
#X msg 110 635 fill;
#X text 245 635 fills with specified value. Arguments are:;
#X obj 255 656 cnv 1 30 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 656 VAL: fill value. Type: atom.;
#X msg 110 679 insert;
#X text 245 679 inserts values to the specified position. Arguments
are:;
#X obj 255 700 cnv 1 30 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 700 IDX: insert position. Type: int.;
#X obj 255 721 cnv 1 30 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 721 VAL: value. Type: atom.;
#X msg 110 744 pop;
#X text 245 744 removes last list element.;
#X msg 110 771 prepend;
#X text 245 771 inserts values to the list beginning. Arguments are:;
#X obj 255 792 cnv 1 30 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 792 VAL: prepended value. Type: atom.;
#X msg 110 815 remove;
#X text 245 815 removes specified element. Arguments are:;
#X obj 255 836 cnv 1 30 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 836 IDX: element index. Type: int.;
#X msg 110 859 reverse;
#X text 245 859 reverses list.;
#X msg 110 886 set;
#X text 245 886 sets new list without output. Arguments are:;
#X obj 255 907 cnv 1 38 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 907 LIST: new list content. Type: list.;
#X msg 110 930 shuffle;
#X text 245 930 put elements in random order.;
#X msg 110 957 sort;
#X text 245 957 sorts list.;
#X msg 110 984 (....);
#X text 245 984 sets new list without output.;
#X msg 110 1011 dump;
#X text 245 1011 dump object info to Pd window.;
#X obj 20 1048 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1053 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1054 1\.;
#X text 150 1054 *bang*;
#X text 245 1054 output current list value.;
#X text 150 1072 *list*;
#X text 245 1072 sets new list and output it.;
#X obj 20 1100 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1105 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1106 1\.;
#X text 245 1106 output list or list elements.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title data @url ceammc.data-help.pd;
#X obj 1 1154 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1157 library: ceammc v0.7.1;
#X text 599 1169 see also:;
#X obj 675 1169 data.list;
#N canvas 10 1176 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.7.1;
#X text 10 54 object:;
#X text 120 54 data.mlist;
#X text 10 76 category:;
#X text 120 76 data;
#X text 10 98 since:;
#X text 120 98 0.6;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3;
#X text 10 164 keywords:;
#X text 120 164 data \, multilist;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1176 pd info;
#X connect 10 0 12 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;