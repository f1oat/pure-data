#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 394 50 cnv 1 371 21 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 394 50 array time-stretch \, pitch-shift or rate-change;
#X obj 1 1 cnv 5 765 40 empty empty array.stretch 20 20 0 20 -104026
-4096 0;
#X obj 646 11 array.stretch;
#X obj 205 80 cnv 1 560 61 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 210 80 Based on SoundTouch library for changing the Tempo \,
Pitch and Playback Rates of arrays. Copies time-stretched data from
source to destination array;
#X obj 50 169 loadbang;
#X msg 50 198 symbol voice.wav;
#X msg 232 198 symbol bell.aiff;
#N canvas 0 22 450 300 (subpatch) 0;
#X array A1 100 float 0;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 100 -1 100 140 1;
#X restore 414 198 graph;
#N canvas 0 22 450 300 (subpatch) 0;
#X array A2 100 float 0;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 100 -1 100 140 1;
#X restore 578 198 graph;
#X msg 50 227 load %DOC%/sound/\$1 @to A1 @resize;
#X obj 50 256 expand_env;
#X obj 50 285 snd.file;
#X obj 50 313 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 107 313 lower pitch;
#X obj 50 342 array.stretch A1 A2 @pitch -5;
#X obj 50 371 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 107 371 speed up and high;
#X obj 357 371 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 405 371 timestretch;
#X obj 50 400 array.stretch A1 A2 @rate 1.5;
#X obj 357 400 array.stretch A1 A2 @tempo -30 @speech;
#X text 50 429 Play;
#X obj 50 457 ui.tab @items A1 A2;
#X msg 50 486 set \$1 \, bang;
#X msg 194 486 stop;
#X obj 50 515 tabplay~ A2;
#X obj 50 544 ui.gain~ @size 120 16;
#X obj 309 544 ui.dsp~;
#X obj 50 572 dac~;
#X obj 20 611 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 616 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 120 621 1\.;
#X text 150 621 symbol;
#X obj 241 622 cnv 1 32 18 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 240 621 SRC: source array.;
#X text 120 639 2\.;
#X text 150 639 symbol;
#X obj 241 640 cnv 1 40 18 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 240 639 DEST: destination array.;
#X obj 20 667 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 672 cnv 5 98 26 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 120 677 @src;
#X text 240 677 Get/Set source array. Type: symbol;
#X msg 120 704 @dest;
#X text 240 704 Get/Set destination array. Type: symbol;
#X msg 120 731 @tempo;
#X text 240 731 Get/Set relative tempo change without affecting the
sound pitch. Type: float. Units: %. Default value: 0\. Value range:
-50-100;
#X msg 120 782 @pitch;
#X text 240 782 Get/Set relative pitch change in semitones while
keeping the original tempo. Type: float. Default value: 0;
#X msg 120 819 @rate;
#X text 240 819 Get/Set playback rate - changes both tempo and pitch
together as if a vinyl disc was played at different RPM rate. Type:
float. Default value: 1\. Value range: 0.1-2;
#X msg 120 870 @speech;
#X text 240 870 optimize for speech sound source;
#X msg 120 897 @antialias;
#X text 240 897 Get/Set use of anti-alias filter. Anti-alias filter is
used to prevent folding of high frequencies when transposing the
sample rate with interpolation. Type: int. Default value: 1\. Allowed
values: 0 \, 1;
#X msg 120 962 @aalength;
#X text 240 962 Get/Set pitch transposer anti-alias filter length.
Type: int. Default value: 64\. Value range: 8-128;
#X msg 120 999 @sequence;
#X text 240 999 Get/Set Default length of a single processing sequence
\, in milliseconds. This determines to how long sequences the original
sound is chopped in the time-stretch algorithm. The larger this value
is \, the lesser sequences are used in processing. In principle a
bigger value sounds better when slowing down tempo \, but worse when
increasing tempo and vice versa. Increasing this value reduces
computational burden & vice versa. Giving *0* value for the sequence
length sets automatic parameter value according to tempo setting
(recommended). Type: int. Units: ms. Default value: 0\. Value range:
0-100;
#X msg 120 1162 @seekwindow;
#X text 240 1162 Get/Set Seeking window default length in milliseconds
for algorithm that finds the best possible overlapping location. This
determines from how wide window the algorithm may look for an optimal
joining location when mixing the sound sequences back together. The
bigger this window setting is \, the higher the possibility to find a
better mixing position will become \, but at the same time large
values may cause a "drifting" artifact because consequent sequences
will be taken at more uneven intervals. If there's a disturbing
artifact that sounds as if a constant frequency was drifting around \,
try reducing this setting. Increasing this value increases
computational burden & vice versa. Giving *0* value for the seek
window length sets automatic parameter value according to tempo
setting (recommended). Type: int. Units: ms. Default value: 0\. Value
range: 0-100;
#X msg 120 1395 @overlap;
#X text 240 1395 Get/Set Overlap length in milliseconds. When the
chopped sound sequences are mixed back together \, to form a
continuous sound stream \, this parameter defines over how long period
the two consecutive sequences are let to overlap each other.
Increasing this value increases computational burden & vice versa.
Type: int. Units: ms. Default value: 8\. Value range: 1-100;
#X obj 20 1512 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1517 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 120 1522 1\.;
#X text 150 1522 *bang*;
#X text 240 1522 starts processing.;
#X obj 20 1550 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1555 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 120 1560 1\.;
#X text 240 1560 float value - number of result samples;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title array @url ceammc.array-help.pd;
#X obj 1 1608 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1611 library: ceammc v0.7.1;
#N canvas 10 1630 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.7.1;
#X text 10 54 object:;
#X text 120 54 array.stretch;
#X text 10 76 category:;
#X text 120 76 array;
#X text 10 98 since:;
#X text 120 98 0.4;
#X text 10 120 authors:;
#X text 120 120 Olli Parviainen \, Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3;
#X text 10 164 keywords:;
#X text 120 164 array \, stretch;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1630 pd info;
#X connect 6 0 7 0;
#X connect 7 0 11 0;
#X connect 8 0 11 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 14 0 16 0;
#X connect 17 0 21 0;
#X connect 19 0 22 0;
#X connect 24 0 25 0;
#X connect 25 0 27 0;
#X connect 26 0 27 0;
#X connect 27 0 28 0;
#X connect 28 0 30 0;
#X connect 28 0 30 1;