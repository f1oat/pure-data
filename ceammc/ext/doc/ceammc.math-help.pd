#N canvas 0 0 760 555 12;
#X obj 20 53 ui.link @title index @url ../index-help.pd;
#X text 62 50 ::;
#X obj 80 53 ui.link @title ceammc @url ceammc-help.pd;
#X obj 376 50 cnv 1 364 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 376 50 math objects. can operate with list of numbers.;
#X obj 30 117 math.abs;
#X text 200 117 absolute value function;
#X obj 30 145 math.abs~;
#X text 200 145 absolute value function for signals;
#X obj 30 173 math.acos;
#X text 200 173 arc cosine function;
#X obj 30 201 math.acosh;
#X text 200 201 inverse hyperbolic cosine function;
#X obj 30 229 math.acosh~;
#X text 200 229 hyperbolic arc cosine for signals;
#X obj 30 257 math.acos~;
#X text 200 257 arc cosine function for signals;
#X obj 30 285 math.and;
#X text 200 285 operation AND for multiple arguments;
#X obj 30 313 math.approx;
#X text 200 313 check if input value approximately equal to pattern;
#X obj 30 341 math.asin;
#X text 200 341 arc sine function;
#X obj 30 369 math.asinh;
#X text 200 369 inverse hyperbolic sine function;
#X obj 30 397 math.asinh~;
#X text 200 397 hyperbolic arc sine for signals;
#X obj 30 425 math.asin~;
#X text 200 425 arc sine for signals;
#X obj 30 453 math.atan;
#X text 200 453 arc tangent function;
#X obj 30 481 math.atanh;
#X text 200 481 inverse hyperbolic tangent function;
#X obj 30 509 math.atanh~;
#X text 200 509 hyperbolic arc tangent for signals;
#X obj 30 537 math.atan~;
#X text 200 537 arc tangent for signals;
#X obj 30 565 math.binomial;
#X text 200 565 binomial coefficient calculator;
#X obj 30 593 math.cabs~;
#X text 200 593 magnitude of a complex signals;
#X obj 30 621 math.carg~;
#X text 200 621 phase angle of a complex signals;
#X obj 30 649 math.cbrt;
#X text 200 649 cube root function;
#X obj 30 677 math.cbrt~;
#X text 200 677 cube root function for signals;
#X obj 30 705 math.cdiv~;
#X text 200 705 division of complex signals;
#X obj 30 733 math.ceil;
#X text 200 733 round to smallest integral value not less than input
value;
#X obj 30 761 math.ceil~;
#X text 200 761 round to smallest integral value not less than input
value;
#X obj 30 789 math.cexp~;
#X text 200 789 exponent of a complex signals;
#X obj 30 817 math.cmul~;
#X text 200 817 multiplication of complex signals;
#X obj 30 845 math.cos;
#X text 200 845 cosine function;
#X obj 30 873 math.cosh;
#X text 200 873 hyperbolic cosine function;
#X obj 30 901 math.cosh~;
#X text 200 901 hyperbolic cosine for signals;
#X obj 30 929 math.cos~;
#X text 200 929 cosine function;
#X obj 30 957 math.div;
#X text 200 957 division (on lists too);
#X obj 30 985 math.e;
#X text 200 985 mathematical constant \, base of the natural logarithm;
#X obj 30 1013 math.erf;
#X text 200 1013 error function;
#X obj 30 1041 math.erf~;
#X text 200 1041 error function for signals;
#X obj 30 1069 math.exp;
#X text 200 1069 exponential functions;
#X obj 30 1097 math.exp2;
#X text 200 1097 exponential functions;
#X obj 30 1125 math.exp2~;
#X text 200 1125 base-2 exponential for signal;
#X obj 30 1153 math.expr;
#X text 200 1153 dynamic [expr];
#X obj 30 1181 math.exp~;
#X text 200 1181 base-e exponential for signal;
#X obj 30 1209 math.floor;
#X text 200 1209 round to largest integral value not greater than x;
#X obj 30 1237 math.floor~;
#X text 200 1237 round to largest integral value not greater than x;
#X obj 30 1265 math.gamma;
#X text 200 1265 gamma function;
#X obj 30 1293 math.gamma~;
#X text 200 1293 gamma function for floating point signals;
#X obj 30 1321 math.gcd;
#X text 200 1321 calculate greatest common divisor;
#X obj 30 1349 math.inf;
#X text 200 1349 infinity value that cannot be represented accurately;
#X obj 30 1377 math.inf~;
#X text 200 1377 inifinity signal generator;
#X obj 30 1405 math.lcm;
#X text 200 1405 calculate least common multiple;
#X obj 30 1433 math.lgamma;
#X text 200 1433 natural logarithm of the absolute value of the gamma
function;
#X obj 30 1461 math.lgamma~;
#X text 200 1461 natural logarithm of the absolute value of the gamma
function for signals;
#X obj 30 1501 math.log;
#X text 200 1501 natural logarithm;
#X obj 30 1529 math.log10;
#X text 200 1529 logarithm functions;
#X obj 30 1557 math.log10~;
#X text 200 1557 natural logarithm;
#X obj 30 1585 math.log2;
#X text 200 1585 logarithm functions;
#X obj 30 1613 math.log2~;
#X text 200 1613 base-2 logarithm;
#X obj 30 1641 math.log~;
#X text 200 1641 natural logarithm;
#X obj 30 1669 math.mul;
#X text 200 1669 multiplication (on lists too);
#X obj 30 1697 math.nan;
#X text 200 1697 Not a Number \, unrepresentable value;
#X obj 30 1725 math.nan~;
#X text 200 1725 signal NaN;
#X obj 30 1753 math.neg;
#X text 200 1753 negate function;
#X obj 30 1781 math.or;
#X text 200 1781 operation OR for multiple arguments;
#X obj 30 1809 math.pi;
#X text 200 1809 mathematical constant;
#X obj 30 1837 math.pi~;
#X text 200 1837 mathematical constant;
#X obj 30 1865 math.polyeval;
#X text 200 1865 evaluates the polynomial described by the coefficients
list;
#X obj 30 1893 math.reciprocal;
#X text 200 1893 calculate reciprocal number;
#X obj 30 1921 math.reciprocal~;
#X text 200 1921 calculate reciprocal number for signals;
#X obj 30 1949 math.round;
#X text 200 1949 round to integral value \, regardless of rounding
direction;
#X obj 30 1977 math.round~;
#X text 200 1977 signal round;
#X obj 30 2005 math.sign;
#X text 200 2005 sign function;
#X obj 30 2033 math.sin;
#X text 200 2033 sine function;
#X obj 30 2061 math.sinh;
#X text 200 2061 hyperbolic sine function;
#X obj 30 2089 math.sinh~;
#X text 200 2089 hyperbolic sine for signals;
#X obj 30 2117 math.sin~;
#X text 200 2117 sine function;
#X obj 30 2145 math.sqrt;
#X text 200 2145 square root function;
#X obj 30 2173 math.sqrt~;
#X text 200 2173 square root for signal;
#X obj 30 2201 math.squared;
#X text 200 2201 value square;
#X obj 30 2229 math.squared~;
#X text 200 2229 signal value square;
#X obj 30 2257 math.sync_add;
#X text 200 2257 sync addition;
#X obj 30 2285 math.sync_and;
#X text 200 2285 sync logical AND operation;
#X obj 30 2313 math.sync_div;
#X text 200 2313 sync division;
#X obj 30 2341 math.sync_eq;
#X text 200 2341 sync equal numbers check;
#X obj 30 2369 math.sync_ge;
#X text 200 2369 sync greater equal numbers compare;
#X obj 30 2397 math.sync_gt;
#X text 200 2397 sync greater then numbers compare;
#X obj 30 2425 math.sync_le;
#X text 200 2425 sync less equal numbers compare;
#X obj 30 2453 math.sync_lshift;
#X text 200 2453 sync signed bit left shift;
#X obj 30 2481 math.sync_lt;
#X text 200 2481 sync less then numbers compare;
#X obj 30 2509 math.sync_mod;
#X text 200 2509 sync remainder of modulo division (float or integer);
#X obj 30 2537 math.sync_mul;
#X text 200 2537 sync multiplication;
#X obj 30 2565 math.sync_ne;
#X text 200 2565 sync numbers for not equality;
#X obj 30 2593 math.sync_or;
#X text 200 2593 sync logical OR operation;
#X obj 30 2621 math.sync_rshift;
#X text 200 2621 sync signed bit right shift;
#X obj 30 2649 math.sync_sub;
#X text 200 2649 sync subtraction;
#X obj 30 2677 math.sync_xor;
#X text 200 2677 sync logical XOR operation;
#X obj 30 2705 math.tan;
#X text 200 2705 tangent function;
#X obj 30 2733 math.tanh;
#X text 200 2733 hyperbolic tangent function;
#X obj 30 2761 math.tanh~;
#X text 200 2761 hyperbolic tangent for signals;
#X obj 30 2789 math.tan~;
#X text 200 2789 tangent function;
#X obj 30 2817 math.trunc;
#X text 200 2817 truncate to integer value;
#X obj 30 2845 math.trunc~;
#X text 200 2845 truncate to integer value;
#X obj 1 1 cnv 5 740 40 empty empty ceammc::math 20 20 0 20 -104026
-4096 0;
#X obj 1 2873 cnv 5 740 40 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 20 2883 library: ceammc;