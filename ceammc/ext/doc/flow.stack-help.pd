#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 628 50 cnv 1 137 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 628 50 any message stack;
#X obj 1 1 cnv 5 765 40 empty empty flow.stack 20 20 0 20 -104026
-4096 0;
#X obj 667 11 flow.stack;
#X msg 50 118 bang;
#X msg 117 118 1024;
#X msg 184 118 symbol ABC;
#X msg 309 118 1 2 3;
#X msg 386 118 @any message;
#X msg 424 147 bang;
#X msg 491 147 clear;
#X obj 50 176 flow.stack, f 53;
#X obj 50 205 print STACK;
#X obj 50 234 flow.stack.1;
#X obj 20 283 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 288 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 323 1\.;
#X text 150 323 int;
#X obj 246 324 cnv 1 17 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 323 N: max stack size.;
#X obj 20 353 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 358 cnv 5 98 26 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 393 @empty;
#X text 245 393 (readonly) Get if stack is empty. Type: int. Default
value: 1\. Allowed values: 0 \, 1\.;
#X msg 110 435 @max_size;
#X text 245 435 Get/Set maximum stack grow size. Type: int. Default
value: 100\. Min value: 1\.;
#X msg 110 477 @size;
#X text 245 477 (readonly) Get current number of elements in stack.
Type: int. Default value: 0\.;
#X obj 20 529 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 534 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144 -49933
0;
#X text 110 535 1\.;
#X text 245 535 input: push to stack.;
#X text 110 555 2\.;
#X text 150 555 *bang*;
#X text 245 555 output and remove top element.;
#X text 245 575 top: output top element.;
#X text 245 595 pop: remove top element (no output).;
#X text 245 615 clear: remove all elements (no output).;
#X text 245 635 flush: output and remove all elements.;
#X obj 20 665 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 670 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 671 1\.;
#X text 245 671 output.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title flow @url ceammc.flow-help.pd;
#X obj 1 721 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 724 library: ceammc v0.9.0;
#N canvas 10 743 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.0;
#X text 10 54 object:;
#X text 120 54 flow.stack;
#X text 10 76 category:;
#X text 120 76 flow;
#X text 10 98 since:;
#X text 120 98 0.9.1;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 stack;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 743 pd info;
#X connect 4 0 11 0;
#X connect 5 0 11 0;
#X connect 6 0 11 0;
#X connect 7 0 11 0;
#X connect 8 0 11 0;
#X connect 9 0 11 1;
#X connect 10 0 11 1;
#X connect 11 0 12 0;