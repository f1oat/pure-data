
#line 1 "lex/lemon_data_string_parser.rl"
# include "lemon_data_string_parser.h"
# include "ceammc_log.h"
# include "lemon_data_string.h"
# include "parser_numeric.h"
# include "parser_color.h"
# include "fmt/format.h"
# include "ceammc_datatypes.h"

# include <cstdint>

# include "lemon_data_parser_impl.h"

namespace {

// for autogenerated ragel internals
struct ColorRagelData {
    int r { 0 };
    int g { 0 };
    int b { 0 };
    int a { 0 };
    int x { 0 };
    void setHex(std::uint32_t c) {
        r = (c & 0xFF0000) >> 16;
        g = (c & 0x00FF00) >> 8;
        b = c & 0x0000FF;
    }
};

}


#line 243 "lex/lemon_data_string_parser.rl"


# include <cstring>

namespace ceammc {
namespace parser {


#line 44 "lex/lemon_data_string_parser.cpp"
static const int lemon_data_string_lexer_start = 36;
static const int lemon_data_string_lexer_first_final = 36;
static const int lemon_data_string_lexer_error = 0;

static const int lemon_data_string_lexer_en_scan_dqstring = 37;
static const int lemon_data_string_lexer_en_scan_matrix = 39;
static const int lemon_data_string_lexer_en_scan_dict = 50;
static const int lemon_data_string_lexer_en_scan_token = 107;
static const int lemon_data_string_lexer_en_main = 36;


#line 251 "lex/lemon_data_string_parser.rl"

LemonDataStringParser::LemonDataStringParser()
    : res_(nullptr)
{
    reset();
    lemon_data_string_parserInit(parser_data_);

# ifndef NDEBUG
    lemon_data_string_parserTrace(stderr, (char*)"\t> ");
# endif
}

LemonDataStringParser::~LemonDataStringParser()
{
    lemon_data_string_parserFinalize(parser_data_);
}

void LemonDataStringParser::pushToken(int token)
{
    lemon_data_string_parser_token(parser(), token, this);
}

void LemonDataStringParser::pushFloat(double val)
{
# ifndef NDEBUG
    std::cerr << __FUNCTION__ << ' ' << val << std::endl;
# endif

    lemon_data_string_parser_float(parser(), TK_FLOAT, val, this);
}

void LemonDataStringParser::pushSymbolToken(int token, const char* begin, const char* end)
{
    const auto N = std::min<int>(sizeof(parser_buf_) - 1, end - begin);

    for (int i = 0; i < N; i++)
        parser_buf_[i] = begin[i];

    parser_buf_[N] = 0;
    lemon_data_string_parser_str(parser(), token, parser_buf_, this);
}

bool LemonDataStringParser::parse(const char* data) noexcept
{
# ifndef NDEBUG
    LIB_LOG << fmt::format("[data] parse: {}", data);
# endif

    reset();

    // null string pointer
    if (data == nullptr) {
        error_ = "[data] parse: null string pointer given";
        return false;
    }

    // empty string
    if (data[0] == '\0')
        return true;

    // ragel vars
    int cs;
    int act;
    int top;
    int stack[16];
    // scanner match begin/end
    const char* ts = 0;
    const char* te = 0;
    // text start
    const char* p = data;
    // remove initial spaces
    while (*p == ' ') p++;
    // text end
    const char* pe = p + strlen(p);
    // remove last spaces
    while (pe != p && *(pe-1) == ' ') --pe;
    // EOF
    const char* eof = pe;

    DECLARE_RAGEL_COMMON_VARS;
    DECLARE_RAGEL_NUMERIC_VARS;

    ColorRagelData color;
    color.a = 0xFF;

    // for quoted string parser
    ceammc::BoostStaticString<512> ragel_string;
    // for matrices
    int ragel_mtx_cols = 0;
    int ragel_mtx_rows = 0;

    try {

    
#line 151 "lex/lemon_data_string_parser.cpp"
	{
	cs = lemon_data_string_lexer_start;
	top = 0;
	ts = 0;
	te = 0;
	act = 0;
	}

#line 345 "lex/lemon_data_string_parser.rl"
    
#line 162 "lex/lemon_data_string_parser.cpp"
	{
	if ( p == pe )
		goto _test_eof;
	goto _resume;

_again:
	switch ( cs ) {
		case 36: goto st36;
		case 37: goto st37;
		case 38: goto st38;
		case 1: goto st1;
		case 2: goto st2;
		case 3: goto st3;
		case 4: goto st4;
		case 5: goto st5;
		case 6: goto st6;
		case 7: goto st7;
		case 8: goto st8;
		case 9: goto st9;
		case 10: goto st10;
		case 11: goto st11;
		case 12: goto st12;
		case 13: goto st13;
		case 14: goto st14;
		case 15: goto st15;
		case 16: goto st16;
		case 17: goto st17;
		case 0: goto st0;
		case 39: goto st39;
		case 40: goto st40;
		case 41: goto st41;
		case 18: goto st18;
		case 42: goto st42;
		case 19: goto st19;
		case 43: goto st43;
		case 20: goto st20;
		case 44: goto st44;
		case 45: goto st45;
		case 46: goto st46;
		case 47: goto st47;
		case 21: goto st21;
		case 48: goto st48;
		case 22: goto st22;
		case 49: goto st49;
		case 50: goto st50;
		case 51: goto st51;
		case 52: goto st52;
		case 53: goto st53;
		case 54: goto st54;
		case 55: goto st55;
		case 56: goto st56;
		case 57: goto st57;
		case 58: goto st58;
		case 59: goto st59;
		case 60: goto st60;
		case 23: goto st23;
		case 24: goto st24;
		case 25: goto st25;
		case 61: goto st61;
		case 26: goto st26;
		case 27: goto st27;
		case 28: goto st28;
		case 62: goto st62;
		case 63: goto st63;
		case 64: goto st64;
		case 65: goto st65;
		case 66: goto st66;
		case 67: goto st67;
		case 29: goto st29;
		case 68: goto st68;
		case 30: goto st30;
		case 69: goto st69;
		case 70: goto st70;
		case 71: goto st71;
		case 31: goto st31;
		case 32: goto st32;
		case 33: goto st33;
		case 72: goto st72;
		case 73: goto st73;
		case 74: goto st74;
		case 75: goto st75;
		case 76: goto st76;
		case 77: goto st77;
		case 78: goto st78;
		case 79: goto st79;
		case 80: goto st80;
		case 81: goto st81;
		case 82: goto st82;
		case 83: goto st83;
		case 84: goto st84;
		case 85: goto st85;
		case 86: goto st86;
		case 87: goto st87;
		case 88: goto st88;
		case 89: goto st89;
		case 90: goto st90;
		case 91: goto st91;
		case 92: goto st92;
		case 93: goto st93;
		case 94: goto st94;
		case 95: goto st95;
		case 96: goto st96;
		case 97: goto st97;
		case 98: goto st98;
		case 99: goto st99;
		case 100: goto st100;
		case 101: goto st101;
		case 102: goto st102;
		case 103: goto st103;
		case 104: goto st104;
		case 105: goto st105;
		case 106: goto st106;
		case 107: goto st107;
		case 108: goto st108;
		case 109: goto st109;
		case 110: goto st110;
		case 111: goto st111;
		case 112: goto st112;
		case 113: goto st113;
		case 114: goto st114;
		case 115: goto st115;
		case 116: goto st116;
		case 117: goto st117;
		case 118: goto st118;
		case 119: goto st119;
		case 120: goto st120;
		case 121: goto st121;
		case 34: goto st34;
		case 122: goto st122;
		case 35: goto st35;
		case 123: goto st123;
		case 124: goto st124;
		case 125: goto st125;
		case 126: goto st126;
		case 127: goto st127;
		case 128: goto st128;
		case 129: goto st129;
		case 130: goto st130;
		case 131: goto st131;
		case 132: goto st132;
		case 133: goto st133;
		case 134: goto st134;
		case 135: goto st135;
		case 136: goto st136;
		case 137: goto st137;
		case 138: goto st138;
		case 139: goto st139;
		case 140: goto st140;
		case 141: goto st141;
		case 142: goto st142;
		case 143: goto st143;
		case 144: goto st144;
		case 145: goto st145;
		case 146: goto st146;
		case 147: goto st147;
		case 148: goto st148;
		case 149: goto st149;
		case 150: goto st150;
		case 151: goto st151;
		case 152: goto st152;
		case 153: goto st153;
		case 154: goto st154;
		case 155: goto st155;
		case 156: goto st156;
		case 157: goto st157;
		case 158: goto st158;
	default: break;
	}

	if ( ++p == pe )
		goto _test_eof;
_resume:
	switch ( cs )
	{
tr47:
#line 242 "lex/lemon_data_string_parser.rl"
	{ p--; {stack[top++] = 36;goto st107;} }
	goto st36;
st36:
#line 1 "NONE"
	{ts = 0;}
	if ( ++p == pe )
		goto _test_eof36;
case 36:
#line 347 "lex/lemon_data_string_parser.cpp"
	goto tr47;
tr0:
#line 166 "lex/lemon_data_string_parser.rl"
	{{p = ((te))-1;}{ ragel_string += (*p);  }}
	goto st37;
tr1:
#line 81 "lex/lemon_data_string_parser.rl"
	{te = p+1;{
        constexpr int BS = sizeof(parser_buf_) - 1;
        const auto N = std::min<int>(BS, (te - ts) - 2);
        for (int i = 0; i < N; i++)
            parser_buf_[i] = ts[i+1];

        parser_buf_[N] = 0;
        auto env = std::getenv(parser_buf_);

        if (env) {
            for (int i = 0; i < 256; i++) {
                bool break_loop = false;
                auto ch = env[i];
                switch (ch) {
                case '\'': ragel_string += '`'; ragel_string += '\''; break;
                case '"':  ragel_string += '`'; ragel_string += '"'; break;
                case '\0': break_loop = true; break;
                default:   ragel_string += ch; break;
                }

                if (break_loop) break;
            }
        } else
            ragel_string.append(ts, te - ts);
    }}
	goto st37;
tr17:
#line 167 "lex/lemon_data_string_parser.rl"
	{te = p+1;{ ragel_string += '"'; }}
	goto st37;
tr19:
#line 169 "lex/lemon_data_string_parser.rl"
	{te = p+1;{ ragel_string += '{'; }}
	goto st37;
tr20:
#line 170 "lex/lemon_data_string_parser.rl"
	{te = p+1;{ ragel_string += '}'; }}
	goto st37;
tr21:
#line 168 "lex/lemon_data_string_parser.rl"
	{te = p+1;{ ragel_string += '`'; }}
	goto st37;
tr48:
#line 166 "lex/lemon_data_string_parser.rl"
	{te = p+1;{ ragel_string += (*p);  }}
	goto st37;
tr49:
#line 163 "lex/lemon_data_string_parser.rl"
	{te = p+1;{ pushSymbolToken(TK_SYMBOL, &(*ragel_string.begin()), (&*ragel_string.end())); {cs = stack[--top];goto _again;} }}
	goto st37;
tr52:
#line 166 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{ ragel_string += (*p);  }}
	goto st37;
st37:
#line 1 "NONE"
	{ts = 0;}
	if ( ++p == pe )
		goto _test_eof37;
case 37:
#line 1 "NONE"
	{ts = p;}
#line 417 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 34: goto tr49;
		case 37: goto tr50;
		case 96: goto st17;
	}
	goto tr48;
tr50:
#line 1 "NONE"
	{te = p+1;}
	goto st38;
st38:
	if ( ++p == pe )
		goto _test_eof38;
case 38:
#line 432 "lex/lemon_data_string_parser.cpp"
	if ( (*p) == 95 )
		goto st1;
	if ( (*p) > 57 ) {
		if ( 65 <= (*p) && (*p) <= 90 )
			goto st1;
	} else if ( (*p) >= 48 )
		goto st1;
	goto tr52;
st1:
	if ( ++p == pe )
		goto _test_eof1;
case 1:
	switch( (*p) ) {
		case 37: goto tr1;
		case 95: goto st2;
	}
	if ( (*p) > 57 ) {
		if ( 65 <= (*p) && (*p) <= 90 )
			goto st2;
	} else if ( (*p) >= 48 )
		goto st2;
	goto tr0;
st2:
	if ( ++p == pe )
		goto _test_eof2;
case 2:
	switch( (*p) ) {
		case 37: goto tr1;
		case 95: goto st3;
	}
	if ( (*p) > 57 ) {
		if ( 65 <= (*p) && (*p) <= 90 )
			goto st3;
	} else if ( (*p) >= 48 )
		goto st3;
	goto tr0;
st3:
	if ( ++p == pe )
		goto _test_eof3;
case 3:
	switch( (*p) ) {
		case 37: goto tr1;
		case 95: goto st4;
	}
	if ( (*p) > 57 ) {
		if ( 65 <= (*p) && (*p) <= 90 )
			goto st4;
	} else if ( (*p) >= 48 )
		goto st4;
	goto tr0;
st4:
	if ( ++p == pe )
		goto _test_eof4;
case 4:
	switch( (*p) ) {
		case 37: goto tr1;
		case 95: goto st5;
	}
	if ( (*p) > 57 ) {
		if ( 65 <= (*p) && (*p) <= 90 )
			goto st5;
	} else if ( (*p) >= 48 )
		goto st5;
	goto tr0;
st5:
	if ( ++p == pe )
		goto _test_eof5;
case 5:
	switch( (*p) ) {
		case 37: goto tr1;
		case 95: goto st6;
	}
	if ( (*p) > 57 ) {
		if ( 65 <= (*p) && (*p) <= 90 )
			goto st6;
	} else if ( (*p) >= 48 )
		goto st6;
	goto tr0;
st6:
	if ( ++p == pe )
		goto _test_eof6;
case 6:
	switch( (*p) ) {
		case 37: goto tr1;
		case 95: goto st7;
	}
	if ( (*p) > 57 ) {
		if ( 65 <= (*p) && (*p) <= 90 )
			goto st7;
	} else if ( (*p) >= 48 )
		goto st7;
	goto tr0;
st7:
	if ( ++p == pe )
		goto _test_eof7;
case 7:
	switch( (*p) ) {
		case 37: goto tr1;
		case 95: goto st8;
	}
	if ( (*p) > 57 ) {
		if ( 65 <= (*p) && (*p) <= 90 )
			goto st8;
	} else if ( (*p) >= 48 )
		goto st8;
	goto tr0;
st8:
	if ( ++p == pe )
		goto _test_eof8;
case 8:
	switch( (*p) ) {
		case 37: goto tr1;
		case 95: goto st9;
	}
	if ( (*p) > 57 ) {
		if ( 65 <= (*p) && (*p) <= 90 )
			goto st9;
	} else if ( (*p) >= 48 )
		goto st9;
	goto tr0;
st9:
	if ( ++p == pe )
		goto _test_eof9;
case 9:
	switch( (*p) ) {
		case 37: goto tr1;
		case 95: goto st10;
	}
	if ( (*p) > 57 ) {
		if ( 65 <= (*p) && (*p) <= 90 )
			goto st10;
	} else if ( (*p) >= 48 )
		goto st10;
	goto tr0;
st10:
	if ( ++p == pe )
		goto _test_eof10;
case 10:
	switch( (*p) ) {
		case 37: goto tr1;
		case 95: goto st11;
	}
	if ( (*p) > 57 ) {
		if ( 65 <= (*p) && (*p) <= 90 )
			goto st11;
	} else if ( (*p) >= 48 )
		goto st11;
	goto tr0;
st11:
	if ( ++p == pe )
		goto _test_eof11;
case 11:
	switch( (*p) ) {
		case 37: goto tr1;
		case 95: goto st12;
	}
	if ( (*p) > 57 ) {
		if ( 65 <= (*p) && (*p) <= 90 )
			goto st12;
	} else if ( (*p) >= 48 )
		goto st12;
	goto tr0;
st12:
	if ( ++p == pe )
		goto _test_eof12;
case 12:
	switch( (*p) ) {
		case 37: goto tr1;
		case 95: goto st13;
	}
	if ( (*p) > 57 ) {
		if ( 65 <= (*p) && (*p) <= 90 )
			goto st13;
	} else if ( (*p) >= 48 )
		goto st13;
	goto tr0;
st13:
	if ( ++p == pe )
		goto _test_eof13;
case 13:
	switch( (*p) ) {
		case 37: goto tr1;
		case 95: goto st14;
	}
	if ( (*p) > 57 ) {
		if ( 65 <= (*p) && (*p) <= 90 )
			goto st14;
	} else if ( (*p) >= 48 )
		goto st14;
	goto tr0;
st14:
	if ( ++p == pe )
		goto _test_eof14;
case 14:
	switch( (*p) ) {
		case 37: goto tr1;
		case 95: goto st15;
	}
	if ( (*p) > 57 ) {
		if ( 65 <= (*p) && (*p) <= 90 )
			goto st15;
	} else if ( (*p) >= 48 )
		goto st15;
	goto tr0;
st15:
	if ( ++p == pe )
		goto _test_eof15;
case 15:
	switch( (*p) ) {
		case 37: goto tr1;
		case 95: goto st16;
	}
	if ( (*p) > 57 ) {
		if ( 65 <= (*p) && (*p) <= 90 )
			goto st16;
	} else if ( (*p) >= 48 )
		goto st16;
	goto tr0;
st16:
	if ( ++p == pe )
		goto _test_eof16;
case 16:
	if ( (*p) == 37 )
		goto tr1;
	goto tr0;
st17:
	if ( ++p == pe )
		goto _test_eof17;
case 17:
	switch( (*p) ) {
		case 34: goto tr17;
		case 40: goto tr19;
		case 41: goto tr20;
		case 96: goto tr21;
	}
	goto st0;
st0:
cs = 0;
	goto _out;
tr24:
#line 45 "lex/lemon_data_string_parser.rl"
	{{p = ((te))-1;}{
        onFloat(ragel_cat, ragel_type, ragel_num);
        ragel_num = {};
        ragel_cat = CAT_UNKNOWN;
        ragel_type = TYPE_UNKNOWN;
    }}
	goto st39;
tr56:
#line 44 "lex/lemon_data_string_parser.rl"
	{te = p+1;{ pushToken(TK_LIST_CLOSE); }}
	goto st39;
tr60:
#line 187 "lex/lemon_data_string_parser.rl"
	{te = p+1;{ pushToken(TK_MATRIX_CLOSE); {cs = stack[--top];goto _again;} }}
	goto st39;
tr61:
#line 186 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{ pushToken(TK_SPACE); }}
	goto st39;
tr62:
#line 43 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{ pushToken(TK_LIST_OPEN); }}
	goto st39;
tr63:
#line 30 "lex/ragel_numeric.rl"
	{
        ragel_num.vint *= ragel_num.sign;
        ragel_type = TYPE_INT;
        ragel_cat  = CAT_NUMBER;
    }
#line 45 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        onFloat(ragel_cat, ragel_type, ragel_num);
        ragel_num = {};
        ragel_cat = CAT_UNKNOWN;
        ragel_type = TYPE_UNKNOWN;
    }}
	goto st39;
tr66:
#line 58 "lex/ragel_numeric.rl"
	{
        const auto frac = double(ragel_num.ratio.num) / ragel_num.ratio.den;
        ragel_num.vdouble = ragel_num.vint + ragel_num.sign * frac;
        ragel_type = TYPE_FLOAT;
        ragel_cat  = CAT_NUMBER;
    }
#line 45 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        onFloat(ragel_cat, ragel_type, ragel_num);
        ragel_num = {};
        ragel_cat = CAT_UNKNOWN;
        ragel_type = TYPE_UNKNOWN;
    }}
	goto st39;
tr67:
#line 44 "lex/ragel_numeric.rl"
	{
        ragel_num.ratio.num *= ragel_num.sign;
        ragel_type = TYPE_RATIO;
        ragel_cat  = CAT_NUMBER;
    }
#line 45 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        onFloat(ragel_cat, ragel_type, ragel_num);
        ragel_num = {};
        ragel_cat = CAT_UNKNOWN;
        ragel_type = TYPE_UNKNOWN;
    }}
	goto st39;
tr70:
#line 24 "lex/ragel_numeric.rl"
	{
        ragel_type = TYPE_BIN;
        ragel_cat  = CAT_NUMBER;
    }
#line 45 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        onFloat(ragel_cat, ragel_type, ragel_num);
        ragel_num = {};
        ragel_cat = CAT_UNKNOWN;
        ragel_type = TYPE_UNKNOWN;
    }}
	goto st39;
tr71:
#line 37 "lex/ragel_numeric.rl"
	{
        ragel_type = TYPE_HEX;
        ragel_cat  = CAT_NUMBER;
    }
#line 45 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        onFloat(ragel_cat, ragel_type, ragel_num);
        ragel_num = {};
        ragel_cat = CAT_UNKNOWN;
        ragel_type = TYPE_UNKNOWN;
    }}
	goto st39;
st39:
#line 1 "NONE"
	{ts = 0;}
	if ( ++p == pe )
		goto _test_eof39;
case 39:
#line 1 "NONE"
	{ts = p;}
#line 779 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto st40;
		case 40: goto st41;
		case 41: goto tr56;
		case 43: goto tr57;
		case 45: goto tr57;
		case 48: goto tr58;
		case 93: goto tr60;
	}
	if ( (*p) > 13 ) {
		if ( 49 <= (*p) && (*p) <= 57 )
			goto tr59;
	} else if ( (*p) >= 9 )
		goto st40;
	goto st0;
st40:
	if ( ++p == pe )
		goto _test_eof40;
case 40:
	switch( (*p) ) {
		case 32: goto st40;
		case 41: goto tr56;
		case 93: goto tr60;
	}
	if ( 9 <= (*p) && (*p) <= 13 )
		goto st40;
	goto tr61;
st41:
	if ( ++p == pe )
		goto _test_eof41;
case 41:
	if ( (*p) == 32 )
		goto st41;
	if ( 9 <= (*p) && (*p) <= 13 )
		goto st41;
	goto tr62;
tr57:
#line 143 "lex/lemon_data_string_parser.rl"
	{ ragel_num = {}; }
#line 21 "lex/ragel_numeric.rl"
	{ ragel_num.sign = ((*p)=='-') ? -1 : 1; }
	goto st18;
st18:
	if ( ++p == pe )
		goto _test_eof18;
case 18:
#line 826 "lex/lemon_data_string_parser.cpp"
	if ( (*p) == 48 )
		goto tr22;
	if ( 49 <= (*p) && (*p) <= 57 )
		goto tr23;
	goto st0;
tr22:
#line 1 "NONE"
	{te = p+1;}
#line 29 "lex/ragel_numeric.rl"
	{ (ragel_num.vint *= 10) += ((*p)-'0'); }
#line 42 "lex/ragel_numeric.rl"
	{ (ragel_num.ratio.num *= 10) += ((*p)-'0'); }
	goto st42;
st42:
	if ( ++p == pe )
		goto _test_eof42;
case 42:
#line 844 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 46: goto tr64;
		case 47: goto st20;
	}
	goto tr63;
tr64:
#line 30 "lex/ragel_numeric.rl"
	{
        ragel_num.vint *= ragel_num.sign;
        ragel_type = TYPE_INT;
        ragel_cat  = CAT_NUMBER;
    }
#line 50 "lex/ragel_numeric.rl"
	{
        ragel_num.ratio.num = 0;
        ragel_num.ratio.den = 1;
    }
	goto st19;
st19:
	if ( ++p == pe )
		goto _test_eof19;
case 19:
#line 867 "lex/lemon_data_string_parser.cpp"
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr25;
	goto tr24;
tr25:
#line 54 "lex/ragel_numeric.rl"
	{
        (ragel_num.ratio.num *= 10) += ((*p) - '0');
        ragel_num.ratio.den *= 10;
    }
	goto st43;
st43:
	if ( ++p == pe )
		goto _test_eof43;
case 43:
#line 882 "lex/lemon_data_string_parser.cpp"
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr25;
	goto tr66;
st20:
	if ( ++p == pe )
		goto _test_eof20;
case 20:
	if ( (*p) == 48 )
		goto tr26;
	if ( 49 <= (*p) && (*p) <= 57 )
		goto tr27;
	goto tr24;
tr26:
#line 43 "lex/ragel_numeric.rl"
	{ (ragel_num.ratio.den *= 10) += ((*p)-'0'); }
	goto st44;
st44:
	if ( ++p == pe )
		goto _test_eof44;
case 44:
#line 903 "lex/lemon_data_string_parser.cpp"
	goto tr67;
tr27:
#line 43 "lex/ragel_numeric.rl"
	{ (ragel_num.ratio.den *= 10) += ((*p)-'0'); }
	goto st45;
st45:
	if ( ++p == pe )
		goto _test_eof45;
case 45:
#line 913 "lex/lemon_data_string_parser.cpp"
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr27;
	goto tr67;
tr23:
#line 1 "NONE"
	{te = p+1;}
#line 29 "lex/ragel_numeric.rl"
	{ (ragel_num.vint *= 10) += ((*p)-'0'); }
#line 42 "lex/ragel_numeric.rl"
	{ (ragel_num.ratio.num *= 10) += ((*p)-'0'); }
	goto st46;
tr59:
#line 1 "NONE"
	{te = p+1;}
#line 143 "lex/lemon_data_string_parser.rl"
	{ ragel_num = {}; }
#line 29 "lex/ragel_numeric.rl"
	{ (ragel_num.vint *= 10) += ((*p)-'0'); }
#line 42 "lex/ragel_numeric.rl"
	{ (ragel_num.ratio.num *= 10) += ((*p)-'0'); }
	goto st46;
st46:
	if ( ++p == pe )
		goto _test_eof46;
case 46:
#line 939 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 46: goto tr64;
		case 47: goto st20;
	}
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr23;
	goto tr63;
tr58:
#line 1 "NONE"
	{te = p+1;}
#line 143 "lex/lemon_data_string_parser.rl"
	{ ragel_num = {}; }
#line 29 "lex/ragel_numeric.rl"
	{ (ragel_num.vint *= 10) += ((*p)-'0'); }
#line 42 "lex/ragel_numeric.rl"
	{ (ragel_num.ratio.num *= 10) += ((*p)-'0'); }
	goto st47;
st47:
	if ( ++p == pe )
		goto _test_eof47;
case 47:
#line 961 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 46: goto tr64;
		case 47: goto st20;
		case 98: goto st21;
		case 120: goto st22;
	}
	goto tr63;
st21:
	if ( ++p == pe )
		goto _test_eof21;
case 21:
	if ( 48 <= (*p) && (*p) <= 49 )
		goto tr28;
	goto tr24;
tr28:
#line 23 "lex/ragel_numeric.rl"
	{ (ragel_num.vint <<= 1) |= ((*p)=='1'); }
	goto st48;
st48:
	if ( ++p == pe )
		goto _test_eof48;
case 48:
#line 984 "lex/lemon_data_string_parser.cpp"
	if ( 48 <= (*p) && (*p) <= 49 )
		goto tr28;
	goto tr70;
st22:
	if ( ++p == pe )
		goto _test_eof22;
case 22:
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr29;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr29;
	} else
		goto tr29;
	goto tr24;
tr29:
#line 36 "lex/ragel_numeric.rl"
	{ (ragel_num.vint <<= 4) |= xchar2digit((*p)); }
	goto st49;
st49:
	if ( ++p == pe )
		goto _test_eof49;
case 49:
#line 1009 "lex/lemon_data_string_parser.cpp"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr29;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr29;
	} else
		goto tr29;
	goto tr71;
tr30:
#line 213 "lex/lemon_data_string_parser.rl"
	{{p = ((te))-1;}{ pushToken(TK_SPACE); }}
	goto st50;
tr32:
#line 1 "NONE"
	{	switch( act ) {
	case 13:
	{{p = ((te))-1;} pushFloat(1); }
	break;
	case 14:
	{{p = ((te))-1;} pushFloat(0); }
	break;
	case 15:
	{{p = ((te))-1;} pushToken(TK_NULL); }
	break;
	case 19:
	{{p = ((te))-1;} ragel_string.clear(); {stack[top++] = 50;goto st37;} }
	break;
	case 28:
	{{p = ((te))-1;} pushToken(TK_SPACE); }
	break;
	case 29:
	{{p = ((te))-1;} pushSymbolToken(TK_SYMBOL, ts, te); }
	break;
	}
	}
	goto st50;
tr37:
#line 109 "lex/lemon_data_string_parser.rl"
	{{p = ((te))-1;}{
        RgbaHexFullMatch p;
        if (p.parse(ts, te - ts)) {
            pushToken(TK_COLOR);
            pushFloat(p.red());
            pushFloat(p.green());
            pushFloat(p.blue());
            pushFloat(p.alpha());
        }
        ragel_string.clear();
    }}
	goto st50;
tr40:
#line 121 "lex/lemon_data_string_parser.rl"
	{{p = ((te))-1;}{ pushSymbolToken(TK_SYMBOL, ts, te); }}
	goto st50;
tr43:
#line 175 "lex/lemon_data_string_parser.rl"
	{te = p+1;{
        pushToken(TK_MATRIX);
        pushFloat(ragel_mtx_rows);
        pushFloat(ragel_mtx_cols);
        {stack[top++] = 50;goto st39;}
    }}
	goto st50;
tr78:
#line 44 "lex/lemon_data_string_parser.rl"
	{te = p+1;{ pushToken(TK_LIST_CLOSE); }}
	goto st50;
tr86:
#line 217 "lex/lemon_data_string_parser.rl"
	{te = p+1;{ pushToken(TK_DICT_CLOSE); {cs = stack[--top];goto _again;} }}
	goto st50;
tr88:
#line 121 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{ pushSymbolToken(TK_SYMBOL, ts, te); }}
	goto st50;
tr98:
#line 213 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{ pushToken(TK_SPACE); }}
	goto st50;
tr101:
#line 72 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        // skip starting whitespaces
        auto ts0 = ts;
        while(*ts0 == ' ') ++ts0;
        // skip trailing whitespaces
        auto te0 = te;
        while(*(--te0) == ' ') ;
        pushSymbolToken(TK_DICT_KEY, ts0, te0);
    }}
	goto st50;
tr102:
#line 51 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{ ragel_string.clear(); {stack[top++] = 50;goto st37;} }}
	goto st50;
tr110:
#line 65 "lex/ragel_color.rl"
	{color.b = color.x;}
#line 67 "lex/ragel_color.rl"
	{ ragel_cat = CAT_COLOR; ragel_type = TYPE_HEX; }
#line 109 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        RgbaHexFullMatch p;
        if (p.parse(ts, te - ts)) {
            pushToken(TK_COLOR);
            pushFloat(p.red());
            pushFloat(p.green());
            pushFloat(p.blue());
            pushFloat(p.alpha());
        }
        ragel_string.clear();
    }}
	goto st50;
tr112:
#line 66 "lex/ragel_color.rl"
	{color.a = color.x;}
#line 67 "lex/ragel_color.rl"
	{ ragel_cat = CAT_COLOR; ragel_type = TYPE_HEX; }
#line 109 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        RgbaHexFullMatch p;
        if (p.parse(ts, te - ts)) {
            pushToken(TK_COLOR);
            pushFloat(p.red());
            pushFloat(p.green());
            pushFloat(p.blue());
            pushFloat(p.alpha());
        }
        ragel_string.clear();
    }}
	goto st50;
tr114:
#line 47 "lex/ragel_color.rl"
	{color.b = color.x;}
#line 50 "lex/ragel_color.rl"
	{ ragel_cat = CAT_COLOR; ragel_type = TYPE_HEX; }
#line 109 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        RgbaHexFullMatch p;
        if (p.parse(ts, te - ts)) {
            pushToken(TK_COLOR);
            pushFloat(p.red());
            pushFloat(p.green());
            pushFloat(p.blue());
            pushFloat(p.alpha());
        }
        ragel_string.clear();
    }}
	goto st50;
tr116:
#line 48 "lex/ragel_color.rl"
	{color.a = color.x;}
#line 50 "lex/ragel_color.rl"
	{ ragel_cat = CAT_COLOR; ragel_type = TYPE_HEX; }
#line 109 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        RgbaHexFullMatch p;
        if (p.parse(ts, te - ts)) {
            pushToken(TK_COLOR);
            pushFloat(p.red());
            pushFloat(p.green());
            pushFloat(p.blue());
            pushFloat(p.alpha());
        }
        ragel_string.clear();
    }}
	goto st50;
tr131:
#line 43 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{ pushToken(TK_LIST_OPEN); }}
	goto st50;
tr134:
#line 30 "lex/ragel_numeric.rl"
	{
        ragel_num.vint *= ragel_num.sign;
        ragel_type = TYPE_INT;
        ragel_cat  = CAT_NUMBER;
    }
#line 45 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        onFloat(ragel_cat, ragel_type, ragel_num);
        ragel_num = {};
        ragel_cat = CAT_UNKNOWN;
        ragel_type = TYPE_UNKNOWN;
    }}
	goto st50;
tr142:
#line 58 "lex/ragel_numeric.rl"
	{
        const auto frac = double(ragel_num.ratio.num) / ragel_num.ratio.den;
        ragel_num.vdouble = ragel_num.vint + ragel_num.sign * frac;
        ragel_type = TYPE_FLOAT;
        ragel_cat  = CAT_NUMBER;
    }
#line 45 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        onFloat(ragel_cat, ragel_type, ragel_num);
        ragel_num = {};
        ragel_cat = CAT_UNKNOWN;
        ragel_type = TYPE_UNKNOWN;
    }}
	goto st50;
tr149:
#line 44 "lex/ragel_numeric.rl"
	{
        ragel_num.ratio.num *= ragel_num.sign;
        ragel_type = TYPE_RATIO;
        ragel_cat  = CAT_NUMBER;
    }
#line 45 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        onFloat(ragel_cat, ragel_type, ragel_num);
        ragel_num = {};
        ragel_cat = CAT_UNKNOWN;
        ragel_type = TYPE_UNKNOWN;
    }}
	goto st50;
tr159:
#line 24 "lex/ragel_numeric.rl"
	{
        ragel_type = TYPE_BIN;
        ragel_cat  = CAT_NUMBER;
    }
#line 45 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        onFloat(ragel_cat, ragel_type, ragel_num);
        ragel_num = {};
        ragel_cat = CAT_UNKNOWN;
        ragel_type = TYPE_UNKNOWN;
    }}
	goto st50;
tr166:
#line 37 "lex/ragel_numeric.rl"
	{
        ragel_type = TYPE_HEX;
        ragel_cat  = CAT_NUMBER;
    }
#line 45 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        onFloat(ragel_cat, ragel_type, ragel_num);
        ragel_num = {};
        ragel_cat = CAT_UNKNOWN;
        ragel_type = TYPE_UNKNOWN;
    }}
	goto st50;
tr174:
#line 66 "lex/lemon_data_string_parser.rl"
	{te = p+1;{
        pushSymbolToken(TK_DATA_NAME, ts, te-1);
        pushToken(TK_DICT_OPEN);
        {stack[top++] = 50;goto st50;}
    }}
	goto st50;
tr175:
#line 59 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        // skip trailing whitespaces
        auto te0 = te;
        while(*(--te0) == ' ') ;
        pushSymbolToken(TK_DATA_NAME, ts, te0);
        pushToken(TK_LIST_OPEN);
    }}
	goto st50;
tr176:
#line 107 "lex/lemon_data_string_parser.rl"
	{te = p+1;{ pushToken(TK_STRING); ragel_string.clear(); {stack[top++] = 50;goto st37;} }}
	goto st50;
tr177:
#line 71 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{ pushToken(TK_DICT_OPEN); {stack[top++] = 50;goto st50;} }}
	goto st50;
tr179:
#line 52 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        // skip trailing whitespaces
        auto te0 = te;
        while(*(--te0) == ' ') ;
        pushSymbolToken(TK_FUNC_LIST_CALL, ts, te0);
        pushToken(TK_LIST_OPEN);
    }}
	goto st50;
st50:
#line 1 "NONE"
	{ts = 0;}
	if ( ++p == pe )
		goto _test_eof50;
case 50:
#line 1 "NONE"
	{ts = p;}
#line 1300 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr73;
		case 34: goto tr74;
		case 35: goto st63;
		case 39: goto st82;
		case 40: goto st85;
		case 41: goto tr78;
		case 43: goto tr79;
		case 45: goto tr79;
		case 48: goto tr80;
		case 83: goto st103;
		case 91: goto st104;
		case 93: goto tr86;
		case 95: goto st95;
	}
	if ( (*p) < 63 ) {
		if ( (*p) > 13 ) {
			if ( 49 <= (*p) && (*p) <= 57 )
				goto tr81;
		} else if ( (*p) >= 9 )
			goto tr73;
	} else if ( (*p) > 64 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto st105;
		} else if ( (*p) >= 65 )
			goto st101;
	} else
		goto st95;
	goto st51;
tr135:
#line 30 "lex/ragel_numeric.rl"
	{
        ragel_num.vint *= ragel_num.sign;
        ragel_type = TYPE_INT;
        ragel_cat  = CAT_NUMBER;
    }
	goto st51;
tr143:
#line 58 "lex/ragel_numeric.rl"
	{
        const auto frac = double(ragel_num.ratio.num) / ragel_num.ratio.den;
        ragel_num.vdouble = ragel_num.vint + ragel_num.sign * frac;
        ragel_type = TYPE_FLOAT;
        ragel_cat  = CAT_NUMBER;
    }
	goto st51;
tr150:
#line 44 "lex/ragel_numeric.rl"
	{
        ragel_num.ratio.num *= ragel_num.sign;
        ragel_type = TYPE_RATIO;
        ragel_cat  = CAT_NUMBER;
    }
	goto st51;
tr160:
#line 24 "lex/ragel_numeric.rl"
	{
        ragel_type = TYPE_BIN;
        ragel_cat  = CAT_NUMBER;
    }
	goto st51;
tr167:
#line 37 "lex/ragel_numeric.rl"
	{
        ragel_type = TYPE_HEX;
        ragel_cat  = CAT_NUMBER;
    }
	goto st51;
st51:
	if ( ++p == pe )
		goto _test_eof51;
case 51:
#line 1374 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr88;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr91;
		} else if ( (*p) >= 63 )
			goto tr91;
	} else
		goto tr91;
	goto st51;
tr136:
#line 30 "lex/ragel_numeric.rl"
	{
        ragel_num.vint *= ragel_num.sign;
        ragel_type = TYPE_INT;
        ragel_cat  = CAT_NUMBER;
    }
	goto st52;
tr144:
#line 58 "lex/ragel_numeric.rl"
	{
        const auto frac = double(ragel_num.ratio.num) / ragel_num.ratio.den;
        ragel_num.vdouble = ragel_num.vint + ragel_num.sign * frac;
        ragel_type = TYPE_FLOAT;
        ragel_cat  = CAT_NUMBER;
    }
	goto st52;
tr151:
#line 44 "lex/ragel_numeric.rl"
	{
        ragel_num.ratio.num *= ragel_num.sign;
        ragel_type = TYPE_RATIO;
        ragel_cat  = CAT_NUMBER;
    }
	goto st52;
tr161:
#line 24 "lex/ragel_numeric.rl"
	{
        ragel_type = TYPE_BIN;
        ragel_cat  = CAT_NUMBER;
    }
	goto st52;
tr168:
#line 37 "lex/ragel_numeric.rl"
	{
        ragel_type = TYPE_HEX;
        ragel_cat  = CAT_NUMBER;
    }
	goto st52;
st52:
	if ( ++p == pe )
		goto _test_eof52;
case 52:
#line 1442 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 48: goto tr92;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
	}
	if ( (*p) < 63 ) {
		if ( (*p) < 40 ) {
			if ( 9 <= (*p) && (*p) <= 13 )
				goto tr88;
		} else if ( (*p) > 41 ) {
			if ( 49 <= (*p) && (*p) <= 57 )
				goto tr93;
		} else
			goto tr88;
	} else if ( (*p) > 64 ) {
		if ( (*p) < 71 ) {
			if ( 65 <= (*p) && (*p) <= 70 )
				goto tr92;
		} else if ( (*p) > 90 ) {
			if ( (*p) > 102 ) {
				if ( 103 <= (*p) && (*p) <= 122 )
					goto tr91;
			} else if ( (*p) >= 97 )
				goto tr92;
		} else
			goto tr91;
	} else
		goto tr91;
	goto st51;
tr137:
#line 30 "lex/ragel_numeric.rl"
	{
        ragel_num.vint *= ragel_num.sign;
        ragel_type = TYPE_INT;
        ragel_cat  = CAT_NUMBER;
    }
	goto st53;
tr145:
#line 58 "lex/ragel_numeric.rl"
	{
        const auto frac = double(ragel_num.ratio.num) / ragel_num.ratio.den;
        ragel_num.vdouble = ragel_num.vint + ragel_num.sign * frac;
        ragel_type = TYPE_FLOAT;
        ragel_cat  = CAT_NUMBER;
    }
	goto st53;
tr152:
#line 44 "lex/ragel_numeric.rl"
	{
        ragel_num.ratio.num *= ragel_num.sign;
        ragel_type = TYPE_RATIO;
        ragel_cat  = CAT_NUMBER;
    }
	goto st53;
tr162:
#line 24 "lex/ragel_numeric.rl"
	{
        ragel_type = TYPE_BIN;
        ragel_cat  = CAT_NUMBER;
    }
	goto st53;
tr169:
#line 37 "lex/ragel_numeric.rl"
	{
        ragel_type = TYPE_HEX;
        ragel_cat  = CAT_NUMBER;
    }
	goto st53;
st53:
	if ( ++p == pe )
		goto _test_eof53;
case 53:
#line 1520 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 63: goto st54;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto st54;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr88;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto st54;
		} else if ( (*p) >= 64 )
			goto tr91;
	} else
		goto st54;
	goto st51;
st54:
	if ( ++p == pe )
		goto _test_eof54;
case 54:
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st55;
		case 58: goto tr88;
		case 63: goto st54;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto st54;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr88;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto st54;
		} else if ( (*p) >= 64 )
			goto tr91;
	} else
		goto st54;
	goto st51;
st55:
	if ( ++p == pe )
		goto _test_eof55;
case 55:
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto tr88;
		case 63: goto st54;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto st54;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr88;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto st54;
		} else if ( (*p) >= 64 )
			goto tr91;
	} else
		goto st54;
	goto st51;
tr91:
#line 1 "NONE"
	{te = p+1;}
#line 121 "lex/lemon_data_string_parser.rl"
	{act = 29;}
	goto st56;
tr122:
#line 1 "NONE"
	{te = p+1;}
#line 40 "lex/lemon_data_string_parser.rl"
	{act = 14;}
	goto st56;
tr125:
#line 1 "NONE"
	{te = p+1;}
#line 41 "lex/lemon_data_string_parser.rl"
	{act = 15;}
	goto st56;
tr128:
#line 1 "NONE"
	{te = p+1;}
#line 39 "lex/lemon_data_string_parser.rl"
	{act = 13;}
	goto st56;
tr140:
#line 1 "NONE"
	{te = p+1;}
#line 30 "lex/ragel_numeric.rl"
	{
        ragel_num.vint *= ragel_num.sign;
        ragel_type = TYPE_INT;
        ragel_cat  = CAT_NUMBER;
    }
#line 121 "lex/lemon_data_string_parser.rl"
	{act = 29;}
	goto st56;
tr146:
#line 1 "NONE"
	{te = p+1;}
#line 58 "lex/ragel_numeric.rl"
	{
        const auto frac = double(ragel_num.ratio.num) / ragel_num.ratio.den;
        ragel_num.vdouble = ragel_num.vint + ragel_num.sign * frac;
        ragel_type = TYPE_FLOAT;
        ragel_cat  = CAT_NUMBER;
    }
#line 121 "lex/lemon_data_string_parser.rl"
	{act = 29;}
	goto st56;
tr153:
#line 1 "NONE"
	{te = p+1;}
#line 44 "lex/ragel_numeric.rl"
	{
        ragel_num.ratio.num *= ragel_num.sign;
        ragel_type = TYPE_RATIO;
        ragel_cat  = CAT_NUMBER;
    }
#line 121 "lex/lemon_data_string_parser.rl"
	{act = 29;}
	goto st56;
st56:
	if ( ++p == pe )
		goto _test_eof56;
case 56:
#line 1671 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr32;
		case 34: goto tr32;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto tr32;
		case 91: goto tr32;
		case 93: goto tr32;
		case 95: goto tr91;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr32;
		} else if ( (*p) >= 9 )
			goto tr32;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr91;
		} else if ( (*p) >= 63 )
			goto tr91;
	} else
		goto tr91;
	goto st51;
tr92:
#line 38 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st57;
st57:
	if ( ++p == pe )
		goto _test_eof57;
case 57:
#line 1709 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto tr88;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
	}
	if ( (*p) < 63 ) {
		if ( (*p) < 40 ) {
			if ( 9 <= (*p) && (*p) <= 13 )
				goto tr88;
		} else if ( (*p) > 41 ) {
			if ( 48 <= (*p) && (*p) <= 57 )
				goto tr96;
		} else
			goto tr88;
	} else if ( (*p) > 64 ) {
		if ( (*p) < 71 ) {
			if ( 65 <= (*p) && (*p) <= 70 )
				goto tr96;
		} else if ( (*p) > 90 ) {
			if ( (*p) > 102 ) {
				if ( 103 <= (*p) && (*p) <= 122 )
					goto tr91;
			} else if ( (*p) >= 97 )
				goto tr96;
		} else
			goto tr91;
	} else
		goto tr91;
	goto st51;
tr96:
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 63 "lex/ragel_color.rl"
	{color.r = color.x;}
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st58;
tr97:
#line 139 "lex/lemon_data_string_parser.rl"
	{ (ragel_mtx_rows *= 10) += ((*p) - '0'); }
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 63 "lex/ragel_color.rl"
	{color.r = color.x;}
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st58;
st58:
	if ( ++p == pe )
		goto _test_eof58;
case 58:
#line 1766 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
	}
	if ( (*p) < 63 ) {
		if ( (*p) < 40 ) {
			if ( 9 <= (*p) && (*p) <= 13 )
				goto tr88;
		} else if ( (*p) > 41 ) {
			if ( 48 <= (*p) && (*p) <= 58 )
				goto tr88;
		} else
			goto tr88;
	} else if ( (*p) > 64 ) {
		if ( (*p) < 71 ) {
			if ( 65 <= (*p) && (*p) <= 70 )
				goto tr88;
		} else if ( (*p) > 90 ) {
			if ( (*p) > 102 ) {
				if ( 103 <= (*p) && (*p) <= 122 )
					goto tr91;
			} else if ( (*p) >= 97 )
				goto tr88;
		} else
			goto tr91;
	} else
		goto tr91;
	goto st51;
tr93:
#line 139 "lex/lemon_data_string_parser.rl"
	{ ragel_mtx_rows = (*p) - '0'; }
#line 38 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st59;
st59:
	if ( ++p == pe )
		goto _test_eof59;
case 59:
#line 1814 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto tr88;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
	}
	if ( (*p) < 63 ) {
		if ( (*p) < 40 ) {
			if ( 9 <= (*p) && (*p) <= 13 )
				goto tr88;
		} else if ( (*p) > 41 ) {
			if ( 48 <= (*p) && (*p) <= 57 )
				goto tr97;
		} else
			goto tr88;
	} else if ( (*p) > 64 ) {
		if ( (*p) < 71 ) {
			if ( 65 <= (*p) && (*p) <= 70 )
				goto tr96;
		} else if ( (*p) > 90 ) {
			if ( (*p) > 102 ) {
				if ( 103 <= (*p) && (*p) <= 122 )
					goto tr91;
			} else if ( (*p) >= 97 )
				goto tr96;
		} else
			goto tr91;
	} else
		goto tr91;
	goto st51;
tr73:
#line 1 "NONE"
	{te = p+1;}
#line 213 "lex/lemon_data_string_parser.rl"
	{act = 28;}
	goto st60;
st60:
	if ( ++p == pe )
		goto _test_eof60;
case 60:
#line 1859 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr73;
		case 34: goto st23;
		case 39: goto st26;
		case 41: goto tr78;
		case 93: goto tr86;
		case 95: goto st28;
	}
	if ( (*p) < 48 ) {
		if ( 9 <= (*p) && (*p) <= 13 )
			goto tr73;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto st28;
		} else if ( (*p) >= 63 )
			goto st28;
	} else
		goto st28;
	goto tr98;
st23:
	if ( ++p == pe )
		goto _test_eof23;
case 23:
	switch( (*p) ) {
		case 63: goto st24;
		case 95: goto st24;
	}
	if ( (*p) > 57 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto st24;
	} else if ( (*p) >= 48 )
		goto st24;
	goto tr30;
st24:
	if ( ++p == pe )
		goto _test_eof24;
case 24:
	switch( (*p) ) {
		case 34: goto st25;
		case 63: goto st24;
		case 95: goto st24;
	}
	if ( (*p) > 57 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto st24;
	} else if ( (*p) >= 48 )
		goto st24;
	goto tr32;
st25:
	if ( ++p == pe )
		goto _test_eof25;
case 25:
	if ( (*p) == 58 )
		goto st61;
	goto tr32;
tr155:
#line 30 "lex/ragel_numeric.rl"
	{
        ragel_num.vint *= ragel_num.sign;
        ragel_type = TYPE_INT;
        ragel_cat  = CAT_NUMBER;
    }
	goto st61;
tr164:
#line 24 "lex/ragel_numeric.rl"
	{
        ragel_type = TYPE_BIN;
        ragel_cat  = CAT_NUMBER;
    }
	goto st61;
tr170:
#line 37 "lex/ragel_numeric.rl"
	{
        ragel_type = TYPE_HEX;
        ragel_cat  = CAT_NUMBER;
    }
	goto st61;
st61:
	if ( ++p == pe )
		goto _test_eof61;
case 61:
#line 1942 "lex/lemon_data_string_parser.cpp"
	if ( (*p) == 32 )
		goto st61;
	if ( 9 <= (*p) && (*p) <= 13 )
		goto st61;
	goto tr101;
st26:
	if ( ++p == pe )
		goto _test_eof26;
case 26:
	switch( (*p) ) {
		case 63: goto st27;
		case 95: goto st27;
	}
	if ( (*p) > 57 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto st27;
	} else if ( (*p) >= 48 )
		goto st27;
	goto tr30;
st27:
	if ( ++p == pe )
		goto _test_eof27;
case 27:
	switch( (*p) ) {
		case 39: goto st25;
		case 63: goto st27;
		case 95: goto st27;
	}
	if ( (*p) > 57 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto st27;
	} else if ( (*p) >= 48 )
		goto st27;
	goto tr30;
st28:
	if ( ++p == pe )
		goto _test_eof28;
case 28:
	switch( (*p) ) {
		case 58: goto st61;
		case 95: goto st28;
	}
	if ( (*p) < 63 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto st28;
	} else if ( (*p) > 90 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto st28;
	} else
		goto st28;
	goto tr30;
tr74:
#line 1 "NONE"
	{te = p+1;}
#line 51 "lex/lemon_data_string_parser.rl"
	{act = 19;}
	goto st62;
st62:
	if ( ++p == pe )
		goto _test_eof62;
case 62:
#line 2004 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 63: goto st24;
		case 95: goto st24;
	}
	if ( (*p) > 57 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto st24;
	} else if ( (*p) >= 48 )
		goto st24;
	goto tr102;
st63:
	if ( ++p == pe )
		goto _test_eof63;
case 63:
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 48: goto tr103;
		case 91: goto tr43;
		case 93: goto tr88;
		case 95: goto tr91;
		case 102: goto tr105;
		case 110: goto st76;
		case 116: goto st79;
	}
	if ( (*p) < 63 ) {
		if ( (*p) < 40 ) {
			if ( 9 <= (*p) && (*p) <= 13 )
				goto tr88;
		} else if ( (*p) > 41 ) {
			if ( 49 <= (*p) && (*p) <= 57 )
				goto tr104;
		} else
			goto tr88;
	} else if ( (*p) > 64 ) {
		if ( (*p) < 71 ) {
			if ( 65 <= (*p) && (*p) <= 70 )
				goto tr103;
		} else if ( (*p) > 90 ) {
			if ( (*p) > 101 ) {
				if ( 103 <= (*p) && (*p) <= 122 )
					goto tr91;
			} else if ( (*p) >= 97 )
				goto tr103;
		} else
			goto tr91;
	} else
		goto tr91;
	goto st51;
tr103:
#line 38 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st64;
st64:
	if ( ++p == pe )
		goto _test_eof64;
case 64:
#line 2068 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto tr88;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
	}
	if ( (*p) < 63 ) {
		if ( (*p) < 40 ) {
			if ( 9 <= (*p) && (*p) <= 13 )
				goto tr88;
		} else if ( (*p) > 41 ) {
			if ( 48 <= (*p) && (*p) <= 57 )
				goto tr108;
		} else
			goto tr88;
	} else if ( (*p) > 64 ) {
		if ( (*p) < 71 ) {
			if ( 65 <= (*p) && (*p) <= 70 )
				goto tr108;
		} else if ( (*p) > 90 ) {
			if ( (*p) > 102 ) {
				if ( 103 <= (*p) && (*p) <= 122 )
					goto tr91;
			} else if ( (*p) >= 97 )
				goto tr108;
		} else
			goto tr91;
	} else
		goto tr91;
	goto st51;
tr108:
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 63 "lex/ragel_color.rl"
	{color.r = color.x;}
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st65;
st65:
	if ( ++p == pe )
		goto _test_eof65;
case 65:
#line 2115 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto tr88;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
	}
	if ( (*p) < 63 ) {
		if ( (*p) < 40 ) {
			if ( 9 <= (*p) && (*p) <= 13 )
				goto tr88;
		} else if ( (*p) > 41 ) {
			if ( 48 <= (*p) && (*p) <= 57 )
				goto tr109;
		} else
			goto tr88;
	} else if ( (*p) > 64 ) {
		if ( (*p) < 71 ) {
			if ( 65 <= (*p) && (*p) <= 70 )
				goto tr109;
		} else if ( (*p) > 90 ) {
			if ( (*p) > 102 ) {
				if ( 103 <= (*p) && (*p) <= 122 )
					goto tr91;
			} else if ( (*p) >= 97 )
				goto tr109;
		} else
			goto tr91;
	} else
		goto tr91;
	goto st51;
tr109:
#line 45 "lex/ragel_color.rl"
	{color.r = color.x;}
#line 38 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 64 "lex/ragel_color.rl"
	{color.g = color.x;}
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st66;
st66:
	if ( ++p == pe )
		goto _test_eof66;
case 66:
#line 2166 "lex/lemon_data_string_parser.cpp"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr111;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr111;
	} else
		goto tr111;
	goto tr110;
tr111:
#line 1 "NONE"
	{te = p+1;}
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 65 "lex/ragel_color.rl"
	{color.b = color.x;}
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st67;
st67:
	if ( ++p == pe )
		goto _test_eof67;
case 67:
#line 2190 "lex/lemon_data_string_parser.cpp"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr113;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr113;
	} else
		goto tr113;
	goto tr112;
tr113:
#line 46 "lex/ragel_color.rl"
	{color.g = color.x;}
#line 38 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
	goto st29;
st29:
	if ( ++p == pe )
		goto _test_eof29;
case 29:
#line 2212 "lex/lemon_data_string_parser.cpp"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr38;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr38;
	} else
		goto tr38;
	goto tr37;
tr38:
#line 1 "NONE"
	{te = p+1;}
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
	goto st68;
st68:
	if ( ++p == pe )
		goto _test_eof68;
case 68:
#line 2232 "lex/lemon_data_string_parser.cpp"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr115;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr115;
	} else
		goto tr115;
	goto tr114;
tr115:
#line 47 "lex/ragel_color.rl"
	{color.b = color.x;}
#line 38 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
	goto st30;
st30:
	if ( ++p == pe )
		goto _test_eof30;
case 30:
#line 2254 "lex/lemon_data_string_parser.cpp"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr39;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr39;
	} else
		goto tr39;
	goto tr37;
tr39:
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
	goto st69;
st69:
	if ( ++p == pe )
		goto _test_eof69;
case 69:
#line 2272 "lex/lemon_data_string_parser.cpp"
	goto tr116;
tr104:
#line 1 "NONE"
	{te = p+1;}
#line 139 "lex/lemon_data_string_parser.rl"
	{ ragel_mtx_rows = (*p) - '0'; }
#line 38 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st70;
st70:
	if ( ++p == pe )
		goto _test_eof70;
case 70:
#line 2290 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto st31;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
	}
	if ( (*p) < 63 ) {
		if ( (*p) < 40 ) {
			if ( 9 <= (*p) && (*p) <= 13 )
				goto tr88;
		} else if ( (*p) > 41 ) {
			if ( 48 <= (*p) && (*p) <= 57 )
				goto tr117;
		} else
			goto tr88;
	} else if ( (*p) > 64 ) {
		if ( (*p) < 71 ) {
			if ( 65 <= (*p) && (*p) <= 70 )
				goto tr108;
		} else if ( (*p) > 90 ) {
			if ( (*p) > 102 ) {
				if ( 103 <= (*p) && (*p) <= 122 )
					goto tr91;
			} else if ( (*p) >= 97 )
				goto tr108;
		} else
			goto tr91;
	} else
		goto tr91;
	goto st51;
tr117:
#line 1 "NONE"
	{te = p+1;}
#line 139 "lex/lemon_data_string_parser.rl"
	{ (ragel_mtx_rows *= 10) += ((*p) - '0'); }
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 63 "lex/ragel_color.rl"
	{color.r = color.x;}
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st71;
st71:
	if ( ++p == pe )
		goto _test_eof71;
case 71:
#line 2341 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto st31;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
	}
	if ( (*p) < 63 ) {
		if ( (*p) < 40 ) {
			if ( 9 <= (*p) && (*p) <= 13 )
				goto tr88;
		} else if ( (*p) > 41 ) {
			if ( 48 <= (*p) && (*p) <= 57 )
				goto tr109;
		} else
			goto tr88;
	} else if ( (*p) > 64 ) {
		if ( (*p) < 71 ) {
			if ( 65 <= (*p) && (*p) <= 70 )
				goto tr109;
		} else if ( (*p) > 90 ) {
			if ( (*p) > 102 ) {
				if ( 103 <= (*p) && (*p) <= 122 )
					goto tr91;
			} else if ( (*p) >= 97 )
				goto tr109;
		} else
			goto tr91;
	} else
		goto tr91;
	goto st51;
st31:
	if ( ++p == pe )
		goto _test_eof31;
case 31:
	if ( 49 <= (*p) && (*p) <= 57 )
		goto tr41;
	goto tr40;
tr41:
#line 138 "lex/lemon_data_string_parser.rl"
	{ ragel_mtx_cols = (*p) - '0'; }
	goto st32;
st32:
	if ( ++p == pe )
		goto _test_eof32;
case 32:
#line 2391 "lex/lemon_data_string_parser.cpp"
	if ( (*p) == 91 )
		goto tr43;
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr42;
	goto tr40;
tr42:
#line 138 "lex/lemon_data_string_parser.rl"
	{ (ragel_mtx_cols *= 10) += ((*p) - '0'); }
	goto st33;
st33:
	if ( ++p == pe )
		goto _test_eof33;
case 33:
#line 2405 "lex/lemon_data_string_parser.cpp"
	if ( (*p) == 91 )
		goto tr43;
	goto tr40;
tr105:
#line 38 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st72;
st72:
	if ( ++p == pe )
		goto _test_eof72;
case 72:
#line 2421 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto tr88;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
		case 97: goto tr119;
	}
	if ( (*p) < 63 ) {
		if ( (*p) < 40 ) {
			if ( 9 <= (*p) && (*p) <= 13 )
				goto tr88;
		} else if ( (*p) > 41 ) {
			if ( 48 <= (*p) && (*p) <= 57 )
				goto tr108;
		} else
			goto tr88;
	} else if ( (*p) > 64 ) {
		if ( (*p) < 71 ) {
			if ( 65 <= (*p) && (*p) <= 70 )
				goto tr108;
		} else if ( (*p) > 90 ) {
			if ( (*p) > 102 ) {
				if ( 103 <= (*p) && (*p) <= 122 )
					goto tr91;
			} else if ( (*p) >= 98 )
				goto tr108;
		} else
			goto tr91;
	} else
		goto tr91;
	goto st51;
tr119:
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 63 "lex/ragel_color.rl"
	{color.r = color.x;}
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st73;
st73:
	if ( ++p == pe )
		goto _test_eof73;
case 73:
#line 2469 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto tr88;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
		case 108: goto st74;
	}
	if ( (*p) < 63 ) {
		if ( (*p) < 40 ) {
			if ( 9 <= (*p) && (*p) <= 13 )
				goto tr88;
		} else if ( (*p) > 41 ) {
			if ( 48 <= (*p) && (*p) <= 57 )
				goto tr109;
		} else
			goto tr88;
	} else if ( (*p) > 64 ) {
		if ( (*p) < 71 ) {
			if ( 65 <= (*p) && (*p) <= 70 )
				goto tr109;
		} else if ( (*p) > 90 ) {
			if ( (*p) > 102 ) {
				if ( 103 <= (*p) && (*p) <= 122 )
					goto tr91;
			} else if ( (*p) >= 97 )
				goto tr109;
		} else
			goto tr91;
	} else
		goto tr91;
	goto st51;
st74:
	if ( ++p == pe )
		goto _test_eof74;
case 74:
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto tr88;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
		case 115: goto st75;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr88;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr91;
		} else if ( (*p) >= 63 )
			goto tr91;
	} else
		goto tr91;
	goto st51;
st75:
	if ( ++p == pe )
		goto _test_eof75;
case 75:
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto tr88;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
		case 101: goto tr122;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr88;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr91;
		} else if ( (*p) >= 63 )
			goto tr91;
	} else
		goto tr91;
	goto st51;
st76:
	if ( ++p == pe )
		goto _test_eof76;
case 76:
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto tr88;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
		case 117: goto st77;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr88;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr91;
		} else if ( (*p) >= 63 )
			goto tr91;
	} else
		goto tr91;
	goto st51;
st77:
	if ( ++p == pe )
		goto _test_eof77;
case 77:
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto tr88;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
		case 108: goto st78;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr88;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr91;
		} else if ( (*p) >= 63 )
			goto tr91;
	} else
		goto tr91;
	goto st51;
st78:
	if ( ++p == pe )
		goto _test_eof78;
case 78:
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto tr88;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
		case 108: goto tr125;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr88;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr91;
		} else if ( (*p) >= 63 )
			goto tr91;
	} else
		goto tr91;
	goto st51;
st79:
	if ( ++p == pe )
		goto _test_eof79;
case 79:
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto tr88;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
		case 114: goto st80;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr88;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr91;
		} else if ( (*p) >= 63 )
			goto tr91;
	} else
		goto tr91;
	goto st51;
st80:
	if ( ++p == pe )
		goto _test_eof80;
case 80:
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto tr88;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
		case 117: goto st81;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr88;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr91;
		} else if ( (*p) >= 63 )
			goto tr91;
	} else
		goto tr91;
	goto st51;
st81:
	if ( ++p == pe )
		goto _test_eof81;
case 81:
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto tr88;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
		case 101: goto tr128;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr88;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr91;
		} else if ( (*p) >= 63 )
			goto tr91;
	} else
		goto tr91;
	goto st51;
st82:
	if ( ++p == pe )
		goto _test_eof82;
case 82:
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 63: goto st83;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto st83;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr88;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto st83;
		} else if ( (*p) >= 64 )
			goto tr91;
	} else
		goto st83;
	goto st51;
st83:
	if ( ++p == pe )
		goto _test_eof83;
case 83:
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st84;
		case 58: goto tr88;
		case 63: goto st83;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto st83;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr88;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto st83;
		} else if ( (*p) >= 64 )
			goto tr91;
	} else
		goto st83;
	goto st51;
st84:
	if ( ++p == pe )
		goto _test_eof84;
case 84:
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto st61;
		case 63: goto st54;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto st54;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr88;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto st54;
		} else if ( (*p) >= 64 )
			goto tr91;
	} else
		goto st54;
	goto st51;
st85:
	if ( ++p == pe )
		goto _test_eof85;
case 85:
	if ( (*p) == 32 )
		goto st85;
	if ( 9 <= (*p) && (*p) <= 13 )
		goto st85;
	goto tr131;
tr79:
#line 143 "lex/lemon_data_string_parser.rl"
	{ ragel_num = {}; }
#line 21 "lex/ragel_numeric.rl"
	{ ragel_num.sign = ((*p)=='-') ? -1 : 1; }
	goto st86;
st86:
	if ( ++p == pe )
		goto _test_eof86;
case 86:
#line 2853 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 48: goto tr132;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
	}
	if ( (*p) < 49 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr88;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr91;
		} else if ( (*p) >= 63 )
			goto tr91;
	} else
		goto tr133;
	goto st51;
tr132:
#line 29 "lex/ragel_numeric.rl"
	{ (ragel_num.vint *= 10) += ((*p)-'0'); }
#line 42 "lex/ragel_numeric.rl"
	{ (ragel_num.ratio.num *= 10) += ((*p)-'0'); }
	goto st87;
st87:
	if ( ++p == pe )
		goto _test_eof87;
case 87:
#line 2889 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr134;
		case 34: goto tr134;
		case 35: goto tr136;
		case 39: goto tr137;
		case 46: goto tr138;
		case 47: goto st90;
		case 58: goto tr134;
		case 91: goto tr134;
		case 93: goto tr134;
		case 95: goto tr140;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr134;
		} else if ( (*p) >= 9 )
			goto tr134;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr140;
		} else if ( (*p) >= 63 )
			goto tr140;
	} else
		goto tr140;
	goto tr135;
tr138:
#line 30 "lex/ragel_numeric.rl"
	{
        ragel_num.vint *= ragel_num.sign;
        ragel_type = TYPE_INT;
        ragel_cat  = CAT_NUMBER;
    }
#line 50 "lex/ragel_numeric.rl"
	{
        ragel_num.ratio.num = 0;
        ragel_num.ratio.den = 1;
    }
	goto st88;
st88:
	if ( ++p == pe )
		goto _test_eof88;
case 88:
#line 2934 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr88;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr91;
		} else if ( (*p) >= 63 )
			goto tr91;
	} else
		goto tr141;
	goto st51;
tr141:
#line 54 "lex/ragel_numeric.rl"
	{
        (ragel_num.ratio.num *= 10) += ((*p) - '0');
        ragel_num.ratio.den *= 10;
    }
	goto st89;
st89:
	if ( ++p == pe )
		goto _test_eof89;
case 89:
#line 2970 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr142;
		case 34: goto tr142;
		case 35: goto tr144;
		case 39: goto tr145;
		case 58: goto tr142;
		case 91: goto tr142;
		case 93: goto tr142;
		case 95: goto tr146;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr142;
		} else if ( (*p) >= 9 )
			goto tr142;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr146;
		} else if ( (*p) >= 63 )
			goto tr146;
	} else
		goto tr141;
	goto tr143;
st90:
	if ( ++p == pe )
		goto _test_eof90;
case 90:
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 48: goto tr147;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto tr91;
	}
	if ( (*p) < 49 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr88;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr91;
		} else if ( (*p) >= 63 )
			goto tr91;
	} else
		goto tr148;
	goto st51;
tr147:
#line 43 "lex/ragel_numeric.rl"
	{ (ragel_num.ratio.den *= 10) += ((*p)-'0'); }
	goto st91;
st91:
	if ( ++p == pe )
		goto _test_eof91;
case 91:
#line 3033 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr149;
		case 34: goto tr149;
		case 35: goto tr151;
		case 39: goto tr152;
		case 58: goto tr149;
		case 91: goto tr149;
		case 93: goto tr149;
		case 95: goto tr153;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr149;
		} else if ( (*p) >= 9 )
			goto tr149;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr153;
		} else if ( (*p) >= 63 )
			goto tr153;
	} else
		goto tr153;
	goto tr150;
tr148:
#line 43 "lex/ragel_numeric.rl"
	{ (ragel_num.ratio.den *= 10) += ((*p)-'0'); }
	goto st92;
st92:
	if ( ++p == pe )
		goto _test_eof92;
case 92:
#line 3067 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr149;
		case 34: goto tr149;
		case 35: goto tr151;
		case 39: goto tr152;
		case 58: goto tr149;
		case 91: goto tr149;
		case 93: goto tr149;
		case 95: goto tr153;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr149;
		} else if ( (*p) >= 9 )
			goto tr149;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr153;
		} else if ( (*p) >= 63 )
			goto tr153;
	} else
		goto tr148;
	goto tr150;
tr133:
#line 29 "lex/ragel_numeric.rl"
	{ (ragel_num.vint *= 10) += ((*p)-'0'); }
#line 42 "lex/ragel_numeric.rl"
	{ (ragel_num.ratio.num *= 10) += ((*p)-'0'); }
	goto st93;
st93:
	if ( ++p == pe )
		goto _test_eof93;
case 93:
#line 3103 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr134;
		case 34: goto tr134;
		case 35: goto tr136;
		case 39: goto tr137;
		case 46: goto tr138;
		case 47: goto st90;
		case 58: goto tr134;
		case 91: goto tr134;
		case 93: goto tr134;
		case 95: goto tr140;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr134;
		} else if ( (*p) >= 9 )
			goto tr134;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr140;
		} else if ( (*p) >= 63 )
			goto tr140;
	} else
		goto tr133;
	goto tr135;
tr80:
#line 143 "lex/lemon_data_string_parser.rl"
	{ ragel_num = {}; }
#line 29 "lex/ragel_numeric.rl"
	{ (ragel_num.vint *= 10) += ((*p)-'0'); }
#line 42 "lex/ragel_numeric.rl"
	{ (ragel_num.ratio.num *= 10) += ((*p)-'0'); }
	goto st94;
st94:
	if ( ++p == pe )
		goto _test_eof94;
case 94:
#line 3143 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr134;
		case 34: goto tr134;
		case 35: goto tr136;
		case 39: goto tr137;
		case 46: goto tr138;
		case 47: goto st90;
		case 58: goto tr155;
		case 91: goto tr134;
		case 93: goto tr134;
		case 95: goto tr154;
		case 98: goto st96;
		case 120: goto st98;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr134;
		} else if ( (*p) >= 9 )
			goto tr134;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr154;
		} else if ( (*p) >= 63 )
			goto tr154;
	} else
		goto tr154;
	goto tr135;
tr154:
#line 30 "lex/ragel_numeric.rl"
	{
        ragel_num.vint *= ragel_num.sign;
        ragel_type = TYPE_INT;
        ragel_cat  = CAT_NUMBER;
    }
	goto st95;
tr163:
#line 24 "lex/ragel_numeric.rl"
	{
        ragel_type = TYPE_BIN;
        ragel_cat  = CAT_NUMBER;
    }
	goto st95;
tr171:
#line 37 "lex/ragel_numeric.rl"
	{
        ragel_type = TYPE_HEX;
        ragel_cat  = CAT_NUMBER;
    }
	goto st95;
st95:
	if ( ++p == pe )
		goto _test_eof95;
case 95:
#line 3199 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto st61;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto st95;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr88;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto st95;
		} else if ( (*p) >= 63 )
			goto st95;
	} else
		goto st95;
	goto st51;
st96:
	if ( ++p == pe )
		goto _test_eof96;
case 96:
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto st61;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto st95;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr88;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 49 ) {
		if ( (*p) < 63 ) {
			if ( 50 <= (*p) && (*p) <= 57 )
				goto st95;
		} else if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto st95;
		} else
			goto st95;
	} else
		goto tr158;
	goto st51;
tr158:
#line 23 "lex/ragel_numeric.rl"
	{ (ragel_num.vint <<= 1) |= ((*p)=='1'); }
	goto st97;
st97:
	if ( ++p == pe )
		goto _test_eof97;
case 97:
#line 3265 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr159;
		case 34: goto tr159;
		case 35: goto tr161;
		case 39: goto tr162;
		case 58: goto tr164;
		case 91: goto tr159;
		case 93: goto tr159;
		case 95: goto tr163;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr159;
		} else if ( (*p) >= 9 )
			goto tr159;
	} else if ( (*p) > 49 ) {
		if ( (*p) < 63 ) {
			if ( 50 <= (*p) && (*p) <= 57 )
				goto tr163;
		} else if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr163;
		} else
			goto tr163;
	} else
		goto tr158;
	goto tr160;
st98:
	if ( ++p == pe )
		goto _test_eof98;
case 98:
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 58: goto st61;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto st95;
	}
	if ( (*p) < 63 ) {
		if ( (*p) < 40 ) {
			if ( 9 <= (*p) && (*p) <= 13 )
				goto tr88;
		} else if ( (*p) > 41 ) {
			if ( 48 <= (*p) && (*p) <= 57 )
				goto tr165;
		} else
			goto tr88;
	} else if ( (*p) > 64 ) {
		if ( (*p) < 71 ) {
			if ( 65 <= (*p) && (*p) <= 70 )
				goto tr165;
		} else if ( (*p) > 90 ) {
			if ( (*p) > 102 ) {
				if ( 103 <= (*p) && (*p) <= 122 )
					goto st95;
			} else if ( (*p) >= 97 )
				goto tr165;
		} else
			goto st95;
	} else
		goto st95;
	goto st51;
tr165:
#line 36 "lex/ragel_numeric.rl"
	{ (ragel_num.vint <<= 4) |= xchar2digit((*p)); }
	goto st99;
st99:
	if ( ++p == pe )
		goto _test_eof99;
case 99:
#line 3340 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr166;
		case 34: goto tr166;
		case 35: goto tr168;
		case 39: goto tr169;
		case 58: goto tr170;
		case 91: goto tr166;
		case 93: goto tr166;
		case 95: goto tr171;
	}
	if ( (*p) < 63 ) {
		if ( (*p) < 40 ) {
			if ( 9 <= (*p) && (*p) <= 13 )
				goto tr166;
		} else if ( (*p) > 41 ) {
			if ( 48 <= (*p) && (*p) <= 57 )
				goto tr165;
		} else
			goto tr166;
	} else if ( (*p) > 64 ) {
		if ( (*p) < 71 ) {
			if ( 65 <= (*p) && (*p) <= 70 )
				goto tr165;
		} else if ( (*p) > 90 ) {
			if ( (*p) > 102 ) {
				if ( 103 <= (*p) && (*p) <= 122 )
					goto tr171;
			} else if ( (*p) >= 97 )
				goto tr165;
		} else
			goto tr171;
	} else
		goto tr171;
	goto tr167;
tr81:
#line 143 "lex/lemon_data_string_parser.rl"
	{ ragel_num = {}; }
#line 29 "lex/ragel_numeric.rl"
	{ (ragel_num.vint *= 10) += ((*p)-'0'); }
#line 42 "lex/ragel_numeric.rl"
	{ (ragel_num.ratio.num *= 10) += ((*p)-'0'); }
	goto st100;
tr172:
#line 29 "lex/ragel_numeric.rl"
	{ (ragel_num.vint *= 10) += ((*p)-'0'); }
#line 42 "lex/ragel_numeric.rl"
	{ (ragel_num.ratio.num *= 10) += ((*p)-'0'); }
	goto st100;
st100:
	if ( ++p == pe )
		goto _test_eof100;
case 100:
#line 3393 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr134;
		case 34: goto tr134;
		case 35: goto tr136;
		case 39: goto tr137;
		case 46: goto tr138;
		case 47: goto st90;
		case 58: goto tr155;
		case 91: goto tr134;
		case 93: goto tr134;
		case 95: goto tr154;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr134;
		} else if ( (*p) >= 9 )
			goto tr134;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr154;
		} else if ( (*p) >= 63 )
			goto tr154;
	} else
		goto tr172;
	goto tr135;
st101:
	if ( ++p == pe )
		goto _test_eof101;
case 101:
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 40: goto st102;
		case 41: goto tr88;
		case 58: goto st61;
		case 91: goto tr174;
		case 93: goto tr88;
		case 95: goto st95;
	}
	if ( (*p) < 63 ) {
		if ( (*p) > 13 ) {
			if ( 48 <= (*p) && (*p) <= 57 )
				goto st95;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 64 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto st101;
		} else if ( (*p) >= 65 )
			goto st101;
	} else
		goto st95;
	goto st51;
st102:
	if ( ++p == pe )
		goto _test_eof102;
case 102:
	if ( (*p) == 32 )
		goto st102;
	if ( 9 <= (*p) && (*p) <= 13 )
		goto st102;
	goto tr175;
st103:
	if ( ++p == pe )
		goto _test_eof103;
case 103:
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr176;
		case 35: goto st52;
		case 39: goto st53;
		case 40: goto st102;
		case 41: goto tr88;
		case 58: goto st61;
		case 91: goto tr174;
		case 93: goto tr88;
		case 95: goto st95;
	}
	if ( (*p) < 63 ) {
		if ( (*p) > 13 ) {
			if ( 48 <= (*p) && (*p) <= 57 )
				goto st95;
		} else if ( (*p) >= 9 )
			goto tr88;
	} else if ( (*p) > 64 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto st101;
		} else if ( (*p) >= 65 )
			goto st101;
	} else
		goto st95;
	goto st51;
st104:
	if ( ++p == pe )
		goto _test_eof104;
case 104:
	if ( (*p) == 32 )
		goto st104;
	if ( 9 <= (*p) && (*p) <= 13 )
		goto st104;
	goto tr177;
st105:
	if ( ++p == pe )
		goto _test_eof105;
case 105:
	switch( (*p) ) {
		case 32: goto tr88;
		case 34: goto tr88;
		case 35: goto st52;
		case 39: goto st53;
		case 40: goto st106;
		case 41: goto tr88;
		case 58: goto st61;
		case 91: goto tr88;
		case 93: goto tr88;
		case 95: goto st105;
	}
	if ( (*p) < 48 ) {
		if ( 9 <= (*p) && (*p) <= 13 )
			goto tr88;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto st105;
		} else if ( (*p) >= 63 )
			goto st95;
	} else
		goto st105;
	goto st51;
st106:
	if ( ++p == pe )
		goto _test_eof106;
case 106:
	if ( (*p) == 32 )
		goto st106;
	if ( 9 <= (*p) && (*p) <= 13 )
		goto st106;
	goto tr179;
tr44:
#line 109 "lex/lemon_data_string_parser.rl"
	{{p = ((te))-1;}{
        RgbaHexFullMatch p;
        if (p.parse(ts, te - ts)) {
            pushToken(TK_COLOR);
            pushFloat(p.red());
            pushFloat(p.green());
            pushFloat(p.blue());
            pushFloat(p.alpha());
        }
        ragel_string.clear();
    }}
	goto st107;
tr182:
#line 51 "lex/lemon_data_string_parser.rl"
	{te = p+1;{ ragel_string.clear(); {stack[top++] = 107;goto st37;} }}
	goto st107;
tr185:
#line 44 "lex/lemon_data_string_parser.rl"
	{te = p+1;{ pushToken(TK_LIST_CLOSE); }}
	goto st107;
tr193:
#line 1 "NONE"
	{	switch( act ) {
	case 31:
	{{p = ((te))-1;} pushFloat(1); }
	break;
	case 32:
	{{p = ((te))-1;} pushFloat(0); }
	break;
	case 33:
	{{p = ((te))-1;} pushToken(TK_NULL); }
	break;
	case 45:
	{{p = ((te))-1;} pushSymbolToken(TK_SYMBOL, ts, te); }
	break;
	}
	}
	goto st107;
tr195:
#line 121 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{ pushSymbolToken(TK_SYMBOL, ts, te); }}
	goto st107;
tr203:
#line 239 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{ pushToken(TK_SPACE); {cs = stack[--top];goto _again;} }}
	goto st107;
tr206:
#line 175 "lex/lemon_data_string_parser.rl"
	{te = p+1;{
        pushToken(TK_MATRIX);
        pushFloat(ragel_mtx_rows);
        pushFloat(ragel_mtx_cols);
        {stack[top++] = 107;goto st39;}
    }}
	goto st107;
tr212:
#line 65 "lex/ragel_color.rl"
	{color.b = color.x;}
#line 67 "lex/ragel_color.rl"
	{ ragel_cat = CAT_COLOR; ragel_type = TYPE_HEX; }
#line 109 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        RgbaHexFullMatch p;
        if (p.parse(ts, te - ts)) {
            pushToken(TK_COLOR);
            pushFloat(p.red());
            pushFloat(p.green());
            pushFloat(p.blue());
            pushFloat(p.alpha());
        }
        ragel_string.clear();
    }}
	goto st107;
tr214:
#line 66 "lex/ragel_color.rl"
	{color.a = color.x;}
#line 67 "lex/ragel_color.rl"
	{ ragel_cat = CAT_COLOR; ragel_type = TYPE_HEX; }
#line 109 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        RgbaHexFullMatch p;
        if (p.parse(ts, te - ts)) {
            pushToken(TK_COLOR);
            pushFloat(p.red());
            pushFloat(p.green());
            pushFloat(p.blue());
            pushFloat(p.alpha());
        }
        ragel_string.clear();
    }}
	goto st107;
tr216:
#line 47 "lex/ragel_color.rl"
	{color.b = color.x;}
#line 50 "lex/ragel_color.rl"
	{ ragel_cat = CAT_COLOR; ragel_type = TYPE_HEX; }
#line 109 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        RgbaHexFullMatch p;
        if (p.parse(ts, te - ts)) {
            pushToken(TK_COLOR);
            pushFloat(p.red());
            pushFloat(p.green());
            pushFloat(p.blue());
            pushFloat(p.alpha());
        }
        ragel_string.clear();
    }}
	goto st107;
tr218:
#line 48 "lex/ragel_color.rl"
	{color.a = color.x;}
#line 50 "lex/ragel_color.rl"
	{ ragel_cat = CAT_COLOR; ragel_type = TYPE_HEX; }
#line 109 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        RgbaHexFullMatch p;
        if (p.parse(ts, te - ts)) {
            pushToken(TK_COLOR);
            pushFloat(p.red());
            pushFloat(p.green());
            pushFloat(p.blue());
            pushFloat(p.alpha());
        }
        ragel_string.clear();
    }}
	goto st107;
tr233:
#line 43 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{ pushToken(TK_LIST_OPEN); }}
	goto st107;
tr236:
#line 30 "lex/ragel_numeric.rl"
	{
        ragel_num.vint *= ragel_num.sign;
        ragel_type = TYPE_INT;
        ragel_cat  = CAT_NUMBER;
    }
#line 45 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        onFloat(ragel_cat, ragel_type, ragel_num);
        ragel_num = {};
        ragel_cat = CAT_UNKNOWN;
        ragel_type = TYPE_UNKNOWN;
    }}
	goto st107;
tr242:
#line 58 "lex/ragel_numeric.rl"
	{
        const auto frac = double(ragel_num.ratio.num) / ragel_num.ratio.den;
        ragel_num.vdouble = ragel_num.vint + ragel_num.sign * frac;
        ragel_type = TYPE_FLOAT;
        ragel_cat  = CAT_NUMBER;
    }
#line 45 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        onFloat(ragel_cat, ragel_type, ragel_num);
        ragel_num = {};
        ragel_cat = CAT_UNKNOWN;
        ragel_type = TYPE_UNKNOWN;
    }}
	goto st107;
tr247:
#line 44 "lex/ragel_numeric.rl"
	{
        ragel_num.ratio.num *= ragel_num.sign;
        ragel_type = TYPE_RATIO;
        ragel_cat  = CAT_NUMBER;
    }
#line 45 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        onFloat(ragel_cat, ragel_type, ragel_num);
        ragel_num = {};
        ragel_cat = CAT_UNKNOWN;
        ragel_type = TYPE_UNKNOWN;
    }}
	goto st107;
tr253:
#line 24 "lex/ragel_numeric.rl"
	{
        ragel_type = TYPE_BIN;
        ragel_cat  = CAT_NUMBER;
    }
#line 45 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        onFloat(ragel_cat, ragel_type, ragel_num);
        ragel_num = {};
        ragel_cat = CAT_UNKNOWN;
        ragel_type = TYPE_UNKNOWN;
    }}
	goto st107;
tr257:
#line 37 "lex/ragel_numeric.rl"
	{
        ragel_type = TYPE_HEX;
        ragel_cat  = CAT_NUMBER;
    }
#line 45 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        onFloat(ragel_cat, ragel_type, ragel_num);
        ragel_num = {};
        ragel_cat = CAT_UNKNOWN;
        ragel_type = TYPE_UNKNOWN;
    }}
	goto st107;
tr261:
#line 66 "lex/lemon_data_string_parser.rl"
	{te = p+1;{
        pushSymbolToken(TK_DATA_NAME, ts, te-1);
        pushToken(TK_DICT_OPEN);
        {stack[top++] = 107;goto st50;}
    }}
	goto st107;
tr262:
#line 59 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        // skip trailing whitespaces
        auto te0 = te;
        while(*(--te0) == ' ') ;
        pushSymbolToken(TK_DATA_NAME, ts, te0);
        pushToken(TK_LIST_OPEN);
    }}
	goto st107;
tr263:
#line 107 "lex/lemon_data_string_parser.rl"
	{te = p+1;{ pushToken(TK_STRING); ragel_string.clear(); {stack[top++] = 107;goto st37;} }}
	goto st107;
tr264:
#line 226 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{ pushToken(TK_DICT_OPEN); {stack[top++] = 107;goto st50;} }}
	goto st107;
tr266:
#line 52 "lex/lemon_data_string_parser.rl"
	{te = p;p--;{
        // skip trailing whitespaces
        auto te0 = te;
        while(*(--te0) == ' ') ;
        pushSymbolToken(TK_FUNC_LIST_CALL, ts, te0);
        pushToken(TK_LIST_OPEN);
    }}
	goto st107;
st107:
#line 1 "NONE"
	{ts = 0;}
	if ( ++p == pe )
		goto _test_eof107;
case 107:
#line 1 "NONE"
	{ts = p;}
#line 3789 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto st116;
		case 34: goto tr182;
		case 35: goto st117;
		case 40: goto st139;
		case 41: goto tr185;
		case 43: goto tr186;
		case 45: goto tr186;
		case 48: goto tr187;
		case 83: goto st155;
		case 91: goto st156;
	}
	if ( (*p) < 49 ) {
		if ( 9 <= (*p) && (*p) <= 13 )
			goto st116;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto st157;
		} else if ( (*p) >= 65 )
			goto st153;
	} else
		goto tr188;
	goto tr180;
tr180:
#line 1 "NONE"
	{te = p+1;}
#line 121 "lex/lemon_data_string_parser.rl"
	{act = 45;}
	goto st108;
tr202:
#line 1 "NONE"
	{te = p+1;}
#line 138 "lex/lemon_data_string_parser.rl"
	{ (ragel_mtx_cols *= 10) += ((*p) - '0'); }
#line 121 "lex/lemon_data_string_parser.rl"
	{act = 45;}
	goto st108;
tr226:
#line 1 "NONE"
	{te = p+1;}
#line 40 "lex/lemon_data_string_parser.rl"
	{act = 32;}
	goto st108;
tr229:
#line 1 "NONE"
	{te = p+1;}
#line 41 "lex/lemon_data_string_parser.rl"
	{act = 33;}
	goto st108;
tr232:
#line 1 "NONE"
	{te = p+1;}
#line 39 "lex/lemon_data_string_parser.rl"
	{act = 31;}
	goto st108;
tr237:
#line 1 "NONE"
	{te = p+1;}
#line 30 "lex/ragel_numeric.rl"
	{
        ragel_num.vint *= ragel_num.sign;
        ragel_type = TYPE_INT;
        ragel_cat  = CAT_NUMBER;
    }
#line 121 "lex/lemon_data_string_parser.rl"
	{act = 45;}
	goto st108;
tr243:
#line 1 "NONE"
	{te = p+1;}
#line 58 "lex/ragel_numeric.rl"
	{
        const auto frac = double(ragel_num.ratio.num) / ragel_num.ratio.den;
        ragel_num.vdouble = ragel_num.vint + ragel_num.sign * frac;
        ragel_type = TYPE_FLOAT;
        ragel_cat  = CAT_NUMBER;
    }
#line 121 "lex/lemon_data_string_parser.rl"
	{act = 45;}
	goto st108;
tr248:
#line 1 "NONE"
	{te = p+1;}
#line 44 "lex/ragel_numeric.rl"
	{
        ragel_num.ratio.num *= ragel_num.sign;
        ragel_type = TYPE_RATIO;
        ragel_cat  = CAT_NUMBER;
    }
#line 121 "lex/lemon_data_string_parser.rl"
	{act = 45;}
	goto st108;
tr254:
#line 1 "NONE"
	{te = p+1;}
#line 24 "lex/ragel_numeric.rl"
	{
        ragel_type = TYPE_BIN;
        ragel_cat  = CAT_NUMBER;
    }
#line 121 "lex/lemon_data_string_parser.rl"
	{act = 45;}
	goto st108;
tr258:
#line 1 "NONE"
	{te = p+1;}
#line 37 "lex/ragel_numeric.rl"
	{
        ragel_type = TYPE_HEX;
        ragel_cat  = CAT_NUMBER;
    }
#line 121 "lex/lemon_data_string_parser.rl"
	{act = 45;}
	goto st108;
st108:
	if ( ++p == pe )
		goto _test_eof108;
case 108:
#line 3909 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr193;
		case 34: goto tr193;
		case 35: goto st109;
		case 91: goto tr193;
	}
	if ( (*p) > 13 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr193;
	} else if ( (*p) >= 9 )
		goto tr193;
	goto tr180;
tr238:
#line 30 "lex/ragel_numeric.rl"
	{
        ragel_num.vint *= ragel_num.sign;
        ragel_type = TYPE_INT;
        ragel_cat  = CAT_NUMBER;
    }
	goto st109;
tr244:
#line 58 "lex/ragel_numeric.rl"
	{
        const auto frac = double(ragel_num.ratio.num) / ragel_num.ratio.den;
        ragel_num.vdouble = ragel_num.vint + ragel_num.sign * frac;
        ragel_type = TYPE_FLOAT;
        ragel_cat  = CAT_NUMBER;
    }
	goto st109;
tr249:
#line 44 "lex/ragel_numeric.rl"
	{
        ragel_num.ratio.num *= ragel_num.sign;
        ragel_type = TYPE_RATIO;
        ragel_cat  = CAT_NUMBER;
    }
	goto st109;
tr255:
#line 24 "lex/ragel_numeric.rl"
	{
        ragel_type = TYPE_BIN;
        ragel_cat  = CAT_NUMBER;
    }
	goto st109;
tr259:
#line 37 "lex/ragel_numeric.rl"
	{
        ragel_type = TYPE_HEX;
        ragel_cat  = CAT_NUMBER;
    }
	goto st109;
st109:
	if ( ++p == pe )
		goto _test_eof109;
case 109:
#line 3965 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 48: goto tr196;
		case 91: goto tr195;
	}
	if ( (*p) < 49 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr195;
		} else if ( (*p) >= 9 )
			goto tr195;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 70 ) {
			if ( 97 <= (*p) && (*p) <= 102 )
				goto tr196;
		} else if ( (*p) >= 65 )
			goto tr196;
	} else
		goto tr197;
	goto tr180;
tr196:
#line 38 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st110;
st110:
	if ( ++p == pe )
		goto _test_eof110;
case 110:
#line 4000 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr195;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr195;
		} else if ( (*p) >= 9 )
			goto tr195;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 70 ) {
			if ( 97 <= (*p) && (*p) <= 102 )
				goto tr198;
		} else if ( (*p) >= 65 )
			goto tr198;
	} else
		goto tr198;
	goto tr180;
tr198:
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 63 "lex/ragel_color.rl"
	{color.r = color.x;}
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st111;
st111:
	if ( ++p == pe )
		goto _test_eof111;
case 111:
#line 4034 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr195;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr195;
		} else if ( (*p) >= 9 )
			goto tr195;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 70 ) {
			if ( 97 <= (*p) && (*p) <= 102 )
				goto tr195;
		} else if ( (*p) >= 65 )
			goto tr195;
	} else
		goto tr195;
	goto tr180;
tr197:
#line 139 "lex/lemon_data_string_parser.rl"
	{ ragel_mtx_rows = (*p) - '0'; }
#line 38 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st112;
st112:
	if ( ++p == pe )
		goto _test_eof112;
case 112:
#line 4070 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 58: goto st114;
		case 91: goto tr195;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr195;
		} else if ( (*p) >= 9 )
			goto tr195;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 70 ) {
			if ( 97 <= (*p) && (*p) <= 102 )
				goto tr198;
		} else if ( (*p) >= 65 )
			goto tr198;
	} else
		goto tr199;
	goto tr180;
tr199:
#line 139 "lex/lemon_data_string_parser.rl"
	{ (ragel_mtx_rows *= 10) += ((*p) - '0'); }
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 63 "lex/ragel_color.rl"
	{color.r = color.x;}
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st113;
st113:
	if ( ++p == pe )
		goto _test_eof113;
case 113:
#line 4107 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 58: goto st114;
		case 91: goto tr195;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr195;
		} else if ( (*p) >= 9 )
			goto tr195;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 70 ) {
			if ( 97 <= (*p) && (*p) <= 102 )
				goto tr195;
		} else if ( (*p) >= 65 )
			goto tr195;
	} else
		goto tr195;
	goto tr180;
st114:
	if ( ++p == pe )
		goto _test_eof114;
case 114:
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr195;
	}
	if ( (*p) < 40 ) {
		if ( 9 <= (*p) && (*p) <= 13 )
			goto tr195;
	} else if ( (*p) > 41 ) {
		if ( 49 <= (*p) && (*p) <= 57 )
			goto tr201;
	} else
		goto tr195;
	goto tr180;
tr201:
#line 138 "lex/lemon_data_string_parser.rl"
	{ ragel_mtx_cols = (*p) - '0'; }
	goto st115;
st115:
	if ( ++p == pe )
		goto _test_eof115;
case 115:
#line 4157 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr195;
	}
	if ( (*p) < 40 ) {
		if ( 9 <= (*p) && (*p) <= 13 )
			goto tr195;
	} else if ( (*p) > 41 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr202;
	} else
		goto tr195;
	goto tr180;
st116:
	if ( ++p == pe )
		goto _test_eof116;
case 116:
	switch( (*p) ) {
		case 32: goto st116;
		case 41: goto tr185;
	}
	if ( 9 <= (*p) && (*p) <= 13 )
		goto st116;
	goto tr203;
st117:
	if ( ++p == pe )
		goto _test_eof117;
case 117:
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 48: goto tr204;
		case 91: goto tr206;
		case 102: goto tr207;
		case 110: goto st133;
		case 116: goto st136;
	}
	if ( (*p) < 49 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr195;
		} else if ( (*p) >= 9 )
			goto tr195;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 70 ) {
			if ( 97 <= (*p) && (*p) <= 101 )
				goto tr204;
		} else if ( (*p) >= 65 )
			goto tr204;
	} else
		goto tr205;
	goto tr180;
tr204:
#line 38 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st118;
st118:
	if ( ++p == pe )
		goto _test_eof118;
case 118:
#line 4225 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr195;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr195;
		} else if ( (*p) >= 9 )
			goto tr195;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 70 ) {
			if ( 97 <= (*p) && (*p) <= 102 )
				goto tr210;
		} else if ( (*p) >= 65 )
			goto tr210;
	} else
		goto tr210;
	goto tr180;
tr210:
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 63 "lex/ragel_color.rl"
	{color.r = color.x;}
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st119;
st119:
	if ( ++p == pe )
		goto _test_eof119;
case 119:
#line 4259 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr195;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr195;
		} else if ( (*p) >= 9 )
			goto tr195;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 70 ) {
			if ( 97 <= (*p) && (*p) <= 102 )
				goto tr211;
		} else if ( (*p) >= 65 )
			goto tr211;
	} else
		goto tr211;
	goto tr180;
tr211:
#line 45 "lex/ragel_color.rl"
	{color.r = color.x;}
#line 38 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 64 "lex/ragel_color.rl"
	{color.g = color.x;}
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st120;
st120:
	if ( ++p == pe )
		goto _test_eof120;
case 120:
#line 4297 "lex/lemon_data_string_parser.cpp"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr213;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr213;
	} else
		goto tr213;
	goto tr212;
tr213:
#line 1 "NONE"
	{te = p+1;}
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 65 "lex/ragel_color.rl"
	{color.b = color.x;}
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st121;
st121:
	if ( ++p == pe )
		goto _test_eof121;
case 121:
#line 4321 "lex/lemon_data_string_parser.cpp"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr215;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr215;
	} else
		goto tr215;
	goto tr214;
tr215:
#line 46 "lex/ragel_color.rl"
	{color.g = color.x;}
#line 38 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
	goto st34;
st34:
	if ( ++p == pe )
		goto _test_eof34;
case 34:
#line 4343 "lex/lemon_data_string_parser.cpp"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr45;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr45;
	} else
		goto tr45;
	goto tr44;
tr45:
#line 1 "NONE"
	{te = p+1;}
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
	goto st122;
st122:
	if ( ++p == pe )
		goto _test_eof122;
case 122:
#line 4363 "lex/lemon_data_string_parser.cpp"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr217;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr217;
	} else
		goto tr217;
	goto tr216;
tr217:
#line 47 "lex/ragel_color.rl"
	{color.b = color.x;}
#line 38 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
	goto st35;
st35:
	if ( ++p == pe )
		goto _test_eof35;
case 35:
#line 4385 "lex/lemon_data_string_parser.cpp"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr46;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr46;
	} else
		goto tr46;
	goto tr44;
tr46:
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
	goto st123;
st123:
	if ( ++p == pe )
		goto _test_eof123;
case 123:
#line 4403 "lex/lemon_data_string_parser.cpp"
	goto tr218;
tr205:
#line 139 "lex/lemon_data_string_parser.rl"
	{ ragel_mtx_rows = (*p) - '0'; }
#line 38 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st124;
st124:
	if ( ++p == pe )
		goto _test_eof124;
case 124:
#line 4419 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 58: goto st126;
		case 91: goto tr195;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr195;
		} else if ( (*p) >= 9 )
			goto tr195;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 70 ) {
			if ( 97 <= (*p) && (*p) <= 102 )
				goto tr210;
		} else if ( (*p) >= 65 )
			goto tr210;
	} else
		goto tr219;
	goto tr180;
tr219:
#line 139 "lex/lemon_data_string_parser.rl"
	{ (ragel_mtx_rows *= 10) += ((*p) - '0'); }
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 63 "lex/ragel_color.rl"
	{color.r = color.x;}
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st125;
st125:
	if ( ++p == pe )
		goto _test_eof125;
case 125:
#line 4456 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 58: goto st126;
		case 91: goto tr195;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr195;
		} else if ( (*p) >= 9 )
			goto tr195;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 70 ) {
			if ( 97 <= (*p) && (*p) <= 102 )
				goto tr211;
		} else if ( (*p) >= 65 )
			goto tr211;
	} else
		goto tr211;
	goto tr180;
st126:
	if ( ++p == pe )
		goto _test_eof126;
case 126:
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr195;
	}
	if ( (*p) < 40 ) {
		if ( 9 <= (*p) && (*p) <= 13 )
			goto tr195;
	} else if ( (*p) > 41 ) {
		if ( 49 <= (*p) && (*p) <= 57 )
			goto tr221;
	} else
		goto tr195;
	goto tr180;
tr221:
#line 138 "lex/lemon_data_string_parser.rl"
	{ ragel_mtx_cols = (*p) - '0'; }
	goto st127;
st127:
	if ( ++p == pe )
		goto _test_eof127;
case 127:
#line 4506 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr206;
	}
	if ( (*p) < 40 ) {
		if ( 9 <= (*p) && (*p) <= 13 )
			goto tr195;
	} else if ( (*p) > 41 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr222;
	} else
		goto tr195;
	goto tr180;
tr222:
#line 138 "lex/lemon_data_string_parser.rl"
	{ (ragel_mtx_cols *= 10) += ((*p) - '0'); }
	goto st128;
st128:
	if ( ++p == pe )
		goto _test_eof128;
case 128:
#line 4530 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr206;
	}
	if ( (*p) > 13 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr195;
	} else if ( (*p) >= 9 )
		goto tr195;
	goto tr180;
tr207:
#line 38 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st129;
st129:
	if ( ++p == pe )
		goto _test_eof129;
case 129:
#line 4555 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr195;
		case 97: goto tr223;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr195;
		} else if ( (*p) >= 9 )
			goto tr195;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 70 ) {
			if ( 98 <= (*p) && (*p) <= 102 )
				goto tr210;
		} else if ( (*p) >= 65 )
			goto tr210;
	} else
		goto tr210;
	goto tr180;
tr223:
#line 39 "lex/ragel_color.rl"
	{ (color.x *= 16) += xchar2digit((*p)); }
#line 63 "lex/ragel_color.rl"
	{color.r = color.x;}
#line 58 "lex/ragel_color.rl"
	{ color.x = xchar2digit((*p)); }
	goto st130;
st130:
	if ( ++p == pe )
		goto _test_eof130;
case 130:
#line 4590 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr195;
		case 108: goto st131;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr195;
		} else if ( (*p) >= 9 )
			goto tr195;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 70 ) {
			if ( 97 <= (*p) && (*p) <= 102 )
				goto tr211;
		} else if ( (*p) >= 65 )
			goto tr211;
	} else
		goto tr211;
	goto tr180;
st131:
	if ( ++p == pe )
		goto _test_eof131;
case 131:
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr195;
		case 115: goto st132;
	}
	if ( (*p) > 13 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr195;
	} else if ( (*p) >= 9 )
		goto tr195;
	goto tr180;
st132:
	if ( ++p == pe )
		goto _test_eof132;
case 132:
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr195;
		case 101: goto tr226;
	}
	if ( (*p) > 13 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr195;
	} else if ( (*p) >= 9 )
		goto tr195;
	goto tr180;
st133:
	if ( ++p == pe )
		goto _test_eof133;
case 133:
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr195;
		case 117: goto st134;
	}
	if ( (*p) > 13 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr195;
	} else if ( (*p) >= 9 )
		goto tr195;
	goto tr180;
st134:
	if ( ++p == pe )
		goto _test_eof134;
case 134:
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr195;
		case 108: goto st135;
	}
	if ( (*p) > 13 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr195;
	} else if ( (*p) >= 9 )
		goto tr195;
	goto tr180;
st135:
	if ( ++p == pe )
		goto _test_eof135;
case 135:
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr195;
		case 108: goto tr229;
	}
	if ( (*p) > 13 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr195;
	} else if ( (*p) >= 9 )
		goto tr195;
	goto tr180;
st136:
	if ( ++p == pe )
		goto _test_eof136;
case 136:
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr195;
		case 114: goto st137;
	}
	if ( (*p) > 13 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr195;
	} else if ( (*p) >= 9 )
		goto tr195;
	goto tr180;
st137:
	if ( ++p == pe )
		goto _test_eof137;
case 137:
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr195;
		case 117: goto st138;
	}
	if ( (*p) > 13 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr195;
	} else if ( (*p) >= 9 )
		goto tr195;
	goto tr180;
st138:
	if ( ++p == pe )
		goto _test_eof138;
case 138:
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr195;
		case 101: goto tr232;
	}
	if ( (*p) > 13 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr195;
	} else if ( (*p) >= 9 )
		goto tr195;
	goto tr180;
st139:
	if ( ++p == pe )
		goto _test_eof139;
case 139:
	if ( (*p) == 32 )
		goto st139;
	if ( 9 <= (*p) && (*p) <= 13 )
		goto st139;
	goto tr233;
tr186:
#line 143 "lex/lemon_data_string_parser.rl"
	{ ragel_num = {}; }
#line 21 "lex/ragel_numeric.rl"
	{ ragel_num.sign = ((*p)=='-') ? -1 : 1; }
	goto st140;
st140:
	if ( ++p == pe )
		goto _test_eof140;
case 140:
#line 4768 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 48: goto tr234;
		case 91: goto tr195;
	}
	if ( (*p) < 40 ) {
		if ( 9 <= (*p) && (*p) <= 13 )
			goto tr195;
	} else if ( (*p) > 41 ) {
		if ( 49 <= (*p) && (*p) <= 57 )
			goto tr235;
	} else
		goto tr195;
	goto tr180;
tr234:
#line 29 "lex/ragel_numeric.rl"
	{ (ragel_num.vint *= 10) += ((*p)-'0'); }
#line 42 "lex/ragel_numeric.rl"
	{ (ragel_num.ratio.num *= 10) += ((*p)-'0'); }
	goto st141;
st141:
	if ( ++p == pe )
		goto _test_eof141;
case 141:
#line 4795 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr236;
		case 34: goto tr236;
		case 35: goto tr238;
		case 46: goto tr239;
		case 47: goto st144;
		case 91: goto tr236;
	}
	if ( (*p) > 13 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr236;
	} else if ( (*p) >= 9 )
		goto tr236;
	goto tr237;
tr239:
#line 30 "lex/ragel_numeric.rl"
	{
        ragel_num.vint *= ragel_num.sign;
        ragel_type = TYPE_INT;
        ragel_cat  = CAT_NUMBER;
    }
#line 50 "lex/ragel_numeric.rl"
	{
        ragel_num.ratio.num = 0;
        ragel_num.ratio.den = 1;
    }
	goto st142;
st142:
	if ( ++p == pe )
		goto _test_eof142;
case 142:
#line 4827 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr195;
	}
	if ( (*p) < 40 ) {
		if ( 9 <= (*p) && (*p) <= 13 )
			goto tr195;
	} else if ( (*p) > 41 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr241;
	} else
		goto tr195;
	goto tr180;
tr241:
#line 54 "lex/ragel_numeric.rl"
	{
        (ragel_num.ratio.num *= 10) += ((*p) - '0');
        ragel_num.ratio.den *= 10;
    }
	goto st143;
st143:
	if ( ++p == pe )
		goto _test_eof143;
case 143:
#line 4854 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr242;
		case 34: goto tr242;
		case 35: goto tr244;
		case 91: goto tr242;
	}
	if ( (*p) < 40 ) {
		if ( 9 <= (*p) && (*p) <= 13 )
			goto tr242;
	} else if ( (*p) > 41 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr241;
	} else
		goto tr242;
	goto tr243;
st144:
	if ( ++p == pe )
		goto _test_eof144;
case 144:
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 48: goto tr245;
		case 91: goto tr195;
	}
	if ( (*p) < 40 ) {
		if ( 9 <= (*p) && (*p) <= 13 )
			goto tr195;
	} else if ( (*p) > 41 ) {
		if ( 49 <= (*p) && (*p) <= 57 )
			goto tr246;
	} else
		goto tr195;
	goto tr180;
tr245:
#line 43 "lex/ragel_numeric.rl"
	{ (ragel_num.ratio.den *= 10) += ((*p)-'0'); }
	goto st145;
st145:
	if ( ++p == pe )
		goto _test_eof145;
case 145:
#line 4898 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr247;
		case 34: goto tr247;
		case 35: goto tr249;
		case 91: goto tr247;
	}
	if ( (*p) > 13 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr247;
	} else if ( (*p) >= 9 )
		goto tr247;
	goto tr248;
tr246:
#line 43 "lex/ragel_numeric.rl"
	{ (ragel_num.ratio.den *= 10) += ((*p)-'0'); }
	goto st146;
st146:
	if ( ++p == pe )
		goto _test_eof146;
case 146:
#line 4919 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr247;
		case 34: goto tr247;
		case 35: goto tr249;
		case 91: goto tr247;
	}
	if ( (*p) < 40 ) {
		if ( 9 <= (*p) && (*p) <= 13 )
			goto tr247;
	} else if ( (*p) > 41 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr246;
	} else
		goto tr247;
	goto tr248;
tr188:
#line 143 "lex/lemon_data_string_parser.rl"
	{ ragel_num = {}; }
#line 29 "lex/ragel_numeric.rl"
	{ (ragel_num.vint *= 10) += ((*p)-'0'); }
#line 42 "lex/ragel_numeric.rl"
	{ (ragel_num.ratio.num *= 10) += ((*p)-'0'); }
	goto st147;
tr235:
#line 29 "lex/ragel_numeric.rl"
	{ (ragel_num.vint *= 10) += ((*p)-'0'); }
#line 42 "lex/ragel_numeric.rl"
	{ (ragel_num.ratio.num *= 10) += ((*p)-'0'); }
	goto st147;
st147:
	if ( ++p == pe )
		goto _test_eof147;
case 147:
#line 4953 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr236;
		case 34: goto tr236;
		case 35: goto tr238;
		case 46: goto tr239;
		case 47: goto st144;
		case 91: goto tr236;
	}
	if ( (*p) < 40 ) {
		if ( 9 <= (*p) && (*p) <= 13 )
			goto tr236;
	} else if ( (*p) > 41 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr235;
	} else
		goto tr236;
	goto tr237;
tr187:
#line 143 "lex/lemon_data_string_parser.rl"
	{ ragel_num = {}; }
#line 29 "lex/ragel_numeric.rl"
	{ (ragel_num.vint *= 10) += ((*p)-'0'); }
#line 42 "lex/ragel_numeric.rl"
	{ (ragel_num.ratio.num *= 10) += ((*p)-'0'); }
	goto st148;
st148:
	if ( ++p == pe )
		goto _test_eof148;
case 148:
#line 4983 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr236;
		case 34: goto tr236;
		case 35: goto tr238;
		case 46: goto tr239;
		case 47: goto st144;
		case 91: goto tr236;
		case 98: goto st149;
		case 120: goto st151;
	}
	if ( (*p) > 13 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr236;
	} else if ( (*p) >= 9 )
		goto tr236;
	goto tr237;
st149:
	if ( ++p == pe )
		goto _test_eof149;
case 149:
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr195;
	}
	if ( (*p) < 40 ) {
		if ( 9 <= (*p) && (*p) <= 13 )
			goto tr195;
	} else if ( (*p) > 41 ) {
		if ( 48 <= (*p) && (*p) <= 49 )
			goto tr252;
	} else
		goto tr195;
	goto tr180;
tr252:
#line 23 "lex/ragel_numeric.rl"
	{ (ragel_num.vint <<= 1) |= ((*p)=='1'); }
	goto st150;
st150:
	if ( ++p == pe )
		goto _test_eof150;
case 150:
#line 5027 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr253;
		case 34: goto tr253;
		case 35: goto tr255;
		case 91: goto tr253;
	}
	if ( (*p) < 40 ) {
		if ( 9 <= (*p) && (*p) <= 13 )
			goto tr253;
	} else if ( (*p) > 41 ) {
		if ( 48 <= (*p) && (*p) <= 49 )
			goto tr252;
	} else
		goto tr253;
	goto tr254;
st151:
	if ( ++p == pe )
		goto _test_eof151;
case 151:
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 91: goto tr195;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr195;
		} else if ( (*p) >= 9 )
			goto tr195;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 70 ) {
			if ( 97 <= (*p) && (*p) <= 102 )
				goto tr256;
		} else if ( (*p) >= 65 )
			goto tr256;
	} else
		goto tr256;
	goto tr180;
tr256:
#line 36 "lex/ragel_numeric.rl"
	{ (ragel_num.vint <<= 4) |= xchar2digit((*p)); }
	goto st152;
st152:
	if ( ++p == pe )
		goto _test_eof152;
case 152:
#line 5076 "lex/lemon_data_string_parser.cpp"
	switch( (*p) ) {
		case 32: goto tr257;
		case 34: goto tr257;
		case 35: goto tr259;
		case 91: goto tr257;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 13 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr257;
		} else if ( (*p) >= 9 )
			goto tr257;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 70 ) {
			if ( 97 <= (*p) && (*p) <= 102 )
				goto tr256;
		} else if ( (*p) >= 65 )
			goto tr256;
	} else
		goto tr256;
	goto tr258;
st153:
	if ( ++p == pe )
		goto _test_eof153;
case 153:
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 40: goto st154;
		case 41: goto tr195;
		case 91: goto tr261;
	}
	if ( (*p) < 65 ) {
		if ( 9 <= (*p) && (*p) <= 13 )
			goto tr195;
	} else if ( (*p) > 90 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto st153;
	} else
		goto st153;
	goto tr180;
st154:
	if ( ++p == pe )
		goto _test_eof154;
case 154:
	if ( (*p) == 32 )
		goto st154;
	if ( 9 <= (*p) && (*p) <= 13 )
		goto st154;
	goto tr262;
st155:
	if ( ++p == pe )
		goto _test_eof155;
case 155:
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr263;
		case 35: goto st109;
		case 40: goto st154;
		case 41: goto tr195;
		case 91: goto tr261;
	}
	if ( (*p) < 65 ) {
		if ( 9 <= (*p) && (*p) <= 13 )
			goto tr195;
	} else if ( (*p) > 90 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto st153;
	} else
		goto st153;
	goto tr180;
st156:
	if ( ++p == pe )
		goto _test_eof156;
case 156:
	if ( (*p) == 32 )
		goto st156;
	if ( 9 <= (*p) && (*p) <= 13 )
		goto st156;
	goto tr264;
st157:
	if ( ++p == pe )
		goto _test_eof157;
case 157:
	switch( (*p) ) {
		case 32: goto tr195;
		case 34: goto tr195;
		case 35: goto st109;
		case 40: goto st158;
		case 41: goto tr195;
		case 91: goto tr195;
		case 95: goto st157;
	}
	if ( (*p) < 48 ) {
		if ( 9 <= (*p) && (*p) <= 13 )
			goto tr195;
	} else if ( (*p) > 57 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto st157;
	} else
		goto st157;
	goto tr180;
st158:
	if ( ++p == pe )
		goto _test_eof158;
case 158:
	if ( (*p) == 32 )
		goto st158;
	if ( 9 <= (*p) && (*p) <= 13 )
		goto st158;
	goto tr266;
	}
	_test_eof36: cs = 36; goto _test_eof; 
	_test_eof37: cs = 37; goto _test_eof; 
	_test_eof38: cs = 38; goto _test_eof; 
	_test_eof1: cs = 1; goto _test_eof; 
	_test_eof2: cs = 2; goto _test_eof; 
	_test_eof3: cs = 3; goto _test_eof; 
	_test_eof4: cs = 4; goto _test_eof; 
	_test_eof5: cs = 5; goto _test_eof; 
	_test_eof6: cs = 6; goto _test_eof; 
	_test_eof7: cs = 7; goto _test_eof; 
	_test_eof8: cs = 8; goto _test_eof; 
	_test_eof9: cs = 9; goto _test_eof; 
	_test_eof10: cs = 10; goto _test_eof; 
	_test_eof11: cs = 11; goto _test_eof; 
	_test_eof12: cs = 12; goto _test_eof; 
	_test_eof13: cs = 13; goto _test_eof; 
	_test_eof14: cs = 14; goto _test_eof; 
	_test_eof15: cs = 15; goto _test_eof; 
	_test_eof16: cs = 16; goto _test_eof; 
	_test_eof17: cs = 17; goto _test_eof; 
	_test_eof39: cs = 39; goto _test_eof; 
	_test_eof40: cs = 40; goto _test_eof; 
	_test_eof41: cs = 41; goto _test_eof; 
	_test_eof18: cs = 18; goto _test_eof; 
	_test_eof42: cs = 42; goto _test_eof; 
	_test_eof19: cs = 19; goto _test_eof; 
	_test_eof43: cs = 43; goto _test_eof; 
	_test_eof20: cs = 20; goto _test_eof; 
	_test_eof44: cs = 44; goto _test_eof; 
	_test_eof45: cs = 45; goto _test_eof; 
	_test_eof46: cs = 46; goto _test_eof; 
	_test_eof47: cs = 47; goto _test_eof; 
	_test_eof21: cs = 21; goto _test_eof; 
	_test_eof48: cs = 48; goto _test_eof; 
	_test_eof22: cs = 22; goto _test_eof; 
	_test_eof49: cs = 49; goto _test_eof; 
	_test_eof50: cs = 50; goto _test_eof; 
	_test_eof51: cs = 51; goto _test_eof; 
	_test_eof52: cs = 52; goto _test_eof; 
	_test_eof53: cs = 53; goto _test_eof; 
	_test_eof54: cs = 54; goto _test_eof; 
	_test_eof55: cs = 55; goto _test_eof; 
	_test_eof56: cs = 56; goto _test_eof; 
	_test_eof57: cs = 57; goto _test_eof; 
	_test_eof58: cs = 58; goto _test_eof; 
	_test_eof59: cs = 59; goto _test_eof; 
	_test_eof60: cs = 60; goto _test_eof; 
	_test_eof23: cs = 23; goto _test_eof; 
	_test_eof24: cs = 24; goto _test_eof; 
	_test_eof25: cs = 25; goto _test_eof; 
	_test_eof61: cs = 61; goto _test_eof; 
	_test_eof26: cs = 26; goto _test_eof; 
	_test_eof27: cs = 27; goto _test_eof; 
	_test_eof28: cs = 28; goto _test_eof; 
	_test_eof62: cs = 62; goto _test_eof; 
	_test_eof63: cs = 63; goto _test_eof; 
	_test_eof64: cs = 64; goto _test_eof; 
	_test_eof65: cs = 65; goto _test_eof; 
	_test_eof66: cs = 66; goto _test_eof; 
	_test_eof67: cs = 67; goto _test_eof; 
	_test_eof29: cs = 29; goto _test_eof; 
	_test_eof68: cs = 68; goto _test_eof; 
	_test_eof30: cs = 30; goto _test_eof; 
	_test_eof69: cs = 69; goto _test_eof; 
	_test_eof70: cs = 70; goto _test_eof; 
	_test_eof71: cs = 71; goto _test_eof; 
	_test_eof31: cs = 31; goto _test_eof; 
	_test_eof32: cs = 32; goto _test_eof; 
	_test_eof33: cs = 33; goto _test_eof; 
	_test_eof72: cs = 72; goto _test_eof; 
	_test_eof73: cs = 73; goto _test_eof; 
	_test_eof74: cs = 74; goto _test_eof; 
	_test_eof75: cs = 75; goto _test_eof; 
	_test_eof76: cs = 76; goto _test_eof; 
	_test_eof77: cs = 77; goto _test_eof; 
	_test_eof78: cs = 78; goto _test_eof; 
	_test_eof79: cs = 79; goto _test_eof; 
	_test_eof80: cs = 80; goto _test_eof; 
	_test_eof81: cs = 81; goto _test_eof; 
	_test_eof82: cs = 82; goto _test_eof; 
	_test_eof83: cs = 83; goto _test_eof; 
	_test_eof84: cs = 84; goto _test_eof; 
	_test_eof85: cs = 85; goto _test_eof; 
	_test_eof86: cs = 86; goto _test_eof; 
	_test_eof87: cs = 87; goto _test_eof; 
	_test_eof88: cs = 88; goto _test_eof; 
	_test_eof89: cs = 89; goto _test_eof; 
	_test_eof90: cs = 90; goto _test_eof; 
	_test_eof91: cs = 91; goto _test_eof; 
	_test_eof92: cs = 92; goto _test_eof; 
	_test_eof93: cs = 93; goto _test_eof; 
	_test_eof94: cs = 94; goto _test_eof; 
	_test_eof95: cs = 95; goto _test_eof; 
	_test_eof96: cs = 96; goto _test_eof; 
	_test_eof97: cs = 97; goto _test_eof; 
	_test_eof98: cs = 98; goto _test_eof; 
	_test_eof99: cs = 99; goto _test_eof; 
	_test_eof100: cs = 100; goto _test_eof; 
	_test_eof101: cs = 101; goto _test_eof; 
	_test_eof102: cs = 102; goto _test_eof; 
	_test_eof103: cs = 103; goto _test_eof; 
	_test_eof104: cs = 104; goto _test_eof; 
	_test_eof105: cs = 105; goto _test_eof; 
	_test_eof106: cs = 106; goto _test_eof; 
	_test_eof107: cs = 107; goto _test_eof; 
	_test_eof108: cs = 108; goto _test_eof; 
	_test_eof109: cs = 109; goto _test_eof; 
	_test_eof110: cs = 110; goto _test_eof; 
	_test_eof111: cs = 111; goto _test_eof; 
	_test_eof112: cs = 112; goto _test_eof; 
	_test_eof113: cs = 113; goto _test_eof; 
	_test_eof114: cs = 114; goto _test_eof; 
	_test_eof115: cs = 115; goto _test_eof; 
	_test_eof116: cs = 116; goto _test_eof; 
	_test_eof117: cs = 117; goto _test_eof; 
	_test_eof118: cs = 118; goto _test_eof; 
	_test_eof119: cs = 119; goto _test_eof; 
	_test_eof120: cs = 120; goto _test_eof; 
	_test_eof121: cs = 121; goto _test_eof; 
	_test_eof34: cs = 34; goto _test_eof; 
	_test_eof122: cs = 122; goto _test_eof; 
	_test_eof35: cs = 35; goto _test_eof; 
	_test_eof123: cs = 123; goto _test_eof; 
	_test_eof124: cs = 124; goto _test_eof; 
	_test_eof125: cs = 125; goto _test_eof; 
	_test_eof126: cs = 126; goto _test_eof; 
	_test_eof127: cs = 127; goto _test_eof; 
	_test_eof128: cs = 128; goto _test_eof; 
	_test_eof129: cs = 129; goto _test_eof; 
	_test_eof130: cs = 130; goto _test_eof; 
	_test_eof131: cs = 131; goto _test_eof; 
	_test_eof132: cs = 132; goto _test_eof; 
	_test_eof133: cs = 133; goto _test_eof; 
	_test_eof134: cs = 134; goto _test_eof; 
	_test_eof135: cs = 135; goto _test_eof; 
	_test_eof136: cs = 136; goto _test_eof; 
	_test_eof137: cs = 137; goto _test_eof; 
	_test_eof138: cs = 138; goto _test_eof; 
	_test_eof139: cs = 139; goto _test_eof; 
	_test_eof140: cs = 140; goto _test_eof; 
	_test_eof141: cs = 141; goto _test_eof; 
	_test_eof142: cs = 142; goto _test_eof; 
	_test_eof143: cs = 143; goto _test_eof; 
	_test_eof144: cs = 144; goto _test_eof; 
	_test_eof145: cs = 145; goto _test_eof; 
	_test_eof146: cs = 146; goto _test_eof; 
	_test_eof147: cs = 147; goto _test_eof; 
	_test_eof148: cs = 148; goto _test_eof; 
	_test_eof149: cs = 149; goto _test_eof; 
	_test_eof150: cs = 150; goto _test_eof; 
	_test_eof151: cs = 151; goto _test_eof; 
	_test_eof152: cs = 152; goto _test_eof; 
	_test_eof153: cs = 153; goto _test_eof; 
	_test_eof154: cs = 154; goto _test_eof; 
	_test_eof155: cs = 155; goto _test_eof; 
	_test_eof156: cs = 156; goto _test_eof; 
	_test_eof157: cs = 157; goto _test_eof; 
	_test_eof158: cs = 158; goto _test_eof; 

	_test_eof: {}
	if ( p == eof )
	{
	switch ( cs ) {
	case 38: goto tr52;
	case 1: goto tr0;
	case 2: goto tr0;
	case 3: goto tr0;
	case 4: goto tr0;
	case 5: goto tr0;
	case 6: goto tr0;
	case 7: goto tr0;
	case 8: goto tr0;
	case 9: goto tr0;
	case 10: goto tr0;
	case 11: goto tr0;
	case 12: goto tr0;
	case 13: goto tr0;
	case 14: goto tr0;
	case 15: goto tr0;
	case 16: goto tr0;
	case 40: goto tr61;
	case 41: goto tr62;
	case 42: goto tr63;
	case 19: goto tr24;
	case 43: goto tr66;
	case 20: goto tr24;
	case 44: goto tr67;
	case 45: goto tr67;
	case 46: goto tr63;
	case 47: goto tr63;
	case 21: goto tr24;
	case 48: goto tr70;
	case 22: goto tr24;
	case 49: goto tr71;
	case 51: goto tr88;
	case 52: goto tr88;
	case 53: goto tr88;
	case 54: goto tr88;
	case 55: goto tr88;
	case 56: goto tr32;
	case 57: goto tr88;
	case 58: goto tr88;
	case 59: goto tr88;
	case 60: goto tr98;
	case 23: goto tr30;
	case 24: goto tr32;
	case 25: goto tr32;
	case 61: goto tr101;
	case 26: goto tr30;
	case 27: goto tr30;
	case 28: goto tr30;
	case 62: goto tr102;
	case 63: goto tr88;
	case 64: goto tr88;
	case 65: goto tr88;
	case 66: goto tr110;
	case 67: goto tr112;
	case 29: goto tr37;
	case 68: goto tr114;
	case 30: goto tr37;
	case 69: goto tr116;
	case 70: goto tr88;
	case 71: goto tr88;
	case 31: goto tr40;
	case 32: goto tr40;
	case 33: goto tr40;
	case 72: goto tr88;
	case 73: goto tr88;
	case 74: goto tr88;
	case 75: goto tr88;
	case 76: goto tr88;
	case 77: goto tr88;
	case 78: goto tr88;
	case 79: goto tr88;
	case 80: goto tr88;
	case 81: goto tr88;
	case 82: goto tr88;
	case 83: goto tr88;
	case 84: goto tr88;
	case 85: goto tr131;
	case 86: goto tr88;
	case 87: goto tr134;
	case 88: goto tr88;
	case 89: goto tr142;
	case 90: goto tr88;
	case 91: goto tr149;
	case 92: goto tr149;
	case 93: goto tr134;
	case 94: goto tr134;
	case 95: goto tr88;
	case 96: goto tr88;
	case 97: goto tr159;
	case 98: goto tr88;
	case 99: goto tr166;
	case 100: goto tr134;
	case 101: goto tr88;
	case 102: goto tr175;
	case 103: goto tr88;
	case 104: goto tr177;
	case 105: goto tr88;
	case 106: goto tr179;
	case 108: goto tr193;
	case 109: goto tr195;
	case 110: goto tr195;
	case 111: goto tr195;
	case 112: goto tr195;
	case 113: goto tr195;
	case 114: goto tr195;
	case 115: goto tr195;
	case 116: goto tr203;
	case 117: goto tr195;
	case 118: goto tr195;
	case 119: goto tr195;
	case 120: goto tr212;
	case 121: goto tr214;
	case 34: goto tr44;
	case 122: goto tr216;
	case 35: goto tr44;
	case 123: goto tr218;
	case 124: goto tr195;
	case 125: goto tr195;
	case 126: goto tr195;
	case 127: goto tr195;
	case 128: goto tr195;
	case 129: goto tr195;
	case 130: goto tr195;
	case 131: goto tr195;
	case 132: goto tr195;
	case 133: goto tr195;
	case 134: goto tr195;
	case 135: goto tr195;
	case 136: goto tr195;
	case 137: goto tr195;
	case 138: goto tr195;
	case 139: goto tr233;
	case 140: goto tr195;
	case 141: goto tr236;
	case 142: goto tr195;
	case 143: goto tr242;
	case 144: goto tr195;
	case 145: goto tr247;
	case 146: goto tr247;
	case 147: goto tr236;
	case 148: goto tr236;
	case 149: goto tr195;
	case 150: goto tr253;
	case 151: goto tr195;
	case 152: goto tr257;
	case 153: goto tr195;
	case 154: goto tr262;
	case 155: goto tr195;
	case 156: goto tr264;
	case 157: goto tr195;
	case 158: goto tr266;
	}
	}

	_out: {}
	}

#line 346 "lex/lemon_data_string_parser.rl"

    } catch(std::exception& e) {
        // can be thrown on static buffer overflows etc.
        fmt::format_to(std::back_inserter(error_), "[data] parse exception: '{}'", e.what());
        return false;
    }

    if (cs < 36) {
        std::string tok_name;
        if (ts && te)
            tok_name.append(ts, te);

        fmt::format_to(std::back_inserter(error_), "[data] lexer failed on '{}', unknown token: '{}'", data, tok_name);
        return false;
    } else {
        if (parse_ok_)
            pushToken(0);

        return parse_ok_;
    }
}

void LemonDataStringParser::reset()
{
    parse_ok_ = true;
    if (res_)
        res_->clear();
    error_.clear();
}

void LemonDataStringParser::onStackOverflow()
{
    parse_ok_ = false;
    fmt::format_to(std::back_inserter(error_), "[data] parse: stack overflow");
}

void LemonDataStringParser::onParseFailure()
{
    parse_ok_ = false;
    fmt::format_to(std::back_inserter(error_), "[data] parse failed");
}

void LemonDataStringParser::onFloat(AtomCategory cat, AtomType type, const fsm::NumericData& num) {
    switch(type) {
    case TYPE_FLOAT:
        return pushFloat(num.getFloat());
    case TYPE_INT:
    case TYPE_BIN:
    case TYPE_HEX:
        return pushFloat(num.getInteger());
    case TYPE_RATIO:
        return pushFloat(num.getRatioAsFloat());
    default:
        break;
    }
}


}
}
