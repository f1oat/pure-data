include_directories(${CMAKE_SOURCE_DIR}/src)

set(LIST_SOURCES list_base.cpp)

macro(ceammc_list_extension name)
    list(APPEND LIST_SOURCES "list_${name}.cpp")
endmacro()

ceammc_list_extension(all_of)
ceammc_list_extension(any_of)
ceammc_list_extension(append)
ceammc_list_extension(apply_to)
ceammc_list_extension(at)
ceammc_list_extension(choice)
ceammc_list_extension(contains)
ceammc_list_extension(convolve)
ceammc_list_extension(count)
ceammc_list_extension(count_if)
ceammc_list_extension(crosscorr)
ceammc_list_extension(delta)
ceammc_list_extension(distribution)
ceammc_list_extension(do)
ceammc_list_extension(each)
ceammc_list_extension(enumerate)
ceammc_list_extension(equal)
ceammc_list_extension(first)
ceammc_list_extension(gen)
ceammc_list_extension(histogram)
ceammc_list_extension(insert)
ceammc_list_extension(integrator)
ceammc_list_extension(last)
ceammc_list_extension(length)
ceammc_list_extension(max)
ceammc_list_extension(mean)
ceammc_list_extension(min)
ceammc_list_extension(none_of)
ceammc_list_extension(normalize)
ceammc_list_extension(pass_if)
ceammc_list_extension(prepend)
ceammc_list_extension(product)
ceammc_list_extension(range)
ceammc_list_extension(reduce)
ceammc_list_extension(remove)
ceammc_list_extension(remove_if)
ceammc_list_extension(repack)
ceammc_list_extension(repeat)
ceammc_list_extension(resample)
ceammc_list_extension(resize)
ceammc_list_extension(reverse)
ceammc_list_extension(rldecode)
ceammc_list_extension(rlencode)
ceammc_list_extension(rotate)
ceammc_list_extension(route)
ceammc_list_extension(running_diff)
ceammc_list_extension(running_sum)
ceammc_list_extension(search)
ceammc_list_extension(separate)
ceammc_list_extension(seq)
ceammc_list_extension(set)
ceammc_list_extension(shift)
ceammc_list_extension(shuffle)
ceammc_list_extension(slice)
ceammc_list_extension(sort)
ceammc_list_extension(sort_with)
ceammc_list_extension(split)
ceammc_list_extension(stretch)
ceammc_list_extension(sum)
ceammc_list_extension(unique)
ceammc_list_extension(unpack)
ceammc_list_extension(unzip)
ceammc_list_extension(walk)
ceammc_list_extension(xat)
ceammc_list_extension(xcontains)
ceammc_list_extension(xsearch)
ceammc_list_extension(zip)
ceammc_list_extension(zip)

add_library(ceammc_list STATIC mod_list.h mod_list.cpp ${LIST_SOURCES})
target_include_directories(ceammc_list
    PRIVATE "$<TARGET_PROPERTY:fmt,INCLUDE_DIRECTORIES>")
