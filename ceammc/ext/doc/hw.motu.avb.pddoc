<?xml version="1.0" encoding="utf-8"?>
<pddoc version="1.0">
    <object name="hw.motu.avb">
        <title>hw.motu.avb</title>
        <meta>
            <authors>
                <author>Serge Poltavsky</author>
            </authors>
            <description>controls Motu AVB devices over http requests</description>
            <license>GPL3 or later</license>
            <library>ceammc</library>
            <category>hw</category>
            <keywords>motu avb</keywords>
            <since>0.9.5</since>
        </meta>
        <info>
            <par>Only basic support at this moment</par>
        </info>
        <arguments>
            <argument name="ID" type="symbol">Motu device id</argument>
        </arguments>
        <properties>
            <property name="@host" type="symbol" default="localhost">Motu HTTP host</property>
            <property name="@port" type="int" default="1280" minvalue="1" maxvalue="1200">Motu HTTP
            port</property>
            <property name="@dev" type="symbol" default="">Motu device id</property>
        </properties>
        <methods>
            <method name="main_gain">set main output gain 
            <param name="DB" type="float" units="decibel" required="true" minvalue="-127"
            maxvalue="0">value in decibel</param></method>
            <method name="phones_gain">set phones output gain 
            <param name="DB" type="float" units="decibel" required="true" minvalue="-127"
            maxvalue="0">value in decibel</param></method>
            <method name="phantom">turns phantom on/off 
            <param name="CHAN" type="int" required="true" minvalue="0">phantom channel</param>
            <param name="VAL" type="int" required="true" enum="0 1">phantom state</param></method>
            <method name="mic_gain">set mic gain 
            <param name="CHAN" type="int" required="true" minvalue="0">mic channel
            (zero-based)</param>
            <param name="DB" type="float" units="decibel" required="true" minvalue="0"
            maxvalue="60">value in decibel</param></method>
            <method name="mic_pad">set mic -20db padding 
            <param name="CHAN" type="int" required="true" minvalue="0">mic channel
            (zero-based)</param>
            <param name="VAL" type="int" required="true" enum="0 1">state</param></method>
            <method name="mic_phase">set mic phase invert 
            <param name="CHAN" type="int" required="true" minvalue="0">mic channel
            (zero-based)</param>
            <param name="VAL" type="int" required="true" enum="0 1">state</param></method>
            <method name="guitar_gain">set guitar gain 
            <param name="CHAN" type="int" required="true" minvalue="0">guitar channel
            (zero-based)</param>
            <param name="DB" type="float" units="decibel" required="true" minvalue="0"
            maxvalue="60">value in decibel</param></method>
            <method name="guitar_phase">set guitar phase invert 
            <param name="CHAN" type="int" required="true" minvalue="0">guitar channel
            (zero-based)</param>
            <param name="VAL" type="int" required="true" enum="0 1">state</param></method>
            <method name="input_gain">set input gain 
            <param name="CHAN" type="int" required="true" minvalue="0">input channel
            (zero-based)</param>
            <param name="DB" type="float" units="decibel" required="true">value in
            decibel</param></method>
            <method name="output_gain">set input gain 
            <param name="CHAN" type="int" required="true" minvalue="0">input channel
            (zero-based)</param>
            <param name="DB" type="float" units="decibel" required="true">value in
            decibel</param></method>
            <!-- setting channel names -->
            <method name="guitar_name">set guitar channel name
            <param name="CHAN" type="int" required="true" minvalue="0">channel
            (zero-based)</param>
            <param name="NAME" type="symbol" required="true">channel name</param></method>
            <method name="mic_name">set microphone channel name
            <param name="CHAN" type="int" required="true" minvalue="0">channel
            (zero-based)</param>
            <param name="NAME" type="symbol" required="true">channel name</param></method>
            <method name="input_name">set analogue input channel name
            <param name="CHAN" type="int" required="true" minvalue="0">channel
            (zero-based)</param>
            <param name="NAME" type="symbol" required="true">channel name</param></method>
            <method name="comp_input_name">set input from computer channel name
            <param name="CHAN" type="int" required="true" minvalue="0">channel
            (zero-based)</param>
            <param name="NAME" type="symbol" required="true">channel name</param></method>
            <!-- routing -->
            <!-- mic -->
            <method name="mic->comp">set microphone input to computer routing
            <param name="INCH" type="int" required="true" minvalue="0">microphone input channel
            (zero-based)</param>
            <param name="OUTCH" type="int" required="true" minvalue="0">computer channel
            (zero-based)</param>
            <param name="STATE" type="int" required="true" enum="0 1">enable/disable routing</param></method>
            <method name="mic->output">set microphone input to analog output routing
            <param name="INCH" type="int" required="true" minvalue="0">microphone input channel
            (zero-based)</param>
            <param name="OUTCH" type="int" required="true" minvalue="0">analogue output channel
            (zero-based)</param>
            <param name="STATE" type="int" required="true" enum="0 1">enable/disable routing</param></method>
            <method name="mic->mix">set microphone input to mixer routing
            <param name="INCH" type="int" required="true" minvalue="0">microphone input channel
            (zero-based)</param>
            <param name="OUTCH" type="int" required="true" minvalue="0">mixer input channel
            (zero-based)</param>
            <param name="STATE" type="int" required="true" enum="0 1">enable/disable routing</param></method>
            <!-- input -->
            <method name="input->output">set analogue input to analog output routing
            <param name="INCH" type="int" required="true" minvalue="0">analogue input channel
            (zero-based)</param>
            <param name="OUTCH" type="int" required="true" minvalue="0">analogue output channel
            (zero-based)</param>
            <param name="STATE" type="int" required="true" enum="0 1">enable/disable routing</param></method>
            <method name="input->mix">set analogue input to mixer routing
            <param name="INCH" type="int" required="true" minvalue="0">analogue input channel
            (zero-based)</param>
            <param name="OUTCH" type="int" required="true" minvalue="0">mixer input channel
            (zero-based)</param>
            <param name="STATE" type="int" required="true" enum="0 1">enable/disable routing</param></method>
            <method name="input->comp">set analogue input to computer routing
            <param name="INCH" type="int" required="true" minvalue="0">analogue input channel
            (zero-based)</param>
            <param name="OUTCH" type="int" required="true" minvalue="0">computer input channel
            (zero-based)</param>
            <param name="STATE" type="int" required="true" enum="0 1">enable/disable routing</param></method>
            <!-- guitar -->
            <method name="guitar->comp">set guitar input to computer routing
            <param name="INCH" type="int" required="true" minvalue="0">guitar input channel
            (zero-based)</param>
            <param name="OUTCH" type="int" required="true" minvalue="0">computer input channel
            (zero-based)</param>
            <param name="STATE" type="int" required="true" enum="0 1">enable/disable routing</param></method>
            <method name="guitar->mix">set guitar input to mixer routing
            <param name="INCH" type="int" required="true" minvalue="0">guitar input channel
            (zero-based)</param>
            <param name="OUTCH" type="int" required="true" minvalue="0">mixer input channel
            (zero-based)</param>
            <param name="STATE" type="int" required="true" enum="0 1">enable/disable routing</param></method>
            <method name="guitar->output">set guitar input to analogue output routing
            <param name="INCH" type="int" required="true" minvalue="0">guitar input channel
            (zero-based)</param>
            <param name="OUTCH" type="int" required="true" minvalue="0">analogue output channel
            (zero-based)</param>
            <param name="STATE" type="int" required="true" enum="0 1">enable/disable routing</param></method>
        </methods>
        <inlets>
            <inlet>
                <xinfo>input</xinfo>
            </inlet>
        </inlets>
        <outlets>
            <outlet>properties output</outlet>
        </outlets>
        <example>
            <pdascii>
<![CDATA[
/*Enter device ID*/

[S digits=20]
|
[@dev $1( [@dev 0001f2fffe00XXXX #a(
|
|  [T]            [ui.hsl -60 0 @show_value 1]
|  |              |
|  [phantom 0 $1( [main_gain $1(
|  |              |
|  |              |
[hw.motu.avb      #z]
[X a->z]
]]>
            </pdascii>
        </example>
    </object>
</pddoc>
