#N canvas 0 0 760 555 12;
#X obj 20 53 ui.link @title index @url ../index-help.pd;
#X text 62 50 ::;
#X obj 79 53 ui.link @title ceammc @url ceammc-help.pd;
#X obj 30 116 array.p2s;
#X text 200 116 convert array phase [0\..1] to sample position;
#X obj 30 143 array.s2p;
#X text 200 143 convert sample position to phase range [0\..1];
#X obj 30 170 conv.amp2dbfs;
#X text 200 170 convert from amplitude to decibel full scale;
#X obj 30 197 conv.amp2dbfs~;
#X text 200 197 convert from amplitude to decibel full scale;
#X obj 30 224 conv.bits2bang;
#X text 200 224 convert list of bits to bang events;
#X obj 30 251 conv.bits2int;
#X text 200 251 convert list of bits to integer;
#X obj 30 278 conv.bits2note;
#X text 200 278 convert list of bits to note events;
#X obj 30 305 conv.bits2pos;
#X text 200 305 convert list of bits to list of bit position;
#X obj 30 332 conv.bpm2hz;
#X text 200 332 converts BPM to frequency in hertz;
#X obj 30 359 conv.bpm2ms;
#X text 200 359 convert frequency in BPM to period in milliseconds;
#X obj 30 386 conv.bpm2sec;
#X text 200 386 convert frequency in BPM to period in seconds;
#X obj 30 413 conv.car2pol;
#X text 200 413 convert cartesian coords to polar;
#X obj 30 440 conv.cc2amp;
#X text 200 440 convert from MIDI Control Change range;
#X obj 30 467 conv.char2morse;
#X text 200 467 convert character to morse code;
#X obj 30 494 conv.color2rgba;
#X text 200 494 convert named or hex color to separate RGBA values;
#X obj 30 521 conv.dbfs2amp;
#X text 200 521 convert decibel full scale to amplitude;
#X obj 30 548 conv.dbfs2amp~;
#X text 200 548 convert decibel full scale to amplitude;
#X obj 30 575 conv.degree2key;
#X text 200 575 convert scale degree to key;
#X obj 30 602 conv.edge2bang;
#X text 200 602 edge detector for numeric stream;
#X obj 30 629 conv.hex2int;
#X text 200 629 hex symbol to int value;
#X obj 30 656 conv.int2bits;
#X text 200 656 convert integer to list of bits;
#X obj 30 683 conv.lin2curve;
#X text 200 683 map linear to exponential range with 0 allowed.;
#X obj 30 710 conv.lin2exp;
#X text 200 710 maps linear range to exponential range;
#X obj 30 737 conv.lin2lin;
#X text 200 737 convert from one linear range to another;
#X obj 30 764 conv.lin2lin~;
#X text 200 764 convert from one linear range to another for signals;
#X obj 30 791 conv.list2props;
#X text 200 791 converts list to series of property messages;
#X obj 30 818 conv.midi2freq;
#X text 200 818 convert from midi pitch to frequency in hz (with various
base A and temperament);
#X obj 30 858 conv.ms2bpm;
#X text 200 858 convert period in milliseconds to frequency in BPM;
#X obj 30 885 conv.ms2samp;
#X text 200 885 convert time in milliseconds to number of samples according
to current samplerate;
#X obj 30 925 conv.ms2samp~;
#X text 200 925 convert time in milliseconds to number of samples according
to current samplerate;
#X obj 30 965 conv.note2guido;
#X text 200 965 convert MIDI note to Guido notation;
#X obj 30 992 conv.phase2rad;
#X text 200 992 convert phase value [0-1] to radians [0-2π];
#X obj 30 1019 conv.phase2rad~;
#X text 200 1019 convert phase value [0-1] to radians [0-2π];
#X obj 30 1046 conv.pitch2midi;
#X text 200 1046 converts symbol pitch name to MIDI note number;
#X obj 30 1073 conv.pol2car;
#X text 200 1073 convert from polar coordinates to cartesian;
#X obj 30 1100 conv.rad2phase;
#X text 200 1100 convert radians value to phase;
#X obj 30 1127 conv.rad2phase~;
#X text 200 1127 convert radians value to phase;
#X obj 30 1154 conv.rgb2hex;
#X text 200 1154 convert separate RGB values to hex color;
#X obj 30 1181 conv.samp2ms;
#X text 200 1181 convert samples to time according to samplerate;
#X obj 30 1208 conv.samp2ms~;
#X text 200 1208 convert samples to milliseconds according to samplerate;
#X obj 30 1235 conv.samp2sec;
#X text 200 1235 convert samples to time according to samplerate;
#X obj 30 1262 conv.sec2bpm;
#X text 200 1262 convert period in seconds to frequency in BPM;
#X obj 30 1289 conv.sec2samp;
#X text 200 1289 convert time in seconds to number of samples according
to current samplerate;
#X obj 30 1329 conv.sec2str;
#X text 200 1329 converts float time in seconds to formated symbol
(or string);
#X obj 30 1356 conv.sig2float~;
#X text 200 1356 convert signal to floats;
#X obj 30 1383 conv.str2sec;
#X text 200 1383 converts formatted time to float value in seconds;
#X obj 30 1410 music.dur2time;
#X text 200 1410 convert duration list to time;
#X obj 30 1437 music.voice2midi;
#X text 200 1437 convert voice music list of midi pitches;
#X obj 1 1 cnv 5 740 40 empty empty ceammc::conv 20 20 0 20 -104026
-4096 0;
#X obj 1 1464 cnv 5 740 40 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 20 1474 library: ceammc;