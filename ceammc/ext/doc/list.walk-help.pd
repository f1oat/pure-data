#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 613 50 cnv 1 152 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 613 50 Walks thru the list;
#X obj 1 1 cnv 5 765 40 empty empty list.walk 20 20 0 20 -104026 -4096
0;
#X obj 674 11 list.walk;
#X obj 210 80 cnv 1 555 80 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 Universal list walker. If you want to output current
element and when move to next - use [1( message \, Otherwise - use
[next( if you want first move to next position and then output it.;
#X obj 50 188 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1;
#X obj 280 188 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1;
#X obj 50 217 metro 100;
#X msg 165 217 1 6 9 11;
#X msg 270 217 @direction \$1;
#X msg 184 246 @clip;
#X msg 290 246 @single;
#X msg 386 246 @loop;
#X msg 462 246 @fold;
#X msg 88 275 -1;
#X msg 213 275 1;
#X msg 482 275 prev;
#X msg 549 275 next;
#X obj 50 304 list.walk 1 3 6 8 @fold;
#X obj 50 332 + 60;
#X obj 50 361 mtof;
#X obj 50 390 osc~;
#X obj 50 419 ui.hgain~;
#X obj 50 448 dac~;
#X obj 117 448 ui.dsp~;
#X obj 20 498 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 503 cnv 5 90 25 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 538 1.;
#X text 150 538 list;
#X obj 246 539 cnv 1 48 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 538 VALUE: initial list. Type: list.;
#X obj 20 568 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 573 cnv 5 98 25 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 608 @clip;
#X text 245 608 clipped pass mode. When the list bounds are reached
- min/max value repeats perpetually.;
#X msg 110 650 @direction;
#X text 245 650 Get/Set walking direction. "1" - forwards \, "0" -
backwards. Type: bool. Default value: 1.;
#X msg 110 692 @fold;
#X text 245 692 fold pass mode. List values are repeated in a loop
with folding.;
#X msg 110 734 @index;
#X text 245 734 Get/Set current position. Type: list. Default value:
0. Min value: 0.;
#X msg 110 776 @length;
#X text 245 776 Get/Set output list length. Type: int. Default value:
1. Min value: 1.;
#X msg 110 818 @loop;
#X text 245 818 @wrap alias.;
#X msg 110 848 @mode;
#X text 245 848 Get/Set pass mode. See properties below for detailed
information. Type: symbol. Default value: single. Allowed values: single
\, clip \, wrap \, fold.;
#X msg 110 905 @single;
#X text 245 905 single pass mode. When the list bounds are reached
- no output any more until reset.;
#X msg 110 947 @value;
#X text 245 947 Get/Set current list. Type: list.;
#X msg 110 977 @wrap;
#X text 245 977 wrap pass mode. List values are repeated in a loop.;
#X msg 110 1007 @size?;
#X text 245 1007 (readonly) Get current list size. Type: int. Default
value: 0. Min value: 0.;
#X obj 20 1059 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1064 cnv 5 73 25 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 1099 current;
#X text 245 1099 outputs current element.;
#X msg 110 1127 next;
#X text 245 1127 Arguments are:;
#X obj 255 1150 cnv 1 63 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1150 [STEP=1]: moves to next element with optional given
step and outputs it. Type: int.;
#X msg 110 1190 prev;
#X text 245 1190 Arguments are:;
#X obj 255 1213 cnv 1 63 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1213 [STEP=1]: moves to previous element with optional
given step and outputs it. Type: int.;
#X msg 110 1253 reset;
#X text 245 1253 sets current position to 0.;
#X msg 110 1281 dump;
#X text 245 1281 dump internal object state to Pd console window.;
#X obj 20 1319 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1324 cnv 5 64 25 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1325 1.;
#X text 150 1325 *bang*;
#X text 245 1325 outputs current element and moves to next.;
#X text 150 1345 *float*;
#X text 245 1345 outputs current element and moves by specified position.;
#X text 150 1365 *list*;
#X text 245 1365 set new list and reset current position. (no output).;
#X obj 20 1395 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1400 cnv 5 73 25 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1401 1.;
#X text 245 1401 list element.;
#X text 110 1421 2.;
#X text 245 1421 bang: when last element reached.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 68 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 116 45 ::;
#X obj 133 48 ui.link @title list @url ceammc.list-help.pd;
#X obj 1 1471 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1474 library: ceammc v0.9.7;
#X text 534 1486 see also:;
#X obj 609 1486 list.gen;
#X obj 682 1486 list.seq;
#N canvas 10 1493 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.7;
#X text 10 54 object:;
#X text 120 54 list.walk;
#X text 10 76 category:;
#X text 120 76 list;
#X text 10 98 since:;
#X text 120 98 0.1;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 list \, walk \, iterate;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pd-ceammc @url
https://github.com/uliss/pd-ceammc;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1493 pd info;
#X connect 6 0 8 0;
#X connect 7 0 10 0;
#X connect 8 0 19 0;
#X connect 15 0 19 0;
#X connect 9 0 19 0;
#X connect 11 0 19 0;
#X connect 16 0 19 0;
#X connect 10 0 19 0;
#X connect 12 0 19 0;
#X connect 13 0 19 0;
#X connect 14 0 19 0;
#X connect 17 0 19 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 21 0;
#X connect 21 0 22 0;
#X connect 22 0 23 0;
#X connect 23 0 24 0;
#X connect 23 0 24 1;