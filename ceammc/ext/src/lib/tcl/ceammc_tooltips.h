// this is autogenerated file, do not edit manually!
#include "m_pd.h"
#ifndef __ceammc_tooltips_tcl_h
#define __ceammc_tooltips_tcl_h
namespace {
void ceammc_tooltips_tcl_output() {
	sys_vgui("%s", "namespace eval ::ceammc_tt {\nset txt {}\nset active 0\n}\nproc ::ceammc_tt::txt {c tag xlet text} {\n$c bind $tag <Enter> [list ::ceammc_tt::enter $c $tag $xlet $text]\n$c bind $tag <Leave> [list ::ceammc_tt::leave $c]\n}\nproc ::ceammc_tt::show {c tag xlet} {\nif {$::ceammc_tt::active == 0} return\n$c delete ceammc_tt\nforeach {x - - y} [$c bbox $tag] break\nif [info exists y] {\nvariable id\nif {$xlet == 0} {\nincr y 7\nset id [$c create text $x $y -text $::ceammc_tt::txt -font TkTooltipFont -anchor nw -tag ceammc_tt]\n} else {\nincr y -10\nset id [$c create text $x $y -text $::ceammc_tt::txt -font TkTooltipFont -anchor sw -tag ceammc_tt]\n}\nforeach {x0 y0 x1 y1} [$c bbox $id] break\n$c create rect [expr $x0-2] [expr $y0-1] [expr $x1+2] [expr $y1+1] -fill lightblue -tag ceammc_tt\n$c raise $id\n$c bind $id <Leave> [list ::ceammc_tt::leave $c]\n}\n}\nproc ::ceammc_tt::enter {c tag xlet text} {\nset ::ceammc_tt::active 1\nset ::ceammc_tt::txt $text\nafter 500 ::ceammc_tt::show $c $tag $xlet\n}\nproc ::ceammc_tt::del");
	sys_vgui("%s", "ete {c} {\nif {$::ceammc_tt::active == 1} return\n$c delete ceammc_tt\n}\nproc ::ceammc_tt::leave {c} {\nset ::ceammc_tt::active 0\nafter 50 ::ceammc_tt::delete $c\n}\n");
}
}
#endif // __ceammc_tooltips_tcl_h
