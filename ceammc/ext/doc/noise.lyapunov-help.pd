#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 568 50 cnv 1 197 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 568 50 lyapunov random attractor;
#X obj 1 1 cnv 5 765 40 empty empty noise.lyapunov 20 20 0 20 -104026
-4096 0;
#X obj 639 11 noise.lyapunov;
#X obj 210 80 cnv 1 555 440 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 inspired by Paul Bourke \, implementation by André Sier;
#X text 215 105 ---;
#X text 215 130 lyapunov random attractors;
#X text 215 155 ---;
#X text 215 180 Paul Bourke's words http://astronomy.swin.edu.au/%7Epbourke/fractals/lyapunov/;
#X text 215 220 ---;
#X text 215 245 On average 98% of the random selections of (an \, bn)
result in an infinite series.;
#X text 215 285 This is so common because of the range (-2<=a \, b<=2)
for each of the parameters a and b \, the number of infinite cases
will reduce greatly with a smaller range.;
#X text 215 340 About 1% were point attractors \, and about 0.5% were
periodic basins of attraction.;
#X text 215 380 ===;
#X text 215 405 x[n+1] = a[0] + a[1]*x[n] + a[2]*x[n]^2 + a[3]*x[n]*y[n]
+ a[4]*y[n] + a[5]*y[n]^2;
#X text 215 445 y[n+1] = b[0] + b[1]*x[n] + b[2]*x[n]^2 + b[3]*x[n]*y[n]
+ b[4]*y[n] + b[5]*y[n]^2;
#X text 215 485 ===;
#X obj 50 563 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1;
#X obj 50 592 metro 50;
#X obj 69 635 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1;
#X floatatom 184 635 5 0 0 0 - - -;
#X msg 69 664 om \$1;
#X msg 184 664 set \$1;
#X msg 318 664 reset;
#X floatatom 59 692 5 0 0 0 - - -;
#X floatatom 194 692 5 0 0 0 - - -;
#X msg 59 721 x \$1;
#X msg 194 721 y \$1;
#X floatatom 88 750 5 0 0 0 - - -;
#X floatatom 184 750 5 0 0 0 - - -;
#X msg 88 779 a \$1;
#X msg 184 779 b \$1;
#X obj 50 808 noise.lyapunov;
#X obj 50 836 ui.display;
#X obj 20 870 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 875 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 910 1\.;
#X text 150 910 float;
#X obj 246 911 cnv 1 17 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 910 A: a value (optional). Type: float.;
#X text 110 930 2\.;
#X text 150 930 float;
#X obj 246 931 cnv 1 16 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 930 B: b value (optional). Type: float.;
#X text 110 950 3\.;
#X text 150 950 float;
#X obj 246 951 cnv 1 17 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 950 X: x value (optional). Type: float.;
#X text 110 970 4\.;
#X text 150 970 float;
#X obj 246 971 cnv 1 17 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 970 Y: y value (optional). Type: float.;
#X obj 20 1000 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1005 cnv 5 73 26 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 1040 a;
#X text 245 1040 Arguments are:;
#X obj 255 1063 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1063 A0: a[0] value. Type: float.;
#X obj 255 1086 cnv 1 31 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1086 [A1]: a[1] value. Type: float.;
#X obj 255 1109 cnv 1 31 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1109 [A2]: a[2] value. Type: float.;
#X obj 255 1132 cnv 1 31 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1132 [A3]: a[3] value. Type: float.;
#X obj 255 1155 cnv 1 31 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1155 [A4]: a[4] value. Type: float.;
#X obj 255 1178 cnv 1 31 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1178 [A5]: a[5] value. Type: float.;
#X msg 110 1203 b;
#X text 245 1203 Arguments are:;
#X obj 255 1226 cnv 1 21 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1226 B0: b[0] value. Type: float.;
#X obj 255 1249 cnv 1 31 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1249 [B1]: b[1] value. Type: float.;
#X obj 255 1272 cnv 1 31 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1272 [B2]: b[2] value. Type: float.;
#X obj 255 1295 cnv 1 31 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1295 [B3]: b[3] value. Type: float.;
#X obj 255 1318 cnv 1 31 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1318 [B4]: b[4] value. Type: float.;
#X obj 255 1341 cnv 1 31 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1341 [B5]: b[5] value. Type: float.;
#X msg 110 1366 om;
#X text 245 1366 Arguments are:;
#X obj 255 1389 cnv 1 21 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1389 OM: enables output when cut or fold value is changed.
Type: int.;
#X msg 110 1429 reset;
#X text 245 1429 reset state.;
#X msg 110 1456 set;
#X text 245 1456 Arguments are:;
#X obj 255 1479 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1479 SET: set to value. Type: float.;
#X msg 110 1504 x;
#X text 245 1504 Arguments are:;
#X obj 255 1527 cnv 1 23 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1527 NX: x value. Type: float.;
#X msg 110 1552 y;
#X text 245 1552 Arguments are:;
#X obj 255 1575 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1575 NY: y value. Type: float.;
#X obj 20 1610 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1615 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1616 1\.;
#X text 150 1616 *bang*;
#X text 245 1616 output value.;
#X obj 20 1646 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1651 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1652 1\.;
#X text 245 1652 x outlet.;
#X text 110 1672 2\.;
#X text 245 1672 y outlet.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title noise @url ceammc.noise-help.pd;
#X obj 1 1722 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1725 library: ceammc v0.9.5;
#N canvas 10 1744 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.5;
#X text 10 54 object:;
#X text 120 54 noise.lyapunov;
#X text 10 76 category:;
#X text 120 76 noise;
#X text 10 98 since:;
#X text 120 98 0.5;
#X text 10 120 authors:;
#X text 120 120 André Sier;
#X text 10 142 license:;
#X text 120 142 %;
#X text 10 164 keywords:;
#X text 120 164 noise;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1744 pd info;
#X connect 18 0 19 0;
#X connect 20 0 22 0;
#X connect 21 0 23 0;
#X connect 25 0 27 0;
#X connect 26 0 28 0;
#X connect 29 0 31 0;
#X connect 30 0 32 0;
#X connect 33 0 34 0;
#X connect 27 0 33 0;
#X connect 28 0 33 0;
#X connect 31 0 33 0;
#X connect 32 0 33 0;
#X connect 22 0 33 0;
#X connect 23 0 33 0;
#X connect 24 0 33 0;
#X connect 19 0 33 0;