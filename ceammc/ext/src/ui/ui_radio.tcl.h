// this is autogenerated file, do not edit manually!
#include "m_pd.h"
#ifndef __ui_radio_tcl_h
#define __ui_radio_tcl_h
namespace {
void ui_radio_tcl_output() {
	sys_vgui("%s", "namespace eval ::ui {\nproc radio_draw_single {c t w h zoom orient states color} {\nset min_size [expr 2 * $zoom]\nif { $orient == \"v\" } {\nset cell_size $w\nset pad [expr round($cell_size/5.0)]\nif { $pad < $min_size } { set pad $min_size }\nset i 0\nforeach x [split $states {}] {\nif { $x == \"1\" } {\nset y0 [expr $i*$cell_size + $pad]\nset y1 [expr ($i+1)*$cell_size - $pad]\nset x0 $pad\nset x1 [expr $w - $pad]\n$c create rectangle $x0 $y0 $x1 $y1 -fill $color -outline $color -width $zoom -tags $t\nbreak\n}\nincr i\n}\n} else {\nset cell_size $h\nset pad [expr round($cell_size/5.0)]\nif { $pad < $min_size } { set pad $min_size }\nset i 0\nforeach x [split $states {}] {\nif { $x == \"1\" } {\nset x0 [expr $i*$cell_size + $pad]\nset x1 [expr ($i+1)*$cell_size - $pad]\nset y0 $pad\nset y1 [expr $h - $pad]\n$c create rectangle $x0 $y0 $x1 $y1 -fill $color -outline $color -width $zoom -tags $t\nbreak\n}\nincr i\n}\n}\n}\nproc radio_draw_cross {c t x y w h zoom color} {\nset xpad [expr floor($w * 0.1)]\nset ypad [expr floor($h * 0");
	sys_vgui("%s", ".1)]\nif {$xpad > 16} { set xpad 16 }\nif {$ypad > 16} { set ypad 16 }\nif {$zoom == 1} {set corr 1} {set corr 0}\nset x0 [expr $x + $xpad + $corr]\nset y0 [expr $y + $ypad + $corr]\nset x1 [expr $x + $w - $xpad]\nset y1 [expr $y + $h - $ypad]\nset wd [expr 1 + $zoom]\nif {$w>30} {set wd [expr $wd + $xpad*0.5]}\n$c create line $x0 $y0 $x1 $y1 -fill $color -width $wd -capstyle butt -tags $t\n$c create line $x0 $y1 $x1 $y0 -fill $color -width $wd -capstyle butt -tags $t\n}\nproc radio_draw_multi {c t w h zoom orient states color} {\nif { $orient == \"v\" } {\nset cell_size $w\nset i 0\nforeach x [split $states {}] {\nif { $x == \"1\" } {\nset y0 [expr $i*$cell_size]\nradio_draw_cross $c $t 0 $y0 $cell_size $cell_size $zoom $color\n}\nincr i\n}\n} else {\nset cell_size $h\nset i 0\nforeach x [split $states {}] {\nif { $x == \"1\" } {\nset x0 [expr $i*$cell_size]\nradio_draw_cross $c $t $x0 0 $cell_size $cell_size $zoom $color\n}\nincr i\n}\n}\n}\nproc radio_update {cnv id w h zoom orient mode states act_color out_color} {\nset c [::");
	sys_vgui("%s", "ceammc::ui::widget_canvas $cnv $id]\nset t [::ceammc::ui::widget_tag $id]\n$c delete $t\nset num_cells [string length $states]\nif { $orient == \"v\" } {\nset cell_size $w\nfor { set i 1 } { $i < $num_cells } { incr i } {\nset y [expr $cell_size * $i]\n$c create line 0 $y $w $y -fill $out_color -width $zoom -capstyle butt -tags $t\n}\n} else {\nset cell_size $h\nfor { set i 1 } { $i < $num_cells } { incr i } {\nset x [expr $cell_size * $i]\n$c create line $x 0 $x $h -fill $out_color -width $zoom -capstyle butt -tags $t\n}\n}\nif { $mode == \".\" } {\nradio_draw_single $c $t $w $h $zoom $orient $states $act_color\n} else {\nradio_draw_multi $c $t $w $h $zoom $orient $states $act_color\n}\n}\n}\n");
}
}
#endif // __ui_radio_tcl_h
