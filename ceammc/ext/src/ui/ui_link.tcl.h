// this is autogenerated file, do not edit manually!
#include "m_pd.h"
#ifndef __ui_link_tcl_h
#define __ui_link_tcl_h
namespace {
void ui_link_tcl_output() {
	sys_vgui("%s", "namespace eval ::ui {\nnamespace eval link {\nvariable font_size 11\nvariable font_family \"Helvetica\"\n}\nswitch -- $::windowingsystem {\n\"aqua\" {\nset link::font_family \"Menlo\"\n}\n\"x11\" {\nset link::font_family \"Helvetica\"\n}\n\"win32\" {\nset link::font_family \"Dejavu Sans Mono\"\nset link::font_size 7\n}\n}\nproc link_type_font { zoom } { return \"{$link::font_family} [expr $zoom * $link::font_size] normal roman\" }\nproc link_open {filename dir} {\nif {[string first \"://\" $filename] > -1} {\nmenu_openfile $filename\n} elseif {[file pathtype $filename] eq \"absolute\"} {\nif {[file extension $filename] eq \".pd\"} {\nset dir [file dirname $filename]\nset name [file tail $filename]\nmenu_doc_open $dir $name\n} else {\nmenu_openfile $filename\n}\n} elseif {[file exists [file join $dir $filename]]} {\nset fullpath [file normalize [file join $dir $filename]]\nset dir [file dirname $fullpath]\nset filename [file tail $fullpath]\nmenu_doc_open $dir $filename\n} elseif {[file exists [file join $::sys_libdir doc 5.reference $filenam");
	sys_vgui("%s", "e]]} {\nset fullpath [file normalize [file join $::sys_libdir doc 5.reference $filename]]\nset dir [file dirname $fullpath]\nset filename [file tail $fullpath]\nmenu_doc_open $dir $filename\n} elseif {[file exists [file join $::sys_libdir extra $filename]]} {\nset fullpath [file normalize [file join $::sys_libdir extra $filename]]\nset dir [file dirname $fullpath]\nset filename [file tail $fullpath]\nmenu_doc_open $dir $filename\n} else {\nbell ; # beep on error to provide instant feedback\npdtk_post \"ERROR: file not found: $filename at $dir\"\npdtk_post \"\"\n}\n}\nproc link_update {cnv id rid w h zoom txt_color hover_color url txt} {\nset c [::ceammc::ui::widget_canvas $cnv $id]\nset t [::ceammc::ui::widget_tag $id]\n$c delete $t\nset x 0\nset txpad [expr $zoom*2+1]\nset typad [expr $zoom*2+1]\nset tx $txpad\nset ty $typad\nset ft [link_type_font $zoom]\n$c create text $tx $ty -text $txt -anchor nw -justify left \\\n-font $ft -fill $txt_color -width 0 -tags $t\nset onenter \"$c itemconfigure $t -fill $hover_color\"\nbin");
	sys_vgui("%s", "d $c <Enter> $onenter\nset onleave \"$c itemconfigure $t -fill $txt_color\"\nbind $c <Leave> $onleave\nceammc_tooltip $c $url\nlassign [$c bbox $t] tx0 ty0 tx1 ty1\nset tw [expr $tx1 - $tx0]\nset th [expr abs($ty1 - $ty0)]\nset nw $w\nset dispw [expr $tw + (1*$txpad)]\nif { $dispw != $nw } { set nw $dispw }\nset nh 5\nset disph [expr $th + $typad]\nif { $disph > $nh } { set nh $disph }\nif { $nh != $h || $nw != $w } {\npdsend \"$rid .resize $nw $nh\"\n}\n}\n}\n");
}
}
#endif // __ui_link_tcl_h
