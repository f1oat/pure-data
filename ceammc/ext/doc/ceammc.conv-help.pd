#N canvas 0 0 760 555 12;
#X obj 20 53 ui.link @title index @url ../index-help.pd;
#X text 62 50 ::;
#X obj 80 53 ui.link @title ceammc @url ceammc-help.pd;
#X obj 30 117 array.p2s;
#X text 200 117 convert array phase [0\..1] to sample position;
#X obj 30 145 array.s2p;
#X text 200 145 convert sample position to phase range [0\..1];
#X obj 30 173 conv.amp2dbfs;
#X text 200 173 convert from amplitude to decibel full scale;
#X obj 30 201 conv.amp2dbfs~;
#X text 200 201 convert from amplitude to decibel full scale;
#X obj 30 229 conv.bar2ms;
#X text 200 229 calculate bar and beat duration;
#X obj 30 257 conv.bits2bang;
#X text 200 257 convert list of bits to bang events;
#X obj 30 285 conv.bits2int;
#X text 200 285 convert list of bits to integer;
#X obj 30 313 conv.bits2note;
#X text 200 313 convert list of bits to note events;
#X obj 30 341 conv.bits2pos;
#X text 200 341 convert list of bits to list of bit position;
#X obj 30 369 conv.bpm2hz;
#X text 200 369 converts BPM to frequency in hertz;
#X obj 30 397 conv.bpm2ms;
#X text 200 397 convert frequency in BPM to period in milliseconds;
#X obj 30 425 conv.bpm2sec;
#X text 200 425 convert frequency in BPM to period in seconds;
#X obj 30 453 conv.car2pol;
#X text 200 453 convert cartesian coords to polar;
#X obj 30 481 conv.cc2amp;
#X text 200 481 convert from MIDI Control Change range;
#X obj 30 509 conv.char2morse;
#X text 200 509 convert character to morse code;
#X obj 30 537 conv.color2rgba;
#X text 200 537 convert named or hex color to separate RGBA values;
#X obj 30 565 conv.dbfs2amp;
#X text 200 565 convert decibel full scale to amplitude;
#X obj 30 593 conv.dbfs2amp~;
#X text 200 593 convert decibel full scale to amplitude;
#X obj 30 621 conv.degree2key;
#X text 200 621 convert scale degree to key;
#X obj 30 649 conv.edge2bang;
#X text 200 649 edge detector for numeric stream;
#X obj 30 677 conv.guido2note;
#X text 200 677 convert Guido notation into MIDI and duration;
#X obj 30 705 conv.hex2int;
#X text 200 705 hex symbol to int value;
#X obj 30 733 conv.hsl2rgb;
#X text 200 733 convert HSL color values to RGB;
#X obj 30 761 conv.int2bits;
#X text 200 761 convert integer to list of bits;
#X obj 30 789 conv.lab2rgb;
#X text 200 789 convert LAB color values to RGB;
#X obj 30 817 conv.lin2curve;
#X text 200 817 map linear to exponential range with 0 allowed.;
#X obj 30 845 conv.lin2exp;
#X text 200 845 maps linear range to exponential range;
#X obj 30 873 conv.lin2lin;
#X text 200 873 convert from one linear range to another;
#X obj 30 901 conv.lin2lin~;
#X text 200 901 convert from one linear range to another for signals;
#X obj 30 929 conv.list2props;
#X text 200 929 converts list to series of property messages;
#X obj 30 957 conv.midi2freq;
#X text 200 957 convert from midi pitch to frequency in hz (with various
base A and temperament);
#X obj 30 997 conv.ms2bpm;
#X text 200 997 convert period in milliseconds to frequency in BPM;
#X obj 30 1025 conv.ms2samp;
#X text 200 1025 convert time in milliseconds to number of samples
according to current samplerate;
#X obj 30 1065 conv.ms2samp~;
#X text 200 1065 convert time in milliseconds to number of samples
according to current samplerate;
#X obj 30 1105 conv.ms2str;
#X text 200 1105 converts float time in milliseconds to formated symbol
(or string);
#X obj 30 1145 conv.note2guido;
#X text 200 1145 convert MIDI note to Guido notation;
#X obj 30 1173 conv.phase2rad;
#X text 200 1173 convert phase value [0-1] to radians [0-2π];
#X obj 30 1201 conv.phase2rad~;
#X text 200 1201 convert phase value [0-1] to radians [0-2π];
#X obj 30 1229 conv.pitch2midi;
#X text 200 1229 converts symbol pitch name to MIDI note number;
#X obj 30 1257 conv.pol2car;
#X text 200 1257 convert from polar coordinates to cartesian;
#X obj 30 1285 conv.rad2phase;
#X text 200 1285 convert radians value to phase;
#X obj 30 1313 conv.rad2phase~;
#X text 200 1313 convert radians value to phase;
#X obj 30 1341 conv.rgb2hex;
#X text 200 1341 convert separate RGB values to hex color;
#X obj 30 1369 conv.samp2ms;
#X text 200 1369 convert samples to time according to samplerate;
#X obj 30 1397 conv.samp2ms~;
#X text 200 1397 convert samples to milliseconds according to samplerate;
#X obj 30 1425 conv.samp2sec;
#X text 200 1425 convert samples to time according to samplerate;
#X obj 30 1453 conv.sec2bpm;
#X text 200 1453 convert period in seconds to frequency in BPM;
#X obj 30 1481 conv.sec2samp;
#X text 200 1481 convert time in seconds to number of samples according
to current samplerate;
#X obj 30 1521 conv.sec2str;
#X text 200 1521 converts float time in seconds to formated symbol
(or string);
#X obj 30 1549 conv.semi2ratio;
#X text 200 1549 convert interval in semitones to frequency ratio in
12-ET;
#X obj 30 1577 conv.sig2float~;
#X text 200 1577 convert signal to floats;
#X obj 30 1605 conv.str2sec;
#X text 200 1605 converts formatted time to float value in seconds;
#X obj 30 1633 music.dur2time;
#X text 200 1633 convert duration list to time;
#X obj 30 1661 music.voice2midi;
#X text 200 1661 convert voice music list of midi pitches;
#X obj 1 1 cnv 5 740 40 empty empty ceammc::conv 20 20 0 20 -104026
-4096 0;
#X obj 1 1689 cnv 5 740 40 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 20 1699 library: ceammc;