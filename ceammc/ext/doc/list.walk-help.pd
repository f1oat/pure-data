#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 608 50 cnv 1 157 21 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 608 50 Walks thru the list;
#X obj 1 1 cnv 5 765 40 empty empty list.walk 20 20 0 20 -104026 -4096
0;
#X obj 675 11 list.walk;
#X obj 210 80 cnv 1 555 75 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 Universal list walker. If you want to output current
element and when move to next - use [1( message \, Otherwise - use
[next( if you want first move to next position and then output it.;
#X obj 50 183 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1;
#X obj 280 183 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1;
#X obj 50 212 metro 100;
#X msg 165 212 1 6 9 11;
#X msg 270 212 @direction \$1;
#X msg 184 241 @clip;
#X msg 290 241 @single;
#X msg 386 241 @loop;
#X msg 462 241 @fold;
#X msg 88 270 -1;
#X msg 213 270 1;
#X msg 482 270 prev;
#X msg 549 270 next;
#X obj 50 299 list.walk 1 3 6 8 @fold;
#X obj 50 327 + 60;
#X obj 50 356 mtof;
#X obj 50 385 osc~;
#X obj 50 414 *~ 0.1;
#X obj 50 443 dac~;
#X obj 20 482 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 487 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 522 1\.;
#X text 150 522 list;
#X obj 246 523 cnv 1 40 18 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 522 INIT: initial list.;
#X obj 20 550 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 555 cnv 5 98 26 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 590 @clip;
#X text 245 590 clipped pass mode. When the list bounds are reached -
min/max value repeats perpetually.;
#X msg 110 629 @direction;
#X text 245 629 Get/Set walking direction. "1" - forwards \, "0" -
backwards. Type: int. Default value: 1\. Allowed values: 0 \, 1\.;
#X msg 110 668 @fold;
#X text 245 668 fold pass mode. List values are repeated in a loop
with folding.;
#X msg 110 707 @index;
#X text 245 707 Get/Set current position. Type: int. Default value:
0\. Min value: 0\.;
#X msg 110 746 @length;
#X text 245 746 Get/Set output list length. Type: int. Default value:
1\. Min value: 1\.;
#X msg 110 785 @loop;
#X text 245 785 @wrap alias.;
#X msg 110 814 @mode;
#X text 245 814 Get/Set pass mode. See properties below for detailed
information. Type: symbol. Allowed values: single \, clip \, wrap \,
fold.;
#X msg 110 867 @single;
#X text 245 867 single pass mode. When the list bounds are reached -
no output any more until reset.;
#X msg 110 906 @value;
#X text 245 906 (readonly) Get current list. Type: list. Default
value: [].;
#X msg 110 935 @wrap;
#X text 245 935 wrap pass mode. List values are repeated in a loop.;
#X msg 110 964 @size;
#X text 245 964 (readonly) Get current list size. Type: int.;
#X obj 20 1003 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1008 cnv 5 73 26 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 1043 current;
#X text 245 1043 outputs current element.;
#X msg 110 1070 next;
#X text 245 1070 Arguments are:;
#X obj 255 1091 cnv 1 64 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1091 [STEP=1]: moves to next element with optional given
step and outputs it. Type: int.;
#X msg 110 1128 prev;
#X text 245 1128 Arguments are:;
#X obj 255 1149 cnv 1 64 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1149 [STEP=1]: moves to previous element with optional
given step and outputs it. Type: int.;
#X msg 110 1186 reset;
#X text 245 1186 sets current position to 0\.;
#X msg 110 1213 dump;
#X text 245 1213 dump internal object state to Pd console window.;
#X obj 20 1250 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1255 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1256 1\.;
#X text 150 1256 *bang*;
#X text 245 1256 outputs current element and moves to next.;
#X text 150 1274 *float*;
#X text 245 1274 outputs current element and moves by specified
position.;
#X obj 20 1302 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1307 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1308 1\.;
#X text 245 1308 list element.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title list @url ceammc.list-help.pd;
#X obj 1 1356 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1359 library: ceammc v0.7.1;
#X text 535 1371 see also:;
#X obj 611 1371 list.gen;
#X obj 683 1371 list.seq;
#N canvas 10 1378 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.7.1;
#X text 10 54 object:;
#X text 120 54 list.walk;
#X text 10 76 category:;
#X text 120 76 list;
#X text 10 98 since:;
#X text 120 98 0.1;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3;
#X text 10 164 keywords:;
#X text 120 164 list \, walk \, iterate;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1378 pd info;
#X connect 6 0 8 0;
#X connect 7 0 10 0;
#X connect 8 0 19 0;
#X connect 15 0 19 0;
#X connect 9 0 19 0;
#X connect 11 0 19 0;
#X connect 16 0 19 0;
#X connect 10 0 19 0;
#X connect 12 0 19 0;
#X connect 13 0 19 0;
#X connect 14 0 19 0;
#X connect 17 0 19 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 21 0;
#X connect 21 0 22 0;
#X connect 22 0 23 0;
#X connect 23 0 24 0;
#X connect 23 0 24 1;