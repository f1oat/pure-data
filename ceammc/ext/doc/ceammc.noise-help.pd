#N canvas 0 0 760 555 12;
#X obj 20 53 ui.link @title index @url ../index-help.pd;
#X text 62 50 ::;
#X obj 80 53 ui.link @title ceammc @url ceammc-help.pd;
#X obj 30 117 noise.baker;
#X text 200 117 Part of a-chaos library;
#X obj 30 145 noise.clifford;
#X text 200 145 clifford attractor;
#X obj 30 173 noise.collatz;
#X text 200 173 collatz conjecture output;
#X obj 30 201 noise.colored~;
#X text 200 201 colored noise generator with an arbitrary spectral
roll;
#X obj 30 229 noise.crackle~;
#X text 200 229 sparse noise generator;
#X obj 30 257 noise.duffing;
#X text 200 257 duffing attractor;
#X obj 30 285 noise.ginger;
#X text 200 285 Gingerbreadman map chaotic generator;
#X obj 30 313 noise.henon;
#X text 200 313 henon attractor;
#X obj 30 341 noise.henon_heilles;
#X text 200 341 Hénon–Heiles_system;
#X obj 30 369 noise.henon_phase;
#X text 200 369 henon phase Ddagrams;
#X obj 30 397 noise.henonf;
#X text 200 397 Henon phase;
#X obj 30 425 noise.ikeda;
#X text 200 425 Ikeda attractor;
#X obj 30 453 noise.lfreq0~;
#X text 200 453 sampled/held noise (piecewise constant);
#X obj 30 481 noise.lfreq~;
#X text 200 481 noise.lfreq0~ smoothed with no overshoot;
#X obj 30 509 noise.lorenz;
#X text 200 509 Lorenz chaos;
#X obj 30 537 noise.lyapunov;
#X text 200 537 lyapunov random attractor;
#X obj 30 565 noise.navier_stokes;
#X text 200 565 navier-stokes diff equations;
#X obj 30 593 noise.pink~;
#X text 200 593 Pink noise generator;
#X obj 30 621 noise.rossler;
#X text 200 621 Rössler attractor;
#X obj 30 649 noise.stein;
#X text 200 649 Stein distribution;
#X obj 30 677 noise.torus;
#X text 200 677 torus attractor;
#X obj 30 705 noise.verhulst;
#X text 200 705 verhulst distribution;
#X obj 30 733 noise.white~;
#X text 200 733 White noise generator;
#X obj 1 1 cnv 5 740 40 empty empty ceammc::noise 20 20 0 20 -104026
-4096 0;
#X obj 1 761 cnv 5 740 40 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 20 771 library: ceammc;