#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 468 50 cnv 1 297 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 468 50 JSON like structure for storing values;
#X obj 1 1 cnv 5 765 40 empty empty data.tree 20 20 0 20 -104026 -4096
0;
#X obj 674 11 data.tree;
#X msg 50 118 dict;
#X msg 222 118 at 1;
#X msg 338 118 set \, bang;
#X msg 491 118 set ("a":100) \, bang;
#X msg 50 147 dict a 1 b 2;
#X msg 222 147 key b;
#X msg 338 147 set 1 2 3 \, bang;
#X msg 549 147 set ["x"\ \,"y"] \, bang;
#X msg 50 176 list;
#X msg 338 176 set "a string" \, bang;
#X msg 50 205 list A B C 1 2 3;
#X msg 338 205 set A_STRING \, bang;
#X msg 50 234 bang;
#X msg 117 234 clear \, bang;
#X obj 50 262 data.tree ("a": 100\, "b": "A B C"\, "c": \[1\,2\,3\]\,
"d": ("key": "value"));
#X obj 50 320 ui.display @display_type 1 @size 150 18;
#X obj 20 360 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 365 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 400 1\.;
#X text 150 400 any;
#X obj 246 401 cnv 1 17 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 400 X: tree syntax: like JSON \, but with parenthesis instead
of curly braces.;
#X obj 20 445 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 450 cnv 5 98 26 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 485 @empty;
#X text 245 485 (readonly) Get 1 if tree is empty. Type: int. Allowed
values: 0 \, 1\.;
#X msg 110 527 @size;
#X text 245 527 (readonly) Get number of elements in tree. Type: int.
Min value: 0\.;
#X obj 20 579 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 584 cnv 5 73 26 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 619 at;
#X text 245 619 Arguments are:;
#X obj 255 642 cnv 1 39 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 642 [IDX]: key. Type: int. Min value: 0\.;
#X msg 110 667 clear;
#X text 245 667 removes tree content \, set string to empty string
\, list to empty list \, float to 0 \, dict to empty dict.;
#X msg 110 707 dict;
#X text 245 707 Arguments are:;
#X obj 255 730 cnv 1 39 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 730 [KEY]: key. Type: symbol.;
#X obj 255 753 cnv 1 39 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 753 [VAL]: value. Type: atom.;
#X msg 110 778 key;
#X text 245 778 Arguments are:;
#X obj 255 801 cnv 1 39 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 801 [KEY]: key. Type: symbol.;
#X msg 110 826 set_dict;
#X text 245 826 Arguments are:;
#X obj 255 849 cnv 1 39 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 849 [KEY]: key. Type: symbol.;
#X obj 255 872 cnv 1 39 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 872 [VAL]: value. Type: atom.;
#X msg 110 897 set_float;
#X text 245 897 Arguments are:;
#X obj 255 920 cnv 1 13 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 920 F: value. Type: float.;
#X msg 110 945 set_list;
#X text 245 945 Arguments are:;
#X obj 255 968 cnv 1 24 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 968 [V]: key. Type: atom.;
#X msg 110 993 set_symbol;
#X text 245 993 Arguments are:;
#X obj 255 1016 cnv 1 13 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1016 S: value. Type: symbol.;
#X obj 20 1051 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1056 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1057 1\.;
#X text 150 1057 *bang*;
#X text 245 1057 output tree.;
#X text 150 1077 *float*;
#X text 245 1077 set tree to float and output.;
#X text 150 1097 *symbol*;
#X text 245 1097 set tree to symbol and output \, no parsing performed.;
#X text 150 1117 *list*;
#X text 245 1117 set tree to list and output \, no parsing performed.;
#X text 150 1137 *data:mlist*;
#X text 245 1137 set new tree list content and output.;
#X text 150 1157 *data:tree*;
#X text 245 1157 set new tree content and output.;
#X obj 20 1187 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1192 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1193 1\.;
#X text 245 1193 tree output.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title data @url ceammc.data-help.pd;
#X obj 1 1243 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1246 library: ceammc v0.8.0;
#N canvas 10 1265 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.8.0;
#X text 10 54 object:;
#X text 120 54 data.tree;
#X text 10 76 category:;
#X text 120 76 data;
#X text 10 98 since:;
#X text 120 98 0.9;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 data \, tree \, json;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1265 pd info;
#X connect 16 0 18 0;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 4 0 18 0;
#X connect 8 0 18 0;
#X connect 12 0 18 0;
#X connect 14 0 18 0;
#X connect 5 0 18 0;
#X connect 9 0 18 0;
#X connect 6 0 18 0;
#X connect 10 0 18 0;
#X connect 13 0 18 0;
#X connect 15 0 18 0;
#X connect 7 0 18 0;
#X connect 11 0 18 0;