#N canvas 0 0 715 500 12;
#X obj 20 53 ui.link @title index @url ../index-help.pd;
#X text 62 50 ::;
#X obj 79 53 ui.link @title ceammc @url ceammc-help.pd;
#X obj 30 116 env.adsr~;
#X text 175 116 ADSR (Attack \, Decay \, Sustain \, Release) envelope
generator;
#X obj 30 143 env.ar~;
#X text 175 143 AR (Attack \, Release) envelope generator (useful to
create percussion envelopes).;
#X obj 30 180 env.asr~;
#X text 175 180 ASR (Attack \, Sustain \, Release) envelope generator;
#X obj 30 207 env.concat;
#X text 175 207 Envelope concatenation;
#X obj 30 234 env.follow~;
#X text 175 234 Envelope follower with independent attack and release
times.;
#X obj 30 271 env.mix;
#X text 175 271 Mix between two envelopes. Envelopes should contain
equal number of segments;
#X obj 30 308 env.smooth~;
#X text 175 308 An envelope with an exponential attack and release;
#X obj 30 335 env.tscale;
#X text 175 335 Envelope time-scale;
#X obj 30 362 env.tshift;
#X text 175 362 Envelope time-shift (horizontal);
#X obj 30 389 env.vscale;
#X text 175 389 Envelope value-scale;
#X obj 30 416 env2array;
#X text 175 416 Renders envelope to specified array;
#X obj 30 443 env2vline;
#X text 175 443 Converts envelope to bunch of vline messages;
#X obj 30 470 envelope;
#X text 175 470 Envelope data type;
#X obj 30 497 vline2env;
#X text 175 497 Converts vline messages to env;
#X obj 1 1 cnv 5 712 40 empty empty ceammc::env 20 20 0 20 -104026
-4096 0;
#X obj 1 524 cnv 5 712 40 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 20 534 library: ceammc;