#N canvas 0 0 760 555 12;
#X obj 20 53 ui.link @title index @url ../index-help.pd;
#X text 62 50 ::;
#X obj 79 53 ui.link @title ceammc @url ceammc-help.pd;
#X obj 30 116 array.bpm;
#X text 200 116 BPM calculator;
#X obj 30 143 array.copy;
#X text 200 143 copy samples from one array to another;
#X obj 30 170 array.do;
#X text 200 170 iterate and modify array content via side-chain;
#X obj 30 197 array.each;
#X text 200 197 process each array elements via side-chain;
#X obj 30 224 array.fill;
#X text 200 224 fill array with single value or pattern;
#X obj 30 251 array.hist;
#X text 200 251 calculates array histogram;
#X obj 30 278 array.mean;
#X text 200 278 calculates array arithmetic mean value;
#X obj 30 305 array.minmax;
#X text 200 305 find array min and max element value;
#X obj 30 332 array.rms;
#X text 200 332 calculates root mean square value for array;
#X obj 30 359 array.set;
#X text 200 359 set array content from list;
#X obj 30 386 array.stddev;
#X text 200 386 calculates standard deviation for array values;
#X obj 30 413 array.stretch;
#X text 200 413 array time-stretch \, pitch-shift or rate-change;
#X obj 30 440 array.sum;
#X text 200 440 calculates sum of array elements;
#X obj 30 467 array.sum2;
#X text 200 467 calculates sum of squares of array elements;
#X obj 30 494 array.variance;
#X text 200 494 calculates variance of array values;
#X obj 30 521 array.vplay;
#X text 200 521 simple array player for using with vline~;
#X obj 30 548 array.window;
#X text 200 548 fill array with window;
#X obj 1 1 cnv 5 740 40 empty empty ceammc::array 20 20 0 20 -104026
-4096 0;
#X obj 1 575 cnv 5 740 40 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 20 585 library: ceammc;