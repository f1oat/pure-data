#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 622 50 cnv 1 143 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 622 50 Envelope data type;
#X obj 1 1 cnv 5 765 40 empty empty envelope 20 20 0 20 -104026 -4096
0;
#X obj 635 11 env;
#X obj 682 11 envelope;
#X obj 210 80 cnv 1 555 190 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 Data type for sound envelope. Contains points specified
by time and value. Points could have stop property - to execute oly
part of envelope and stop on this point. So multisegment envelopes
could be created;
#X text 215 150 Point also has segment type property \, that defines
following segment curve - it could be *step* \, *line* (default) or
*exp* (exponential);
#X text 215 205 Exponential segment also has curve property: if 0 -
(linear) <0 (concave \, negatively curved) >0 (convex \, positively
curved);
#X msg 50 298 ar 100 200 \, bang;
#X msg 232 298 exp 0 30 -2 1 100 -4 0 40 4 0.5 30 2 0 \, bang;
#X msg 69 327 adsr 10 30 60 150 \, bang;
#X msg 318 327 line 0.1 40 0.9 20 0.3 60 0 \, bang;
#X msg 88 356 ear 10 -2 60 -2 \, bang;
#X msg 318 356 sigmoid 0 40 14 1 100 8 0 \, bang;
#X msg 107 385 eadsr 20 -5 70 -12 30 100 -7 \, bang;
#X msg 462 385 sin2 0 80 1 80 0 \, bang;
#X obj 50 414 env;
#X obj 50 442 env->array env_arr;
#N canvas 0 22 450 300 (subpatch) 0;
#X array env_arr 100 float 0;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 100 0 400 100 1;
#X restore 50 485 graph;
#X obj 20 607 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 612 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 647 1\.;
#X text 150 647 list;
#X obj 246 648 cnv 1 39 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 647 adsr: ADSR envelope: attack(ms) \, decay(ms) \, sustain(%)
\, release(ms).;
#X text 110 682 2\.;
#X text 150 682 list;
#X obj 246 683 cnv 1 31 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 682 asr: ASR envelope: attack(ms) \, release(ms) - with
sustain stop point.;
#X text 110 717 3\.;
#X text 150 717 list;
#X obj 246 718 cnv 1 24 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 717 ar: AR envelope: attack(ms) \, release(ms).;
#X text 110 737 4\.;
#X text 150 737 list;
#X obj 246 738 cnv 1 47 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 737 eadsr: exponential ADSR envelope: attack(ms) \, attack_curve
\, decay(ms) \, decay_curve \, sustain(%) \, release(ms) \, release_curve.;
#X text 110 787 5\.;
#X text 150 787 list;
#X obj 246 788 cnv 1 39 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 787 easr: exponential ASR envelope: attack(ms) \, attack_curve
\, release(ms) \, release_curve - with sustain stop point.;
#X text 110 822 6\.;
#X text 150 822 list;
#X obj 246 823 cnv 1 31 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 822 ear: exponential ASR envelope: attack(ms) \, attack_curve
\, release(ms) \, release_curve - no sustain point.;
#X obj 20 867 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 872 cnv 5 98 26 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 907 @length;
#X text 245 907 (readonly) Get total envelope time length (ms). Type:
float.;
#X msg 110 936 @npoints;
#X text 245 936 (readonly) Get number of points. Type: int. Min value:
0\.;
#X msg 110 965 @points;
#X text 245 965 (readonly) Get list of point times (ms). Type: list.;
#X msg 110 994 @stops;
#X text 245 994 (readonly) Get list of stop points. Type: list.;
#X msg 110 1023 @values;
#X text 245 1023 (readonly) Get list of point values. Type: list.;
#X obj 20 1062 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1067 cnv 5 73 26 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 1102 add_point;
#X text 245 1102 add envelope point. Arguments are:;
#X obj 255 1125 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1125 MS: point time. Type: float. Min value: 0\.;
#X obj 255 1148 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1148 VALUE: point value. Type: float.;
#X obj 255 1171 cnv 1 85 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1171 [IS_STOP=0]: is stop point. Type: int. Allowed values:
0 \, 1\.;
#X obj 255 1194 cnv 1 85 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1194 [TYPE=line]: segment type: step \, linear \, exponential
\, sin^2 or sigmoid curve. Type: symbol. Allowed values: step \, line
\, exp \, sin2 \, sigmoid.;
#X obj 255 1247 cnv 1 70 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1247 [CURVE=1]: exponential curve degree: 0 (linear) <0
(concave \, negatively curved) >0 (convex \, positively curved). Type:
float.;
#X msg 110 1302 add_seg;
#X text 245 1302 add segment to the end of envelope. On empty envelope
adds start point at 0ms and 0 value. Arguments are:;
#X obj 255 1340 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1340 TYPE: segment type. Type: symbol. Allowed values:
step \, line \, sin2 \, exp \, sigmoid.;
#X obj 255 1378 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1378 MS: segment length. Type: float.;
#X obj 255 1401 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1401 VALUE: end segment value. Type: float.;
#X obj 255 1424 cnv 1 70 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1424 [CURVE=0]: curve (for exp and sigmoid type). Type:
float.;
#X msg 110 1449 adsr;
#X text 245 1449 creates ADSR envelope with one stop point. Arguments
are:;
#X obj 255 1472 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1472 MS: attack time. Type: float. Min value: 0\.;
#X obj 255 1495 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1495 MS: decay time. Type: float. Min value: 0\.;
#X obj 255 1518 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1518 %: sustain level. Type: float. Range: 0\...100\.;
#X obj 255 1541 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1541 MS: release time. Type: float. Min value: 0\.;
#X msg 110 1566 ar;
#X text 245 1566 creates AR envelope without stop points. Arguments
are:;
#X obj 255 1589 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1589 MS: attack time. Type: float. Min value: 0\.;
#X obj 255 1612 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1612 MS: release time. Type: float. Min value: 0\.;
#X msg 110 1637 asr;
#X text 245 1637 creates ASR envelope with one stop point. Arguments
are:;
#X obj 255 1660 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1660 MS: attack time. Type: float. Min value: 0\.;
#X obj 255 1683 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1683 MS: release time. Type: float. Min value: 0\.;
#X msg 110 1708 clear;
#X text 245 1708 remove all envelope points.;
#X msg 110 1735 eadsr;
#X text 245 1735 creates exponential ADSR envelope with one stop point.
Arguments are:;
#X obj 255 1773 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1773 MS: attack time. Type: float. Min value: 0\.;
#X obj 255 1796 cnv 1 98 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1796 ATTACK_CURVE: attack segment curve. Type: float.;
#X obj 255 1819 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1819 MS: decay time. Type: float. Min value: 0\.;
#X obj 255 1842 cnv 1 90 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1842 DECAY_CURVE: decay segment curve. Type: float.;
#X obj 255 1865 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1865 %: sustain level. Type: float. Range: 0\...100\.;
#X obj 255 1888 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1888 MS: release time. Type: float. Min value: 0\.;
#X obj 255 1911 cnv 1 105 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1911 RELEASE_CURVE: release segment curve. Type: float.;
#X msg 110 1936 ear;
#X text 245 1936 creates exponential AR envelope without stop points.
Arguments are:;
#X obj 255 1974 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1974 MS: attack time. Type: float.;
#X obj 255 1997 cnv 1 98 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1997 ATTACK_CURVE: attack segment curve. Type: float.;
#X obj 255 2020 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2020 MS: release time. Type: float.;
#X obj 255 2043 cnv 1 105 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2043 RELEASE_CURVE: release segment curve. Type: float.;
#X msg 110 2068 easr;
#X text 245 2068 creates exponential AR envelope with one stop point.
Arguments are:;
#X obj 255 2106 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2106 MS: attack time. Type: float. Min value: 0\.;
#X obj 255 2129 cnv 1 98 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2129 ATTACK_CURVE: attack segment curve. Type: float.;
#X obj 255 2152 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2152 MS: release time. Type: float. Min value: 0\.;
#X obj 255 2175 cnv 1 105 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2175 RELEASE_CURVE: release segment curve. Type: float.;
#X msg 110 2200 exp;
#X text 245 2200 creates exponential-segmented envelope with arbitrary
number of segments. Arguments are:;
#X obj 255 2238 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2238 VAL0: begin value. Type: float.;
#X obj 255 2261 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2261 MS: line length. Type: float. Min value: 1\.;
#X obj 255 2284 cnv 1 52 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2284 CURVE0: segment curve. Type: float.;
#X obj 255 2307 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2307 VAL1: value. Type: float.;
#X obj 255 2330 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2330 [LEN1]: segment length. Type: float.;
#X obj 255 2353 cnv 1 62 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2353 [CURVE1]: segment curve. Type: float.;
#X obj 255 2376 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2376 [VAL2]: value. Type: float.;
#X msg 110 2401 line;
#X text 245 2401 creates line-segmented envelope with arbitrary number
of segments. Arguments are:;
#X obj 255 2439 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2439 VAL0: begin value. Type: float.;
#X obj 255 2462 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2462 MS: line length. Type: float. Min value: 1\.;
#X obj 255 2485 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2485 VAL1: value. Type: float.;
#X obj 255 2508 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2508 [LEN1]: segment length. Type: float.;
#X obj 255 2531 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2531 [VAL2]: value. Type: float.;
#X msg 110 2556 remove_point;
#X text 245 2556 remove envelope point by specified time. Arguments
are:;
#X obj 255 2579 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2579 IDX: point index. Type: int. Min value: 0\.;
#X msg 110 2604 set_point;
#X text 245 2604 set point time and value. Arguments are:;
#X obj 255 2627 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2627 IDX: point index. Type: int. Min value: 0\.;
#X obj 255 2650 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2650 MS: point time. Type: float. Min value: 0\.;
#X obj 255 2673 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2673 VALUE: point value. Type: int. Min value: 0\.;
#X obj 255 2696 cnv 1 85 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2696 [IS_STOP=0]: stop point. Type: int. Allowed values:
0 \, 1\.;
#X msg 110 2721 set_point_time;
#X text 245 2721 set point time. Arguments are:;
#X obj 255 2744 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2744 IDX: point index. Type: int. Min value: 0\.;
#X obj 255 2767 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2767 MS: point time. Type: float. Min value: 0\.;
#X msg 110 2792 set_point_value;
#X text 245 2792 set point time. Arguments are:;
#X obj 255 2815 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2815 IDX: point index. Type: int. Min value: 0\.;
#X obj 255 2838 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2838 VALUE: point value. Type: int. Min value: 0\.;
#X msg 110 2863 set_seg_type;
#X text 245 2863 set segment type. Arguments are:;
#X obj 255 2886 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2886 IDX: segment index \, starting from 0\. Type: int.
Min value: 0\.;
#X obj 255 2924 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2924 TYPE: segment type. Type: symbol. Allowed values:
step \, line \, sin2 \, exp \, sigmoid.;
#X msg 110 2964 set_stop_point;
#X text 245 2964 set stop-point. Arguments are:;
#X obj 255 2987 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2987 IDX: point index. Type: int. Min value: 0\.;
#X obj 255 3010 cnv 1 59 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3010 IS_STOP: stop point. Type: int. Allowed values: 0
\, 1\.;
#X msg 110 3035 sigmoid;
#X text 245 3035 creates sigmoid-segmented envelope with arbitrary
number of segments. Arguments are:;
#X obj 255 3073 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3073 VAL0: begin value. Type: float.;
#X obj 255 3096 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3096 MS: line length. Type: float. Min value: 1\.;
#X obj 255 3119 cnv 1 52 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3119 CURVE0: segment curve. Type: float.;
#X obj 255 3142 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3142 VAL1: value. Type: float.;
#X obj 255 3165 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3165 [LEN1]: segment length. Type: float.;
#X obj 255 3188 cnv 1 62 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3188 [CURVE1]: segment curve. Type: float.;
#X obj 255 3211 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3211 [VAL2]: value. Type: float.;
#X msg 110 3236 sin2;
#X text 245 3236 creates quadratic sine-segmented envelope with arbitrary
number of segments. Arguments are:;
#X obj 255 3274 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3274 VAL0: begin value. Type: float.;
#X obj 255 3297 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3297 MS: line length. Type: float. Min value: 1\.;
#X obj 255 3320 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3320 VAL1: value. Type: float.;
#X obj 255 3343 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3343 [LEN1]: segment length. Type: float.;
#X obj 255 3366 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3366 [VAL2]: value. Type: float.;
#X msg 110 3391 step;
#X text 245 3391 creates step-segmented envelope with arbitrary number
of segments. Arguments are:;
#X obj 255 3429 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3429 VAL0: begin value. Type: float.;
#X obj 255 3452 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3452 MS: step length. Type: float. Min value: 1\.;
#X obj 255 3475 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3475 VAL1: value. Type: float.;
#X obj 255 3498 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3498 [LEN1]: segment length. Type: float.;
#X obj 255 3521 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3521 [VAL2]: value. Type: float.;
#X msg 110 3546 *;
#X text 245 3546 multiply all envelope points to specified value. Arguments
are:;
#X obj 255 3584 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3584 VALUE: value. Type: float.;
#X msg 110 3609 +;
#X text 245 3609 add specified value to all envelope points. Arguments
are:;
#X obj 255 3632 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3632 VALUE: value. Type: float.;
#X msg 110 3657 >>;
#X text 245 3657 shift all envelope point by specified time in milliseconds.
Arguments are:;
#X obj 255 3695 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3695 MS: value. Type: float.;
#X obj 20 3730 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 3735 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 3736 1\.;
#X text 150 3736 *bang*;
#X text 245 3736 outputs current envelope.;
#X text 150 3756 *data*;
#X text 245 3756 set new envelope and output it.;
#X obj 20 3786 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 3791 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 3792 1\.;
#X text 245 3792 data output.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title env @url ceammc.env-help.pd;
#X obj 1 3842 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 3845 library: ceammc v0.8.0;
#X text 505 3857 see also:;
#X obj 579 3857 env->array;
#X obj 667 3857 env->vline;
#N canvas 10 3864 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.8.0;
#X text 10 54 object:;
#X text 120 54 envelope;
#X text 10 76 category:;
#X text 120 76 env;
#X text 10 98 since:;
#X text 120 98 0.5;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 envelope;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 3864 pd info;
#X connect 9 0 17 0;
#X connect 11 0 17 0;
#X connect 13 0 17 0;
#X connect 15 0 17 0;
#X connect 17 0 18 0;
#X connect 10 0 17 0;
#X connect 12 0 17 0;
#X connect 14 0 17 0;
#X connect 16 0 17 0;