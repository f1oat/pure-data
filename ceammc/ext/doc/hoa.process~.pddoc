<?xml version="1.0" encoding="utf-8"?>
<pddoc version="1.0">
    <object name="hoa.process~">
        <title>hoa.process~</title>
        <meta>
            <authors>
                <author>Serge Poltavsky</author>
                <author>Pierre Guillot</author>
                <author>Eliott Paris</author>
                <author>Thomas Le Meur</author>
            </authors>
            <description>patcher loader for multichannel processing</description>
            <license>GPL3</license>
            <library>ceammc</library>
            <category>spat</category>
            <keywords>hoa process 2d</keywords>
            <since>0.8</since>
            <also>
                <see>hoa.2d.decoder~</see>
            </also>
        </meta>
        <info>
            <par>hoa.process~ helps the modularization of patches for ambisonic or plane waves
            processing.</par>
            <par>hoa.process~ is a kind of poly~ object particulary suitable for multichannel
            ambisonic or plane wave processing. Create a patch/effect/operator, then parallelize it
            with the hoa.process~</par>
            <a href="hoa/hoa.2d.process~-help.pd">CICM documentation</a>
        </info>
        <arguments>
            <argument name="ORDER" type="int" minvalue="1" maxvalue="63">the order of
            decomposition</argument>
            <argument name="PNAME" type="symbol">patch name</argument>
        </arguments>
        <properties>
            <property name="@order" type="int" minvalue="1" maxvalue="63" default="1"
            readonly="true">the order of decomposition</property>
            <property name="@nwaves" type="int" minvalue="1" readonly="true" default="7">number of
            plain waves.</property>
            <property name="@domain" type="symbol" readonly="true" default="harmonic" enum="harmonics plainwaves">
            process domain: harmonics or plainwaves.</property>
        </properties>
        <inlets dynamic="true">
            <inlet type="audio">
                <xinfo>first input harmonic</xinfo>
            </inlet>
            <inlet type="audio" number="...">
                <xinfo>... input harmonic</xinfo>
            </inlet>
            <inlet type="audio" number="n">
                <xinfo>n-th input harmonic</xinfo>
            </inlet>
        </inlets>
        <outlets dynamic="true">
            <outlet type="audio">first harmonic output</outlet>
            <outlet type="audio" number="...">... harmonic output</outlet>
            <outlet type="audio" number="n">n-th harmonic output</outlet>
        </outlets>
        <example>
            <pdascii>
<![CDATA[
[hoa/hoa.soundrone]     [phasor~ 0.15]
|                       |
[ui.gain~ @size 120 14] [phase->rad~] [ui.menu basic maxre inphase]
|                       |.            |
[hoa.encoder~ 5 {w=25,i=11,o=11}]     [@mode $2(
*|*                                   |
[hoa.optim~ 5 inphase {w=25,i=11,o=11}]
*|* *|*
*|* [hoa.scope~ 5 @gain 4 {i=11} @size 164 164]
*|*
*|*
*|*
*|*
*|*
*|*
*|*
*|*
*|*
*|*
*|*
[hoa.decoder~ 5 regular 11 {w=25,i=11,o=11}]
*|*
[xdac~ 1:11 {w=25,i=11}]

[ui.dsp~]
]]>
            </pdascii>
        </example>
    </object>
</pddoc>
