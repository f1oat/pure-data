#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 521 50 cnv 1 244 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 521 50 numeric sequence list generator;
#X obj 1 1 cnv 5 765 40 empty empty list.seq 20 20 0 20 -104026 -4096
0;
#X obj 682 11 list.seq;
#X obj 50 118 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 194 118 1 -1 0.1;
#X msg 126 133 2 10;
#X floatatom 78 147 5 0 0 0 - - -;
#X obj 50 176 list.seq 3 10 2;
#X obj 50 205 m set;
#X msg 50 234 ;
#X obj 20 284 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 289 cnv 5 90 25 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 324 1\.;
#X text 150 324 float;
#X obj 246 325 cnv 1 39 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 324 FROM: start value. Type: float.;
#X text 110 344 2\.;
#X text 150 344 float;
#X obj 246 345 cnv 1 25 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 344 TO: end value. Type: float.;
#X text 110 364 3\.;
#X text 150 364 float;
#X obj 246 365 cnv 1 39 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 364 STEP: sequence step. Type: float.;
#X obj 20 394 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 399 cnv 5 98 25 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 434 @closed;
#X text 245 434 generate closed range sequence. Default value: 0\.;
#X msg 110 464 @from;
#X text 245 464 Get/Set start value. Type: float. Default value: 0\.;
#X msg 110 494 @step;
#X text 245 494 Get/Set sequence step (always positive). Type: float.
Default value: 1\.;
#X msg 110 536 @to;
#X text 245 536 Get/Set end value. Type: float. Default value: 1\.;
#X obj 20 576 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 581 cnv 5 64 25 empty empty inlets: 4 10 0 14 -262144 -49933
0;
#X text 110 582 1\.;
#X text 150 582 *bang*;
#X text 245 582 outputs generated list.;
#X text 150 602 *float*;
#X text 245 602 sets @from=0 \, @to=X and outputs generated sequence.;
#X text 150 622 *list*;
#X text 245 622 if 3 arguments are given: they are set to @from \,
@to and @step accordingly. If 2 args are given: they are set to @from
\, @to and @step is set to *1*. If 1 arg given \, @from is set to 0
\, @to sets to given value and @step is set to *1*.;
#X obj 20 697 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 702 cnv 5 73 25 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 703 1\.;
#X text 245 703 generated sequence.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 68 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 116 45 ::;
#X obj 133 48 ui.link @title list @url ceammc.list-help.pd;
#X obj 1 753 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 756 library: ceammc v0.9.7;
#X text 607 768 see also:;
#X obj 682 768 list.gen;
#N canvas 10 775 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.7;
#X text 10 54 object:;
#X text 120 54 list.seq;
#X text 10 76 category:;
#X text 120 76 list;
#X text 10 98 since:;
#X text 120 98 0.1;
#X text 10 120 authors:;
#X text 120 120 Alex Nadzharov \, Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 list \, sequence \, generate;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pd-ceammc @url
https://github.com/uliss/pd-ceammc;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 775 pd info;
#X connect 4 0 8 0;
#X connect 7 0 8 0;
#X connect 6 0 8 0;
#X connect 5 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;