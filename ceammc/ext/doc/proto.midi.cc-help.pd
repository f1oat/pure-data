#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 561 50 cnv 1 204 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 561 50 raw midi CC encoder/parser;
#X obj 1 1 cnv 5 765 40 empty empty proto.midi.cc 20 20 0 20 -104026
-4096 0;
#X obj 646 11 proto.midi.cc;
#X obj 50 118 proto.midi.cc.pan;
#X obj 50 147 proto.midi.cc.vol;
#X obj 20 197 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 202 cnv 5 98 25 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 237 @list;
#X text 245 237 output as list.;
#X obj 20 277 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 282 cnv 5 73 25 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 317 bank;
#X text 245 317 send CC Bank Select. Arguments are:;
#X obj 255 340 cnv 1 32 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 340 [CH]: midi channel. Type: int. Range: 0...15.;
#X obj 255 363 cnv 1 38 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 363 BANK: bank. Type: int. Range: 0...16384.;
#X msg 110 388 bank:i;
#X text 245 388 same as [bank(.;
#X msg 110 416 bank:lsb;
#X text 245 416 send CC Bank Select LSB. Arguments are:;
#X obj 255 439 cnv 1 32 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 439 [CH]: midi channel. Type: int. Range: 0...15.;
#X obj 255 462 cnv 1 38 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 462 BANK: bank LSB. Type: int. Range: 0...127.;
#X msg 110 487 bank:msb;
#X text 245 487 send CC Bank Select MSB. Arguments are:;
#X obj 255 510 cnv 1 32 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 510 [CH]: midi channel. Type: int. Range: 0...15.;
#X obj 255 533 cnv 1 38 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 533 BANK: bank MSB. Type: int. Range: 0...127.;
#X msg 110 558 bendsens;
#X text 245 558 send Pitch bend sensitivity message. Arguments are:;
#X obj 255 581 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 581 CH: midi channel. Type: int. Min value: 0.;
#X msg 110 606 exp.;
#X text 245 606 send fine CC Expression message. Arguments are:;
#X obj 255 629 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 629 CHAN: midi channel. Type: int. Range: 0...15.;
#X obj 255 652 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 652 VAL: expression value. Type: int. Range: 0...127.;
#X msg 110 677 exp:f;
#X text 245 677 send CC normalized Expression message. Arguments are:;
#X obj 255 700 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 700 CHAN: midi channel. Type: int. Range: 0...15.;
#X obj 255 723 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 723 VAL: expression value. Type: float. Range: 0...1.;
#X msg 110 748 exp:i;
#X text 245 748 send 14-bit CC Expression message. Arguments are:;
#X obj 255 771 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 771 CHAN: midi channel. Type: int. Range: 0...15.;
#X obj 255 794 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 794 VAL: expression. Type: int. Range: 0...16384.;
#X msg 110 819 exp~;
#X text 245 819 send coarse CC Expression message. Arguments are:;
#X obj 255 842 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 842 CHAN: midi channel. Type: int. Range: 0...15.;
#X obj 255 865 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 865 VAL: expression value. Type: int. Range: 0...127.;
#X msg 110 890 hold;
#X text 245 890 send CC Hold pedal message. Arguments are:;
#X obj 255 913 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 913 [CHAN]: midi channel. Type: int. Range: 0...15.;
#X obj 255 936 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 936 BOOL: on/off value. Type: int. Allowed values: 0 \,
1.;
#X msg 110 961 mod.;
#X text 245 961 send fine CC Modulation message. Arguments are:;
#X obj 255 984 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 984 CHAN: midi channel. Type: int. Range: 0...15.;
#X obj 255 1007 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1007 VAL: modulation value. Type: int. Range: 0...127.;
#X msg 110 1032 mod:f;
#X text 245 1032 send CC normalized Modulation message. Arguments are:;
#X obj 255 1055 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1055 CHAN: midi channel. Type: int. Range: 0...15.;
#X obj 255 1078 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1078 VAL: modulation value. Type: float. Range: 0...1.;
#X msg 110 1103 mod:i;
#X text 245 1103 send 14-bit CC Modulation message. Arguments are:;
#X obj 255 1126 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1126 CHAN: midi channel. Type: int. Range: 0...15.;
#X obj 255 1149 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1149 VAL: modulation. Type: int. Range: 0...16384.;
#X msg 110 1174 mod~;
#X text 245 1174 send coarse CC Modulation message. Arguments are:;
#X obj 255 1197 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1197 CHAN: midi channel. Type: int. Range: 0...15.;
#X obj 255 1220 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1220 VAL: modulation value. Type: int. Range: 0...127.;
#X msg 110 1245 notes_off;
#X text 245 1245 send All Notes Off message. Arguments are:;
#X obj 255 1268 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1268 CH: midi channel. if missing or -1: send to all channels.
Type: int. Range: 0...15.;
#X msg 110 1308 pan.;
#X text 245 1308 send Pan CC fine message. Arguments are:;
#X obj 255 1331 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1331 CHAN: midi channel. Type: int. Range: 0...15.;
#X obj 255 1354 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1354 PAN: pan value. Type: int. Range: 0...127.;
#X msg 110 1379 pan:f;
#X text 245 1379 send CC Pan messages (coarse and fine). Arguments
are:;
#X obj 255 1402 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1402 CHAN: midi channel. Type: int. Range: 0...15.;
#X obj 255 1425 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1425 PAN: pan value. -1 means left \, 0: center \, +1:
right. Type: float. Range: -1...1.;
#X msg 110 1465 pan:i;
#X text 245 1465 send Pan CC message. Args: CHAN PAN(0..0x3fff) or
CHAN MSB(0..127) LSB(0..127). In case of 14 bit value 0 means left
\, 0x2000: center and 0x3fff: right.;
#X msg 110 1520 panic;
#X text 245 1520 send All Notes Off message. Arguments are:;
#X obj 255 1543 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1543 CH: midi channel. if missing or -1: send to all channels.
Type: int. Range: 0...15.;
#X msg 110 1583 pan~;
#X text 245 1583 send Pan CC coarse message. Arguments are:;
#X obj 255 1606 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1606 CHAN: midi channel. Type: int. Range: 0...15.;
#X obj 255 1629 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1629 PAN: pan value. Type: int. Range: 0...127.;
#X msg 110 1654 portamento;
#X text 245 1654 send CC portamento message. Arguments are:;
#X obj 255 1677 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1677 [CHAN]: midi channel. Type: int. Range: 0...15.;
#X obj 255 1700 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1700 VALUE: portamento amount. Type: int. Range: 0...127.;
#X msg 110 1725 portswitch;
#X text 245 1725 send CC portamento switch message. Arguments are:;
#X obj 255 1748 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1748 [CHAN]: midi channel. Type: int. Range: 0...15.;
#X obj 255 1771 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1771 BOOL: on/off value. Type: int. Allowed values: 0 \,
1.;
#X msg 110 1796 sostenuto;
#X text 245 1796 send CC sostenuto pedal message. Arguments are:;
#X obj 255 1819 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1819 [CHAN]: midi channel. Type: int. Range: 0...15.;
#X obj 255 1842 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1842 BOOL: on/off value. Type: int. Allowed values: 0 \,
1.;
#X msg 110 1867 sound_off;
#X text 245 1867 send All Sound Off message. Arguments are:;
#X obj 255 1890 cnv 1 32 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1890 [CH]: midi channel. if missing or -1: send to all
channels. Type: int. Range: 0...15.;
#X msg 110 1930 tune.;
#X text 245 1930 send RPN fine tuning request (in cents). Arguments
are:;
#X obj 255 1953 cnv 1 32 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1953 [CH]: midi channel. Type: int. Range: 0...15.;
#X obj 255 1976 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1976 CENTS: tuning in cents. Type: float. Range: -100...100.;
#X msg 110 2001 tune:c;
#X text 245 2001 send RPN fine tuning request (in cents). Arguments
are:;
#X obj 255 2024 cnv 1 32 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2024 [CH]: midi channel. Type: int. Range: 0...15.;
#X obj 255 2047 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2047 CENTS: tuning in cents. Type: float. Range: -100...100.;
#X msg 110 2072 tune:s;
#X text 245 2072 send RPN tuning request in semitones. Arguments are:;
#X obj 255 2095 cnv 1 32 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2095 [CH]: midi channel. Type: int. Range: 0...15.;
#X obj 255 2118 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2118 SEMI: tuning in semitones. Type: float. Range: -64...63.;
#X msg 110 2143 tunebank;
#X text 245 2143 send RPN tune bank select. Arguments are:;
#X obj 255 2166 cnv 1 32 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2166 [CH]: midi channel. Type: int. Range: 0...15.;
#X obj 255 2189 cnv 1 38 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2189 BANK: tuning bank. Type: int. Range: 0...127.;
#X msg 110 2214 tuneprog;
#X text 245 2214 send RPN tune prog change. Arguments are:;
#X obj 255 2237 cnv 1 32 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2237 [CH]: midi channel. Type: int. Range: 0...15.;
#X obj 255 2260 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2260 PROG: tuning program. Type: int. Range: 0...127.;
#X msg 110 2285 tunesel;
#X text 245 2285 send RPN tune select. Arguments are:;
#X obj 255 2308 cnv 1 32 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2308 [CH]: midi channel. Type: int. Range: 0...15.;
#X obj 255 2331 cnv 1 38 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2331 BANK: tuning bank. Type: int. Range: 0...127.;
#X obj 255 2354 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2354 PROG: tuning program. Type: int. Range: 0...127.;
#X msg 110 2379 tune~;
#X text 245 2379 send RPN coarse tuning request (in semitones). Arguments
are:;
#X obj 255 2402 cnv 1 32 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2402 [CH]: midi channel. Type: int. Range: 0...15.;
#X obj 255 2425 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2425 SEMI: tuning in semitones. Type: int. Range: -64...63.;
#X msg 110 2450 volume.;
#X text 245 2450 send fine CC Volume message. Arguments are:;
#X obj 255 2473 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2473 CHAN: midi channel. Type: int. Range: 0...15.;
#X obj 255 2496 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2496 VOL: pan value. Type: int. Range: 0...127.;
#X msg 110 2521 volume:f;
#X text 245 2521 send CC normalized Volume message. Arguments are:;
#X obj 255 2544 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2544 CHAN: midi channel. Type: int. Range: 0...15.;
#X obj 255 2567 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2567 VOL: volume value. Type: float. Range: 0...1.;
#X msg 110 2592 volume:i;
#X text 245 2592 send 14-bit CC Volume message. Arguments are:;
#X obj 255 2615 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2615 CHAN: midi channel. Type: int. Range: 0...15.;
#X obj 255 2638 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2638 VOL: value. Type: int. Range: 0...16384.;
#X msg 110 2663 volume~;
#X text 245 2663 send coarse CC Volume message. Arguments are:;
#X obj 255 2686 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2686 CHAN: midi channel. Type: int. Range: 0...15.;
#X obj 255 2709 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2709 VOL: pan value. Type: int. Range: 0...127.;
#X obj 20 2744 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 2749 cnv 5 64 25 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 2750 1.;
#X text 150 2750 *float*;
#X text 245 2750 raw midi input bytes.;
#X text 150 2770 *list*;
#X text 245 2770 raw midi input bytes.;
#X obj 20 2800 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 2805 cnv 5 73 25 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 2806 1.;
#X text 245 2806 float: raw midi output or parsed messages with selector
(output format is the same as for corresponding methods).;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 68 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 116 45 ::;
#X obj 133 48 ui.link @title proto @url ceammc.proto-help.pd;
#X obj 1 2871 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 2874 library: ceammc v0.9.7;
#N canvas 10 2893 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.7;
#X text 10 54 object:;
#X text 120 54 proto.midi.cc;
#X text 10 76 category:;
#X text 120 76 proto;
#X text 10 98 since:;
#X text 120 98 0.9.4;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 parser \, midi;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pd-ceammc @url
https://github.com/uliss/pd-ceammc;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 2893 pd info;