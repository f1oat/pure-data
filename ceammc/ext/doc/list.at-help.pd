#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 409 50 cnv 1 356 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 409 50 outputs list element(s) at specified index(es);
#X obj 1 1 cnv 5 765 40 empty empty list.at 20 20 0 20 -104026 -4096
0;
#X obj 690 11 list.at;
#X obj 210 80 cnv 1 555 185 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 Returns the element at the given index position in the
list.;
#X text 215 105 @rel property allows to acess elements in range (-LIST_SIZE
\, LIST_SIZE). Negative index means position from the end of the list.
For example: -1 returns last element.;
#X text 215 160 @clip property: if element index < 0 - first element
returned. If element index >= LIST_SIZE last element returned.;
#X text 215 215 @wrap property: in range [0 \, LIST_SIZE) ordinal elements
are returned. Other indexes are wrapped by modulo division.;
#X msg 50 293 1 2 3 4 5;
#X floatatom 165 293 5 0 0 0 - - -;
#X msg 213 293 1 2 3 4 5;
#X floatatom 328 293 5 0 0 0 - - -;
#X obj 50 322 list.at -1;
#X obj 213 322 list.at @clip;
#X floatatom 50 351 5 0 0 0 - - -;
#X floatatom 213 351 5 0 0 0 - - -;
#X msg 50 394 1 2 3 4 5;
#X floatatom 165 394 5 0 0 0 - - -;
#X msg 213 394 1 2 3 4 5;
#X floatatom 328 394 5 0 0 0 - - -;
#X obj 50 423 list.at @wrap;
#X obj 213 423 list.at @fold;
#X floatatom 50 452 5 0 0 0 - - -;
#X floatatom 213 452 5 0 0 0 - - -;
#X msg 50 480 list A B C D E;
#X obj 50 509 list.at -1 1 3;
#X obj 50 538 msg set;
#X msg 50 567 ;
#X obj 20 616 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 621 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 656 1\.;
#X text 150 656 list;
#X obj 246 657 cnv 1 69 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 656 position: single or multiple elements position.;
#X obj 20 686 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 691 cnv 5 98 26 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 726 @clip;
#X text 245 726 alias to @method clip. If index < 0 - return first
element. If index greater or equal list size - return last element.;
#X msg 110 768 @default;
#X text 245 768 Get/Set default output value if not found. If not set
\, outputs error message to console. Type: atom.;
#X msg 110 810 @fold;
#X text 245 810 alias to @method fold. In range [0 \, LIST_SIZE) ordinal
elements are returned. [LIST_SIZE \, 2*LIST_SIZE) - returned in negative
order etc.;
#X msg 110 867 @index;
#X text 245 867 Get/Set indexes. Type: list. Default value: 0\.;
#X msg 110 896 @method;
#X text 245 896 Get/Set methods of processing of negative/invalid indexes.
Type: symbol. Default value: rel. Allowed values: rel \, clip \, fold
\, wrap.;
#X msg 110 953 @rel;
#X text 245 953 alias to @method rel. Negative index means position
from the end of the list.;
#X msg 110 995 @wrap;
#X text 245 995 alias to @method wrap. In range [0 \, LIST_SIZE) ordinal
elements are returned. Other indexes are wrapped by modulo division.;
#X obj 20 1062 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1067 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1068 1\.;
#X text 150 1068 *list*;
#X text 245 1068 input list.;
#X text 150 1088 *data:mlist*;
#X text 245 1088 input mlist.;
#X text 110 1108 2\.;
#X text 150 1108 *list*;
#X text 245 1108 positions.;
#X obj 20 1138 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1143 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1144 1\.;
#X text 245 1144 element(s) at the given index position(s). If element
not found at specified position and @default property is set \, output
that default value.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title list @url ceammc.list-help.pd;
#X obj 1 1224 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1227 library: ceammc v0.9.2;
#X text 500 1239 see also:;
#X obj 574 1239 list.^at;
#X obj 646 1239 list.apply_to;
#N canvas 10 1246 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.2;
#X text 10 54 object:;
#X text 120 54 list.at;
#X text 10 76 category:;
#X text 120 76 list;
#X text 10 98 since:;
#X text 120 98 0.1;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 list;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1246 pd info;
#X connect 9 0 13 0;
#X connect 10 0 13 1;
#X connect 11 0 14 0;
#X connect 12 0 14 1;
#X connect 13 0 15 0;
#X connect 14 0 16 0;
#X connect 17 0 21 0;
#X connect 18 0 21 1;
#X connect 19 0 22 0;
#X connect 20 0 22 1;
#X connect 21 0 23 0;
#X connect 22 0 24 0;
#X connect 25 0 26 0;
#X connect 26 0 27 0;
#X connect 27 0 28 0;