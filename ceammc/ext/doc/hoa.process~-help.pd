#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 438 50 cnv 1 327 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 438 50 patcher loader for multichannel processing;
#X obj 1 1 cnv 5 765 40 empty empty hoa.process~ 20 20 0 20 -104026
-4096 0;
#X obj 653 11 hoa.process~;
#X obj 210 80 cnv 1 555 143 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 hoa.process~ helps the modularization of patches for
ambisonic or plane waves processing.;
#X text 215 120 hoa.process~ is a kind of poly~ object particulary
suitable for multichannel ambisonic or plane wave processing. Create
a patch/effect/operator \, then parallelize it with the hoa.process~;
#X obj 215 190 ui.link @background_color 0.98039 0.98039 0.98039
@title CICM documentation @url hoa/hoa.2d.process~-help.pd;
#X obj 50 251 hoa/hoa.soundrone;
#X obj 280 251 phasor~ 0.15;
#X obj 443 251 ui.sliders @count 11 @min -60 @max 0 @size 200 55;
#X obj 50 280 ui.gain~ @size 120 14;
#X obj 280 280 phase->rad~;
#X obj 50 309 hoa.encoder~ 5, f 33;
#X obj 443 309 msg \#: @db;
#X text 597 309 spread;
#X obj 50 338 hoa.process~ 11 hoa/hoa.fx.gain~ planewaves, f 35;
#X obj 88 395 hoa.scope~ 5 @gain 4 @size 164 164;
#X obj 50 568 hoa.recomposer~ 5 11, f 35;
#X obj 50 597 hoa.decoder~ 5 binaural @crop 32, f 35;
#X obj 50 626 dac~, f 35;
#X text 50 654 multiple [osc~];
#X obj 414 654 hoa.process~.dsp;
#X msg 50 683 60 90 2.1;
#X msg 165 683 50 120 4.1;
#X obj 50 712 list.seq;
#X obj 50 741 list.each;
#X obj 184 741 mtof;
#X obj 50 770 msg \#:;
#X obj 50 799 hoa.process~ 11 hoa/hoa.syn.osc~ planewaves, f 45;
#X obj 50 827 pan.spread~ 11, f 45;
#X obj 50 856 ui.hgain2~ @size 15 318;
#X obj 50 885 dac~, f 45;
#X obj 50 914 ui.dsp~;
#X obj 20 963 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 968 cnv 5 115 26 empty empty mouse_events: 4 10 0 14 -262144
-49933 0;
#X text 110 1003 Left-click;
#X text 285 1003 open process patch window.;
#X obj 20 1033 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1038 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 1073 1\.;
#X text 150 1073 int;
#X obj 246 1074 cnv 1 17 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 1073 N: the order of decomposition. Type: int. Min value:
0;
#X text 110 1093 2\.;
#X text 150 1093 symbol;
#X obj 246 1094 cnv 1 46 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 1093 PATCH: patch name. Type: symbol.;
#X text 110 1113 3\.;
#X text 150 1113 symbol;
#X obj 246 1114 cnv 1 54 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 1113 DOMAIN: process domain: harmonics or planewaves. Allowed
values: harmonics \, planewaves. . Type: symbol.;
#X text 110 1148 4\.;
#X text 150 1148 list;
#X obj 246 1149 cnv 1 40 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 1148 ARGS: instance arguments. Type: list.;
#X obj 20 1178 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1183 cnv 5 98 26 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 1218 @args;
#X text 245 1218 (initonly) Get/Set arguments passed to instances.
Type: list.;
#X msg 110 1247 @domain;
#X text 245 1247 (initonly) Get/Set process domain: harmonics or planewaves.
Type: symbol. Default value: harmonics. Allowed values: harmonics \,
planewaves.;
#X msg 110 1304 @n;
#X text 245 1304 (initonly) Get/Set the order of decomposition/number
of planewaves. Type: int. Default value: 0\. Range: 0\...63\.;
#X msg 110 1346 @patch;
#X text 245 1346 (initonly) Get/Set patch name. Type: symbol.;
#X obj 20 1385 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1390 cnv 5 73 26 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 1425 on;
#X text 245 1425 switch on/off DSP instance processing. Usage: on all
0|1 - turn on/off all instances \, on IDX 0|1 - turn on/off specified
instance.;
#X msg 110 1480 open;
#X text 245 1480 open Pd window for specified instance. Arguments are:;
#X obj 255 1503 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1503 IDX: instance index. Type: int.;
#X msg 110 1528 dump;
#X text 245 1528 dumps all object info to Pd console window.;
#X obj 20 1565 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1570 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1571 1\.;
#X text 245 1571 first input harmonic/planewave.;
#X text 110 1591 ....;
#X text 245 1591 ... input harmonic/planewave.;
#X text 110 1611 n.;
#X text 245 1611 n-th input harmonic/planewave.;
#X obj 20 1641 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1646 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1647 1\.;
#X text 245 1647 first harmonic/planewave output.;
#X text 110 1667 ....;
#X text 245 1667 ... harmonic/planewave output.;
#X text 110 1687 n.;
#X text 245 1687 n-th harmonic/planewave output.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title spat @url ceammc.spat-help.pd;
#X obj 1 1737 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1740 library: ceammc v0.9.7;
#X text 557 1752 see also:;
#X obj 631 1752 hoa.2d.decoder~;
#N canvas 10 1759 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.7;
#X text 10 54 object:;
#X text 120 54 hoa.process~;
#X text 10 76 category:;
#X text 120 76 spat;
#X text 10 98 since:;
#X text 120 98 0.8;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky \, Pierre Guillot \, Eliott Paris \,
Thomas Le Meur;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 hoa \, process \, 2d;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1759 pd info;
#X connect 8 0 11 0;
#X connect 9 0 12 0;
#X connect 11 0 13 0;
#X connect 12 0 13 1;
#X connect 10 0 14 0;
#X connect 13 0 16 0;
#X connect 13 1 16 1;
#X connect 13 2 16 2;
#X connect 13 3 16 3;
#X connect 13 4 16 4;
#X connect 13 5 16 5;
#X connect 13 6 16 6;
#X connect 13 7 16 7;
#X connect 13 8 16 8;
#X connect 13 9 16 9;
#X connect 13 10 16 10;
#X connect 16 0 17 0;
#X connect 16 1 17 1;
#X connect 16 2 17 2;
#X connect 16 3 17 3;
#X connect 16 4 17 4;
#X connect 16 5 17 5;
#X connect 16 6 17 6;
#X connect 16 7 17 7;
#X connect 16 8 17 8;
#X connect 16 9 17 9;
#X connect 16 10 17 10;
#X connect 16 0 18 0;
#X connect 16 1 18 1;
#X connect 16 2 18 2;
#X connect 16 3 18 3;
#X connect 16 4 18 4;
#X connect 16 5 18 5;
#X connect 16 6 18 6;
#X connect 16 7 18 7;
#X connect 16 8 18 8;
#X connect 16 9 18 9;
#X connect 16 10 18 10;
#X connect 18 0 19 0;
#X connect 18 1 19 1;
#X connect 18 2 19 2;
#X connect 18 3 19 3;
#X connect 18 4 19 4;
#X connect 18 5 19 5;
#X connect 18 6 19 6;
#X connect 18 7 19 7;
#X connect 18 8 19 8;
#X connect 18 9 19 9;
#X connect 18 10 19 10;
#X connect 19 0 20 0;
#X connect 19 1 20 1;
#X connect 23 0 25 0;
#X connect 24 0 25 0;
#X connect 25 0 26 0;
#X connect 26 0 28 0;
#X connect 28 0 29 1;
#X connect 29 0 30 0;
#X connect 29 1 30 1;
#X connect 29 2 30 2;
#X connect 29 3 30 3;
#X connect 29 4 30 4;
#X connect 29 5 30 5;
#X connect 29 6 30 6;
#X connect 29 7 30 7;
#X connect 29 8 30 8;
#X connect 29 9 30 9;
#X connect 29 10 30 10;
#X connect 30 0 31 0;
#X connect 30 1 31 1;
#X connect 31 0 32 0;
#X connect 31 1 32 1;
#X connect 14 0 16 11;
#X connect 26 1 27 0;
#X connect 27 0 26 1;