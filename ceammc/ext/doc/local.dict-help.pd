#N canvas 0 0 715 555 12;
#X declare -lib ceammc;
#X obj 508 50 cnv 1 187 21 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 508 50 local named dict object;
#X obj 1 1 cnv 5 712 40 empty empty local.dict 20 20 0 20 -104026
-4096 0;
#X obj 518 11 local.json;
#X obj 615 11 local.dict;
#X obj 205 80 cnv 1 490 47 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 210 80 Defines local scope dict variable \, accessed by ID
name and available only within its patch (canvas);
#X msg 50 155 [a: abc] [bpm: 100] \, bang;
#X msg 357 155 bang;
#X obj 357 184 local.dict d1;
#X obj 50 213 local.dict d1;
#X obj 357 213 ui.display @display_type 1 @size 150 18;
#X obj 50 242 ui.display @display_type 1 @size 150 18;
#X obj 20 282 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 287 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 120 292 1\.;
#X text 150 292 symbol;
#X obj 241 293 cnv 1 24 18 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 240 292 ID: object ID.;
#X obj 20 320 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 325 cnv 5 98 26 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 120 330 @keys;
#X text 240 330 (readonly) Get keys of dictionary. Type: list;
#X msg 120 357 @empty;
#X text 240 357 (readonly) Get 1 if dict is empty \, otherwise 0\.
Type: int. Allowed values: 0 \, 1;
#X msg 120 394 @size;
#X text 240 394 (readonly) Get number of entries in dictionary. Type:
int. Min value: 0;
#X obj 20 441 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 446 cnv 5 73 26 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 120 451 add;
#X text 240 451 adds entry to dictionary. Arguments are:;
#X obj 250 479 cnv 1 30 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 250 479 KEY: entry key. Type: atom.;
#X obj 250 507 cnv 1 30 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 250 507 VAL: single value or list. Type: list.;
#X msg 120 535 clear;
#X text 240 535 removes all dict values. No output.;
#X msg 120 567 get_key;
#X text 240 567 get entry from dictionary. Arguments are:;
#X obj 250 595 cnv 1 30 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 250 595 KEY: entry key. Type: atom.;
#X msg 120 623 set_key;
#X text 240 623 change entry in dictionary. If it's not exists \, do
nothing. Arguments are:;
#X obj 250 665 cnv 1 30 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 250 665 KEY: key. Type: atom.;
#X obj 250 693 cnv 1 30 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 250 693 VAL: single value or list. Type: list.;
#X msg 120 721 set;
#X text 240 721 set dict content without output.;
#X msg 120 753 remove;
#X text 240 753 remove entry from dictionary. Arguments are:;
#X obj 250 781 cnv 1 30 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 250 781 KEY: entry key. Type: atom.;
#X msg 120 809 [....];
#X text 240 809 sets new content without output.;
#X msg 120 841 read;
#X text 240 841 read dict from JSON file. Arguments are:;
#X obj 250 869 cnv 1 37 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 250 869 PATH: file path. Type: symbol.;
#X msg 120 897 write;
#X text 240 897 write dict as JSON file. Arguments are:;
#X obj 250 925 cnv 1 37 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 250 925 PATH: file path. Type: symbol.;
#X obj 20 963 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 968 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144 -49933
0;
#X text 120 973 1\.;
#X text 150 973 *bang*;
#X text 240 973 output current dictionary value.;
#X text 150 991 *list*;
#X text 240 991 set dict from list. Key-value pairs are expected. [1 2
3 4( becames dict with keys: 1 and 3 \, values: 2 and 4\. No output.;
#X text 150 1037 *data:dict*;
#X text 240 1037 set and output new dict.;
#X obj 20 1065 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1070 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 120 1075 1\.;
#X text 240 1075 dict output;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title local @url ceammc.local-help.pd;
#X obj 1 1123 cnv 5 712 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1126 library: ceammc v0.5;
#X text 454 1138 see also:;
#X obj 530 1138 data.dict;
#X obj 610 1138 global.dict;
#N canvas 10 1145 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.5;
#X text 10 54 object:;
#X text 120 54 local.dict;
#X text 10 76 category:;
#X text 120 76 local;
#X text 10 98 since:;
#X text 120 98 0.6;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3;
#X text 10 164 keywords:;
#X text 120 164 dict \, local \, global;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1145 pd info;
#X connect 8 0 9 0;
#X connect 7 0 10 0;
#X connect 9 0 11 0;
#X connect 10 0 12 0;