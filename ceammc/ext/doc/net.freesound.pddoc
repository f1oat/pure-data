<?xml version='1.0' encoding='utf-8'?>
<pddoc xmlns:xi="http://www.w3.org/2001/XInclude" version="1.0">
    <object name="net.freesound">
        <title>net.freesound</title>
        <meta>
            <authors>
                <author>Serge Poltavsky</author>
            </authors>
            <description>Freesound API v2 client</description>
            <license>GPL3 or later</license>
            <library>ceammc</library>
            <category>net</category>
            <keywords>net freesound</keywords>
            <since>0.9.8</since>
        </meta>
        <properties>
            <property name="@oauth_id" type="symbol" default="" access="initonly">Freesound OAuth2
            ID</property>
            <property name="@oauth_secret" type="symbol" default="" access="initonly">Freesound
            OAuth2 secret</property>
            <property name="@oauth_file" type="symbol" default="" access="initonly">path to file
            with OAuth2 ID/secret, one per line</property>
        </properties>
        <info>
            <par>1) create Freesound API credentials at:</par>
            <a href="https://freesound.org/apiv2/apply">https://freesound.org/apiv2/apply</a>
            <par>2) save this id/secret pair into file if using @oauth_file property or set
            @oauth_id/@oauth_secret properties explicitly.</par>
            <par>3) [access auth( get temporal application code from Freesound website (valid for
            ~24 hours)</par>
            <par>4) [access code CODE( exchange this application code to internal secret access
            token</par>
        </info>
        <methods>
            <method name="access auth">get application authorization code (valid ~24 hours) from
            Freesound page: should open in web browser.</method>
            <method name="access code">exchange application authorization code to temp *access*
            token that will be used for every request. Note: you can do it only once, otherwise you
            need to get another application authorization code from Freesite site. 
            <param name="CODE" type="symbol" required="true">application auth code. Copy it from
            from Freesound webpage!</param></method>
            <method name="access store">store temp *access* token (not OAuth id/secret!) into the
            special file in the current patch directory</method>
            <method name="access load">load temp *access* token (not OAuth id/secret!) from the
            special file from the current patch directory</method>
            <method name="me">get and output user information</method>
            <method name="search">perform search</method>
            <method name="load">load Freesound file into Pd arrays 
            <param name="ID" type="int" required="true">Freesound soundfile ID (get it from search
            result, for examples)</param>
            <param name="@array" type="symbol" required="true">array name</param>
            <param name="@norm" type="bool" required="false">normalize sound</param></method>
            <method name="download">download Freesound file 
            <param name="ID" type="int" required="true">Freesound soundfile ID (get it from search
            result, for examples)</param>
            <param name="@p" type="int" required="false" minvalue="1">search page number</param>
            <param name="@n" type="int" required="false" minvalue="1">number of results</param>
            <param name="@fields" type="symbol" required="false">requested fields</param>
            <param name="@sort" type="symbol" required="false">sort methods: "score",
            "duration_desc", "duration_asc", "created_desc", "created_asc", "downloads_desc",
            "downloads_asc", "rating_desc", "rating_asc"</param>
            <param name="@filter" type="symbol" required="false">filter expression</param></method>
        </methods>
        <inlets>
            <inlet>
                <xinfo>input</xinfo>
            </inlet>
        </inlets>
        <outlets>
            <outlet>messages: [user DICT( - user info, [progress VALUE( - download process
            information, [loaded( - when finished loading, [downloaded( - when file download is
            finished, [results DICT( - search result.</outlet>
        </outlets>
        <example>
            <pdascii>
<![CDATA[
[search puredata @n 5 @fields id name @filter type mp3 #a(

  [access auth #b( [L]
                   |
  [me(             [access code $1 #c(
  |
[net.freesound #z]
|
[route results progress #x]
|
[dict.get /*/*/id /*/*/name]
|
|         [ui.hsl 0 100 #e]
|
[print ID]         [print OTHER #d]

[X a->z] [X b->z] [X c->z] [X x:2->d] [X x:1->e]
]]>
            </pdascii>
        </example>
    </object>
</pddoc>
