#N canvas 0 0 760 555 12;
#X obj 20 53 ui.link @title index @url ../index-help.pd;
#X text 62 50 ::;
#X obj 79 53 ui.link @title ceammc @url ceammc-help.pd;
#X obj 30 116 data.dict;
#X text 200 116 dictionary container: store values by key;
#X obj 30 143 data.fifo;
#X text 200 143 First-In-First-Out (FIFO) queue data container;
#X obj 30 170 data.float;
#X text 200 170 robust float object;
#X obj 30 197 data.int;
#X text 200 197 robust int object;
#X obj 30 224 data.list;
#X text 200 224 list container;
#X obj 30 251 data.mlist;
#X text 200 251 multidimensional list container;
#X obj 30 278 data.set;
#X text 200 278 container that store unique elements;
#X obj 30 305 data.set2list;
#X text 200 305 converts set to list;
#X obj 30 332 data.tree;
#X text 200 332 JSON like structure for storing values \, with parenthesis
instead of curly braces;
#X obj 30 372 dict.contains;
#X text 200 372 predicate to check dict contains key;
#X obj 30 399 dict.each;
#X text 200 399 map each value in dict;
#X obj 30 426 dict.from_list;
#X text 200 426 creates dictionary from list;
#X obj 30 453 dict.get;
#X text 200 453 on input dict outputs value to corresponding key outlet;
#X obj 30 480 dict.keys;
#X text 200 480 get list of dict keys;
#X obj 30 507 dict.pass;
#X text 200 507 passes specified keys in dict;
#X obj 30 534 dict.reject;
#X text 200 534 rejects specified keys from dict;
#X obj 30 561 dict.size;
#X text 200 561 dictionary size;
#X obj 30 588 dict.to_list;
#X text 200 588 converts dictionary to plain list;
#X obj 30 615 dict.values;
#X text 200 615 dictionary values as mlist;
#X obj 30 642 mlist.flatten;
#X text 200 642 flatten nested mlist;
#X obj 30 669 set.contains;
#X text 200 669 check if specified element is in set;
#X obj 30 696 set.diff;
#X text 200 696 difference between two sets;
#X obj 30 723 set.equal;
#X text 200 723 checks if two sets are equal (contains same elements);
#X obj 30 750 set.intersect;
#X text 200 750 output intersection of given sets;
#X obj 30 777 set.size;
#X text 200 777 get number of elements in set;
#X obj 30 804 set.symdiff;
#X text 200 804 symmetric difference between two sets;
#X obj 30 831 set.union;
#X text 200 831 output union of given sets;
#X obj 30 858 tree.float;
#X text 200 858 convert tree node to float value;
#X obj 30 885 tree.symbol;
#X text 200 885 convert tree node to symbol value;
#X obj 1 1 cnv 5 740 40 empty empty ceammc::data 20 20 0 20 -104026
-4096 0;
#X obj 1 912 cnv 5 740 40 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 20 922 library: ceammc;