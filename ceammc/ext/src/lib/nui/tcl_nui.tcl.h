// this is autogenerated file: do not edit
// clang-format off
#ifndef tcl_nui_tcl_h_
#define tcl_nui_tcl_h_
const char* tcl_nui_tcl = 
"namespace eval ::nui {\n"
"proc pd_canvas { cnv } { return \".x${cnv}.c\" }\n"
"proc widget_canvas { cnv id } { return \".x${cnv}.c.cnv${id}\" }\n"
"proc widget_window { cnv id } { return \".x${cnv}.c.win${id}\" }\n"
"proc widget_w   { w zoom } { expr $w * $zoom + 1 }\n"
"proc widget_h   { h zoom } { expr $h * $zoom + 1 }\n"
"proc widget_tag { id } { return \"#${id}\" }\n"
"proc widget_create { cnv id x y w h zoom } {\n"
"    set win [widget_window $cnv $id]\n"
"    set c [widget_canvas $cnv $id]\n"
"    set w [widget_w $w $zoom]\n"
"    set h [widget_h $h $zoom]\n"
"    namespace eval \"nui$id\" {}\n"
"    destroy $c\n"
"    canvas $c -width $w -height $h -bd 0 \\\n"
"        -highlightthickness 0 -insertborderwidth 0 \\\n"
"        -state normal -takefocus 1 -insertwidth 0 -confine 0\n"
"    [pd_canvas $cnv] create window $x $y -anchor nw -window $c \\\n"
"        -tags $win -width [expr $w+1] -height [expr $h+1]\n"
"}\n"
"proc widget_erase { cnv id } {\n"
"    destroy [widget_window $cnv $id]\n"
"}\n"
"proc widget_move { cnv id x y } {\n"
"    set c [pd_canvas $cnv]\n"
"    set win [widget_window $cnv $id]\n"
"    $c coords $win $x $y\n"
"}\n"
"proc widget_mouse_bind { cnv id target args }  {\n"
"    set c [widget_canvas $cnv $id]\n"
"    foreach name $args {\n"
"        set ev \"widget_mouse_${name}_bind\"\n"
"        $ev $c \"#$target\"\n"
"    }\n"
"}\n"
"proc widget_mouse_enter_bind {id obj} { bind $id <Enter> [subst {+pdsend \"$obj mouseenter\"}] }\n"
"proc widget_mouse_leave_bind {id obj} { bind $id <Leave> [subst {+pdsend \"$obj mouseleave\"}] }\n"
"if { [catch {package require tooltip} ] } {\n"
"    proc widget_tooltip { cnv model id msg } {}\n"
"} {\n"
"    proc widget_tooltip { cnv model id msg } {\n"
"        set c [widget_canvas $cnv $model]\n"
"        tooltip::tooltip $c -item $id $msg\n"
"    }\n"
"}\n"
"proc item_erase { cnv model tags } {\n"
"    set c [widget_canvas $cnv $model]\n"
"    $c delete $tags\n"
"}\n"
"proc item_move { cnv model tag x y } {\n"
"    set c [widget_canvas $cnv $model]\n"
"    lassign [$c coords $tag] x0 y0 x1 y1\n"
"    set w [expr $x1-$x0]\n"
"    set h [expr $y1-$y0]\n"
"    $c coords $tag $x $y [expr $x+$w] [expr $y+$h]\n"
"}\n"
"namespace eval frame {\n"
"    proc tag { id } { return \"#f${id}\" }\n"
"    proc create { cnv model id x y w h fill_color out_color width } {\n"
"        set c [::nui::widget_canvas $cnv $model]\n"
"        set t [tag $id]\n"
"        $c create rectangle $x $y [expr $x+$w] [expr $y+$h] \\\n"
"            -fill $fill_color -outline $out_color -width $width -tags $t\n"
"    }\n"
"    proc update_outline { cnv model id color } {\n"
"        set c [::nui::widget_canvas $cnv $model]\n"
"        set t [tag $id]\n"
"        $c itemconfigure $t -outline $color\n"
"    }\n"
"    proc erase { cnv model id } {\n"
"        ::nui::item_erase $cnv $model [tag $id]\n"
"    }\n"
"    proc move  { cnv model id x y } {\n"
"        ::nui::item_move $cnv $model [tag $id] $x $y\n"
"    }\n"
"}\n"
"namespace eval label {\n"
"    proc tag { id } { return \"#l${id}\" }\n"
"    proc create { cnv model id x y width anchor font color txt } {\n"
"        set c [::nui::widget_canvas $cnv $model]\n"
"        set t [tag $id]\n"
"        $c create text $x $y -fill $color -text $txt -font $font -anchor $anchor -width $width -tags $t\n"
"    }\n"
"    proc erase { cnv model id } {\n"
"        ::nui::item_erase $cnv $model [tag $id]\n"
"    }\n"
"    proc move  { cnv model id x y } {\n"
"        ::nui::item_move $cnv $model [tag $id] $x $y\n"
"    }\n"
"}\n"
"namespace eval slider {\n"
"    proc tag_all  { id } { return \"#sl${id}\" }\n"
"    proc tag_box  { id } { return \"#sl${id}_box\" }\n"
"    proc tag_knob { id } { return \"#sl${id}_kn\" }\n"
"    proc knob_xpos { x w pos } { return [expr ($w*$pos)+$x] }\n"
"    proc hcreate { cnv model id x y w h zoom pos value out_color fill_color knob_color } {\n"
"        set c [::nui::widget_canvas $cnv $model]\n"
"        set ta [tag_all $id]\n"
"        set tb [tag_box $id]\n"
"        set tkn [tag_knob $id]\n"
"        # draw box\n"
"        $c create rectangle $x $y [expr $x+$w] [expr $y+$h] \\\n"
"            -fill $fill_color -outline $out_color -width $zoom -tags [list $ta $tb]\n"
"        # draw knob\n"
"        set kx [knob_xpos $x $w $pos]\n"
"        set ky0 [expr $y+1]\n"
"        set ky1 [expr $y+$h-1]\n"
"        $c create line $kx $ky0 $kx $ky1 \\\n"
"            -fill $knob_color -width [expr 2*$zoom] -tags [list $ta $tkn]\n"
"        ::nui::widget_tooltip $cnv $model $tkn \"value: $value\"\n"
"    }\n"
"    proc hupdate { cnv model id pos value out_color fill_color knob_color } {\n"
"        set c [::nui::widget_canvas $cnv $model]\n"
"        set tb [tag_box $id]\n"
"        set tkn [tag_knob $id]\n"
"        # update box\n"
"        $c itemconfigure $tb -fill $fill_color -outline $out_color\n"
"        lassign [$c coords $tb] x0 y0 x1 y1\n"
"        set w [expr $x1-$x0]\n"
"        set x [knob_xpos $x0 $w $pos]\n"
"        # update knob\n"
"        lassign [$c coords $tkn] x0 y0 x1 y1\n"
"        $c coords $tkn $x $y0 $x $y1\n"
"        $c itemconfigure $tkn -fill $knob_color\n"
"    }\n"
"    proc erase { cnv model id } {\n"
"        set ta [tag_all $id]\n"
"        ::nui::item_erase $cnv $model $ta\n"
"    }\n"
"    proc move  { cnv model id x y } {\n"
"        set c [::nui::widget_canvas $cnv $model]\n"
"        set tb [tag_box $id]\n"
"        set tkn [tag_knob $id]\n"
"        lassign [$c coords $tb] x0 y0 x1 y1\n"
"        set w [expr $x1-$x0]\n"
"        set h [expr $y1-$y0]\n"
"        $c coords $tb $x $y [expr $x+$w] [expr $y+$h]\n"
"        set dx [expr $x0-$x]\n"
"        set dy [expr $y0-$y]\n"
"        lassign [$c coords $tkn] x0 y0 x1 y1\n"
"        $c coords $tkn [expr $x+$dx] [expr $y+$dy]\n"
"    }\n"
"}\n"
"}\n"
;
#endif
// clang-format on
