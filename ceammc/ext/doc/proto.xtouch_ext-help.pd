#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 453 50 cnv 1 312 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 453 50 Behringer XTouch Extender XMidi protocol;
#X obj 1 1 cnv 5 765 40 empty empty proto.xtouch_ext 20 20 0 20
-104026 -4096 0;
#X obj 625 11 proto.xtouch_ext;
#X obj 210 80 cnv 1 555 35 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 Behringer XTouch Extender XMidi;
#X obj 50 143 midiin;
#X symbolatom 155 143 25 0 0 0 - - -;
#X obj 366 143 r oxt;
#X obj 366 172 route fader0;
#X obj 69 201 r ixt;
#X obj 155 201 sym->any;
#X obj 366 201 sync;
#X obj 462 201 ui.knob;
#X obj 50 230 proto.xtouch_ext;
#X obj 174 259 ui.dt;
#X msg 366 259 fader0 \$1;
#X obj 50 287 midiout;
#X obj 155 287 s oxt;
#X obj 366 287 s ixt;
#X obj 20 336 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 341 cnv 5 98 26 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 376 @n;
#X text 245 376 (readonly) Get number of scenes. Type: int. Default
value: 2\. Range: 1\...32\.;
#X msg 110 418 @scene;
#X text 245 418 (readonly) Get current scene. Type: int. Default value:
0\. Min value: 0\.;
#X obj 20 470 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 475 cnv 5 73 26 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 510 fader;
#X text 245 510 set fader value. Arguments are:;
#X obj 255 533 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 533 CHAN: 'all' \, 'scene' or channel index \, max value
is NUM_SCENES * 8\. Type: atom.;
#X obj 255 571 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 571 X: fader value(s). Type: list.;
#X msg 110 596 fader?;
#X text 245 596 get fader value \, output to second outlet in format
[fader? IDX VALUE(. Arguments are:;
#X obj 255 634 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 634 CHAN: channel index \, max value is NUM_SCENES * 8\.
Type: atom.;
#X msg 110 674 knob;
#X text 245 674 set knob value. Arguments are:;
#X obj 255 697 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 697 CHAN: 'all' \, 'scene' or channel index \, max value
is NUM_SCENES * 8\. Type: atom.;
#X obj 255 735 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 735 X: fader value(s). Type: list.;
#X msg 110 760 knob?;
#X text 245 760 get knob value \, output to second outlet in format
[knob? IDX VALUE(. Arguments are:;
#X obj 255 798 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 798 CHAN: channel index \, max value is NUM_SCENES * 8\.
Type: atom.;
#X msg 110 838 lcd;
#X text 245 838 set LCD text. Arguments are:;
#X obj 255 861 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 861 CHAN: channel index \, max value is NUM_SCENES * 8\.
Type: int. Min value: 0\.;
#X obj 255 899 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 899 UPPER: upper display text. Type: atom.;
#X obj 255 922 cnv 1 44 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 922 LOWER: lower display text. Type: atom.;
#X msg 110 947 lcd0;
#X text 245 947 set upper LCD text. Arguments are:;
#X obj 255 970 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 970 CHAN: channel index \, max value is NUM_SCENES * 8\.
Type: int. Min value: 0\.;
#X obj 255 1008 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1008 STR: upper display text. Type: list.;
#X msg 110 1033 lcd1;
#X text 245 1033 set lower LCD text. Arguments are:;
#X obj 255 1056 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1056 CHAN: channel index \, max value is NUM_SCENES * 8\.
Type: int. Min value: 0\.;
#X obj 255 1094 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1094 STR: lower display text. Type: list.;
#X msg 110 1119 lcd_align;
#X text 245 1119 set all texts alignment. Note: you should set this
before setting upper display text. Arguments are:;
#X obj 255 1157 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1157 CHAN: 'all' \, 'scene' or channel index \, max value
is NUM_SCENES * 8\. Type: atom.;
#X obj 255 1195 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1195 ALIGN: align name. Valid names are: left \, right
\, center \, justify and auto. Type: list.;
#X msg 110 1235 lcd_align0;
#X text 245 1235 set upper text alignment. Note: you should set this
before setting upper display text. Arguments are:;
#X obj 255 1273 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1273 CHAN: 'all' \, 'scene' or channel index \, max value
is NUM_SCENES * 8\. Type: atom.;
#X obj 255 1311 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1311 ALIGN: align name. Valid names are: left \, right
\, center \, justify and auto. Type: list.;
#X msg 110 1351 lcd_align1;
#X text 245 1351 set lower text alignment. Note: you should set this
before setting lower display text. Arguments are:;
#X obj 255 1389 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1389 CHAN: 'all' \, 'scene' or channel index \, max value
is NUM_SCENES * 8\. Type: atom.;
#X obj 255 1427 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1427 ALIGN: align name. Valid names are: left \, right
\, center \, justify and auto. Type: list.;
#X msg 110 1467 lcd_color;
#X text 245 1467 set display color. Arguments are:;
#X obj 255 1490 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1490 CHAN: 'all' \, 'scene' or channel index \, max value
is NUM_SCENES * 8\. Type: atom.;
#X obj 255 1528 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1528 COLOR: list of color name or color indexes. Valid
color names are: black \, red \, green \, blue \, yellow \, magenta
\, cyan \, white and random. Valid color indexes are in 0\..7 range.
Type: list.;
#X msg 110 1598 lcd_enum0;
#X text 245 1598 set all upper display text with incremental enumeration.
Arguments are:;
#X obj 255 1636 cnv 1 62 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1636 [PREFIX]: name prefix. Type: atom.;
#X msg 110 1661 lcd_enum1;
#X text 245 1661 set all lower display text with incremental enumeration.
Arguments are:;
#X obj 255 1699 cnv 1 62 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1699 [PREFIX]: name prefix. Type: atom.;
#X msg 110 1724 lcd_mode;
#X text 245 1724 set lcd background/highlight mode. Arguments are:;
#X obj 255 1747 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1747 CHAN: 'all' \, 'scene' or channel index \, max value
is NUM_SCENES * 8\. Type: atom.;
#X obj 255 1785 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1785 MODE: mod values. 0: display is inverted \, 1: upper
is inverted \, 2: lower is inverted \, 3: none in inverted. Type: list.;
#X msg 110 1840 llcd;
#X text 245 1840 set several lower LCD text. Arguments are:;
#X obj 255 1863 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1863 CHAN: channel index \, max value is NUM_SCENES * 8\.
Type: int. Min value: 0\.;
#X obj 255 1901 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1901 ATOMS: lower display texts \, each atom per display.
Type: list.;
#X msg 110 1941 mute;
#X text 245 1941 set mute buttons. Arguments are:;
#X obj 255 1964 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1964 CHAN: 'all' \, 'scene' or channel index \, max value
is NUM_SCENES * 8\. Type: atom.;
#X obj 255 2002 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2002 X: button value(s). Type: list.;
#X msg 110 2027 mute?;
#X text 245 2027 get mute button \, output to second outlet in format
[mute? IDX VALUE(. Arguments are:;
#X obj 255 2065 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2065 CHAN: channel index \, max value is NUM_SCENES * 8\.
Type: atom.;
#X msg 110 2105 mute_mode;
#X text 245 2105 set mute buttons toggle mode. Arguments are:;
#X obj 255 2128 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2128 CHAN: 'all' \, 'scene' or channel index \, max value
is NUM_SCENES * 8\. Type: atom.;
#X obj 255 2166 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2166 X: values list: -1 \, 0 or 1\. Type: list.;
#X msg 110 2191 rec;
#X text 245 2191 set rec buttons. Arguments are:;
#X obj 255 2214 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2214 CHAN: 'all' \, 'scene' or channel index \, max value
is NUM_SCENES * 8\. Type: atom.;
#X obj 255 2252 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2252 X: button value(s). Type: list.;
#X msg 110 2277 rec?;
#X text 245 2277 get rec button \, output to second outlet in format
[rec? IDX VALUE(. Arguments are:;
#X obj 255 2315 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2315 CHAN: channel index \, max value is NUM_SCENES * 8\.
Type: atom.;
#X msg 110 2355 rec_mode;
#X text 245 2355 set rec buttons toggle mode. Arguments are:;
#X obj 255 2378 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2378 CHAN: 'all' \, 'scene' or channel index \, max value
is NUM_SCENES * 8\. Type: atom.;
#X obj 255 2416 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2416 X: values list: -1 \, 0 or 1\. Type: list.;
#X msg 110 2441 reset;
#X text 245 2441 reset all knobs \, faders and buttons to 0 \, vu to
lowest values. Do not change display texts.;
#X msg 110 2481 select;
#X text 245 2481 set select buttons. Arguments are:;
#X obj 255 2504 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2504 CHAN: 'all' \, 'scene' or channel index \, max value
is NUM_SCENES * 8\. Type: atom.;
#X obj 255 2542 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2542 X: button value(s). Type: list.;
#X msg 110 2567 select?;
#X text 245 2567 get select button \, output to second outlet in format
[select? IDX VALUE(. Arguments are:;
#X obj 255 2605 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2605 CHAN: channel index \, max value is NUM_SCENES * 8\.
Type: atom.;
#X msg 110 2645 select_mode;
#X text 245 2645 set select buttons toggle mode. Arguments are:;
#X obj 255 2668 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2668 CHAN: 'all' \, 'scene' or channel index \, max value
is NUM_SCENES * 8\. Type: atom.;
#X obj 255 2706 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2706 X: values list: -1 \, 0 or 1\. Type: list.;
#X msg 110 2731 solo;
#X text 245 2731 set solo buttons. Arguments are:;
#X obj 255 2754 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2754 CHAN: 'all' \, 'scene' or channel index \, max value
is NUM_SCENES * 8\. Type: atom.;
#X obj 255 2792 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2792 X: button value(s). Type: list.;
#X msg 110 2817 solo?;
#X text 245 2817 get solo button \, output to second outlet in format
[solo? IDX VALUE(. Arguments are:;
#X obj 255 2855 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2855 CHAN: channel index \, max value is NUM_SCENES * 8\.
Type: atom.;
#X msg 110 2895 solo_mode;
#X text 245 2895 set solo buttons toggle mode. Arguments are:;
#X obj 255 2918 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2918 CHAN: 'all' \, 'scene' or channel index \, max value
is NUM_SCENES * 8\. Type: atom.;
#X obj 255 2956 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2956 X: values list: -1 \, 0 or 1\. Type: list.;
#X msg 110 2981 ulcd;
#X text 245 2981 set several upper LCD text. Arguments are:;
#X obj 255 3004 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3004 CHAN: channel index \, max value is NUM_SCENES * 8\.
Type: int. Min value: 0\.;
#X obj 255 3042 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3042 ATOMS: upper display texts \, each atom per display.
Type: list.;
#X msg 110 3082 vu;
#X text 245 3082 set VU meter indicator. Arguments are:;
#X obj 255 3105 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3105 CHAN: channel index \, max value is NUM_SCENES * 8\.
Type: int. Min value: 0\.;
#X obj 255 3143 cnv 1 21 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3143 DB: level in decibels \, in -144\..0 range. Type:
float.;
#X obj 20 3178 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 3183 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 3184 1\.;
#X text 150 3184 *float*;
#X text 245 3184 raw midi input.;
#X text 150 3204 *any*;
#X text 245 3204 recIDX VAL: set rec button \, muteIDX VAL: set mute
button \, soloIDX VAL: set solo button \, selectIDX VAL: set select
button \, knobIDX VAL: set knob value \, faderIDX VAL: set fader value.;
#X obj 20 3279 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 3284 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 3285 1\.;
#X text 245 3285 raw midi output to behringer device.;
#X text 110 3305 2\.;
#X text 245 3305 control messages from device.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title proto @url ceammc.proto-help.pd;
#X obj 1 3355 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 3358 library: ceammc v0.9.2;
#N canvas 10 3377 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.2;
#X text 10 54 object:;
#X text 120 54 proto.xtouch_ext;
#X text 10 76 category:;
#X text 120 76 proto;
#X text 10 98 since:;
#X text 120 98 0.9.1;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 xtouch \, behringer;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 3377 pd info;
#X connect 8 0 9 0;
#X connect 7 0 11 0;
#X connect 9 0 12 0;
#X connect 6 0 14 0;
#X connect 10 0 14 0;
#X connect 11 0 14 0;
#X connect 14 1 15 0;
#X connect 12 0 16 0;
#X connect 14 0 17 0;
#X connect 14 1 18 0;
#X connect 16 0 19 0;
#X connect 12 1 13 0;
#X connect 13 0 12 1;