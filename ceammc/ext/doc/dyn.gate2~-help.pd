#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 621 50 cnv 1 144 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 621 50 stereo signal gate;
#X obj 1 1 cnv 5 765 40 empty empty dyn.gate2~ 20 20 0 20 -104026
-4096 0;
#X obj 666 11 dyn.gate2~;
#X obj 210 80 cnv 1 555 35 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 NOTE: the input level measured as sum of two input signals;
#X obj 50 143 osc~ 400;
#X obj 194 143 ui.hsl -60 0 @show_value 1;
#X obj 78 172 osc~ 900;
#X obj 194 172 dbfs->amp;
#X obj 50 201 gain~ 2;
#X obj 194 201 ui.hsl -60 0 @show_value 1;
#X msg 194 230 @threshold \$1;
#X obj 50 259 dyn.gate2~ -10;
#X obj 50 287 ui.hgain2~;
#X obj 194 287 ui.dsp~;
#X obj 50 316 dac~;
#X obj 20 366 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 371 cnv 5 90 25 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 406 1.;
#X text 150 406 float;
#X obj 246 407 cnv 1 109 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 406 THRESHOLD(db): dB level threshold above which gate
opens. Type: float. Range: -90...0;
#X text 110 441 2.;
#X text 150 441 float;
#X obj 246 442 cnv 1 86 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 441 ATTACK(ms): attack time = time constant (ms) for gate
to open. Type: float. Range: 0...500;
#X text 110 476 3.;
#X text 150 476 float;
#X obj 246 477 cnv 1 70 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 476 HOLD(ms): hold time = time (ms) gate stays open after
signal level < threshold. Type: float. Range: 1...500;
#X text 110 511 4.;
#X text 150 511 float;
#X obj 246 512 cnv 1 93 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 511 RELEASE(ms): release time = time constant (ms) for
gate to close. Type: float. Range: 1...500;
#X obj 20 556 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 561 cnv 5 98 25 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 596 @id;
#X text 245 596 (initonly) Get/Set OSC address id. If specified \,
bind all properties to /ID/dyn_gate2/PROP_NAME osc address \, if empty
bind to /dyn_gate2/PROP_NAME. Type: symbol.;
#X msg 110 653 @osc;
#X text 245 653 (initonly) Get/Set OSC server name to listen. Type:
symbol.;
#X msg 110 683 @active;
#X text 245 683 Turn on/off dsp processing. Type: bool. Default value:
1.;
#X msg 110 713 @attack;
#X text 245 713 Get/Set attack time = time constant (ms) for gate to
open. Type: float. Units: 'ms'. Default value: 0.1. Range: 0...500.;
#X msg 110 755 @bypass;
#X text 245 755 Get/Set bypass flag. If true: bypass 'effected' signal.
Type: bool. Default value: 0.;
#X msg 110 797 @hold;
#X text 245 797 Get/Set hold time = time (ms) gate stays open after
signal level < threshold. Type: float. Units: 'ms'. Default value:
100. Range: 1...500.;
#X msg 110 854 @release;
#X text 245 854 Get/Set release time = time constant (ms) for gate
to close. Type: float. Units: 'ms'. Default value: 20. Range: 1...500.;
#X msg 110 896 @threshold;
#X text 245 896 Get/Set dB level threshold above which gate opens.
Type: float. Units: 'db'. Default value: -60. Range: -90...0.;
#X obj 20 948 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 953 cnv 5 73 25 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 988 reset;
#X text 245 988 reset to initial state.;
#X obj 20 1026 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1031 cnv 5 64 25 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1032 1.;
#X text 245 1032 left input signal.;
#X text 110 1052 2.;
#X text 245 1052 right input signal.;
#X text 110 1072 3.;
#X text 150 1072 *float*;
#X text 245 1072 set threshold.;
#X obj 20 1102 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1107 cnv 5 73 25 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1108 1.;
#X text 245 1108 left output signal.;
#X text 110 1128 2.;
#X text 245 1128 right output signal.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 68 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 116 45 ::;
#X obj 133 48 ui.link @title dyn @url ceammc.dyn-help.pd;
#X obj 1 1178 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1181 library: ceammc v0.9.7;
#X text 598 1193 see also:;
#X obj 673 1193 dyn.gate~;
#N canvas 10 1200 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.7;
#X text 10 54 object:;
#X text 120 54 dyn.gate2~;
#X text 10 76 category:;
#X text 120 76 dyn;
#X text 10 98 since:;
#X text 120 98 0.1;
#X text 10 120 authors:;
#X text 120 120 Alex Nadzharov \, Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 gate;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pd-ceammc @url
https://github.com/uliss/pd-ceammc;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1200 pd info;
#X connect 7 0 9 0;
#X connect 6 0 10 0;
#X connect 8 0 10 1;
#X connect 11 0 12 0;
#X connect 10 0 13 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 13 1 14 1;
#X connect 14 0 16 0;
#X connect 14 1 16 1;
#X connect 9 0 10 2;
#X connect 10 1 13 1;