<?xml version="1.0" encoding="utf-8"?>
<page output="ceammc.props-info.pd">
    <title>Object properties</title>
    <sections>
        <par>CEAMMC library has a conception of properties: the way to access to the inner state of
        the object.</par>
        <par>A property name starts with '@' symbol.</par>
        <h2>Basic usage</h2>
        <par>There are two ways do deal with properties:</par>
        <par indent="1">1. Sending get/set request messages to the target object.</par>
        <pdascii indent="10">
<![CDATA[
[@freq?(       /*<- get property message (ended with '?')*/
|
|  [@freq 500( /*<- set property message*/
|  |
[flt.c_lpf 1000]
|
[ui.dt]
]]>
        </pdascii>
        <par indent="3">On receiving @prop? message the object outputs its value as the message to the first outlet: @prop VALUE</par>
        <par indent="3">There are [prop.route] and [prop.route~] objects for splitting the main object audio/control stream
        from the requested properties:</par>
        <pdascii indent="10">
<![CDATA[
[@freq?( [@q?(      [@freq?( [@q?(
|        |          |        |
[flt.c_lpf 1000]    [flt.c_lpf~]
|                   |
[prop-> @freq @q]   [prop~> @freq @q]
    ^|     ^^|            ^|      ^^|
    [F]    [F]            [F]     [F]
]]>
        </pdascii>
        <par indent="1">2. Using [prop.get] and [prop.set] objects</par>
        <par indent="3">The [prop.get] object get properties from the connected object:</par>
        <pdascii indent="10">
<![CDATA[
[F]              [B]
|                |
[prop.set @freq] [prop.get @freq]
|                |           ^|
[flt.c_lpf   1000]           [F]
]]>
        </pdascii>
        <par indent="3">NOTE: for some objects, like in flow category, this is the single way to get/set properties,
        because by design flow objects should work with all dataflow values.</par>
        <par>Some frequently used properties can be set with positional init arguments. This is the same:</par>
        <pdascii indent="10">[data.list 1 2 3] [data.list @value 1 2 3]</pdascii>
        <h2>Advanced usage</h2>
        <par>On ceammc object creation it parses initial arguments,
                does unquotting and number substitution, performs init function call and data parsing. After theese steps
                the property parsing stage is invoked.
                So quoting, bin and hex numbers, function calls can be used also in properties arguments.</par>
        <a href="ceammc.args-info.pd">More info about argument processing in ceammc</a>
        <a href="ceammc.functions-info.pd">More info about initial arg functions in ceammc</a>
        <par indent="3">You can request several properties at once in the single message:</par>
        <pdascii indent="10">
<![CDATA[
[@freq? @q?(
|
[flt.c_lpf 1000]
|
[ui.dt]
]]>
        </pdascii>
    </sections>
</page>
