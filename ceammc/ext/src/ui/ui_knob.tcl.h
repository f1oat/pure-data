// this is autogenerated file: do not edit
// clang-format off
#ifndef ui_knob_tcl_h_
#define ui_knob_tcl_h_
const char* ui_knob_tcl = 
"namespace eval ::ui {\n"
"namespace eval knob {\n"
"namespace eval font {\n"
"    variable size 7\n"
"    variable family \"Helvetica\"\n"
"    switch -- $::windowingsystem {\n"
"        \"aqua\" { }\n"
"        \"x11\"  { }\n"
"        \"win32\" {\n"
"            set size 6\n"
"        }\n"
"    }\n"
"}\n"
"proc label_font {zoom} {\n"
"    return \"$font::family [expr $font::size*$zoom] normal roman\"\n"
"}\n"
"proc update {cnv id w h zoom vmin vmax value show_range show_value active_scale border_color scale_color knob_color txt_color} {\n"
"    set c [::ceammc::ui::widget_canvas $cnv $id]\n"
"    set t [::ceammc::ui::widget_tag $id]\n"
"    $c delete $t\n"
"    set wd [expr round($h / 20) + 1]\n"
"    switch -- $::windowingsystem {\n"
"        \"win32\" { set wd [expr $wd*0.5] }\n"
"    }\n"
"    # do not show range on small sizes\n"
"    if {$show_range && $w < 30} { set show_range 0 }\n"
"    if {$show_range} {\n"
"        set x0 [expr 2*$zoom]\n"
"        set y0 [expr $h - 1]\n"
"        $c create text $x0 $y0 -text [format \"%g\" $vmin] -anchor sw -justify left \\\n"
"            -font [label_font $zoom] -fill $txt_color -width 0 -tags $t\n"
"        $c create text [expr $w-$x0] $y0 -text [format \"%g\" $vmax] -anchor se -justify right \\\n"
"            -font [label_font $zoom] -fill $txt_color -width 0 -tags $t\n"
"        set yoff 0\n"
"    } else {\n"
"        if { $h < 30 } {\n"
"            set yoff [expr round($wd*0.5)]\n"
"        } else {\n"
"            set yoff [expr round($wd/3.0)]\n"
"        }\n"
"    }\n"
"    set k 0.1\n"
"    set x0 [expr round($k*$w)+$zoom]\n"
"    set y0 [expr round($k*$h)+$zoom + $yoff]\n"
"    set x1 [expr round($w-($k*$w))]\n"
"    set y1 [expr round($h-($k*$h)) + $yoff]\n"
"    set phase_norm [expr ($vmax-$value)/($vmax-$vmin)]\n"
"    if {$active_scale} {\n"
"        set a -45\n"
"        set b [expr 270 * $phase_norm]\n"
"        $c create arc $x0 $y0 $x1 $y1 -start $a -extent $b -width $wd \\\n"
"            -outline $scale_color -style arc -tags $t\n"
"        set a [expr $a+$b]\n"
"        set b [expr 270 * (1-$phase_norm)]\n"
"        $c create arc $x0 $y0 $x1 $y1 -start $a -extent $b -width $wd \\\n"
"            -outline $knob_color -style arc -tags $t\n"
"    } else {\n"
"        $c create arc $x0 $y0 $x1 $y1 -start -45 -extent 270 -width $wd \\\n"
"            -outline $scale_color -style arc -tags $t\n"
"    }\n"
"    set phase_rad [expr ($phase_norm*1.5+0.25) * 3.1415926]\n"
"    set x0 [expr ($x1-$x0)*0.5+$x0]\n"
"    set y0 [expr ($y1-$y0)*0.5+$y0]\n"
"    set r  [expr round(0.5*($w*(1-$k) - ($wd*2)))]\n"
"    set x1 [expr sin($phase_rad)*$r+$x0]\n"
"    set y1 [expr cos($phase_rad)*$r+$y0]\n"
"    $c create line $x0 $y0 $x1 $y1 -width $wd -fill $knob_color \\\n"
"        -capstyle round -tags $t\n"
"    if {$show_value} {\n"
"        set y0 [expr round(0.707*$r + $y0 + (0.5*$wd))]\n"
"        $c create text $x0 $y0 -text [format \"%g\" $value] -anchor s -justify center \\\n"
"            -font [label_font $zoom] -fill $txt_color -width 0 -tags $t\n"
"    }\n"
"}\n"
"}\n"
"}\n"
;
#endif
// clang-format on
