// this is autogenerated file: do not edit
// clang-format off
#ifndef ui_sliders_tcl_h_
#define ui_sliders_tcl_h_
const char* ui_sliders_tcl = 
"namespace eval ::ui {\n"
"proc sliders_label_font {zoom} { return \"Helvetica [expr 8*$zoom] normal roman\" }\n"
"proc sliders_delete {cnv id} {\n"
"    set c [::ceammc::ui::widget_canvas $cnv $id]\n"
"    set t [::ceammc::ui::widget_tag $id]\n"
"    $c delete $t\n"
"}\n"
"proc sliders_draw_labels {cnv id w h zoom lmin lmax} {\n"
"    set c [::ceammc::ui::widget_canvas $cnv $id]\n"
"    set f [sliders_label_font $zoom]\n"
"    set t [::ceammc::ui::widget_tag $id]\n"
"    set off [expr 3 * $zoom]\n"
"    set x0 $off\n"
"    set y0 $off\n"
"    set x1 $off\n"
"    set y1 [expr $h-$off]\n"
"    $c create text $x1 $y1 -text $lmin -anchor sw -justify left -font $f -fill black -width 0 -tags $t\n"
"    $c create text $x0 $y0 -text $lmax -anchor nw -justify left -font $f -fill black -width 0 -tags $t\n"
"}\n"
"proc sliders_draw_vbar {c t w h zoom color i bar} {\n"
"    set v [expr $bar / 999.0]\n"
"    if { $v < 0 } { set v 0 }\n"
"    if { $v > 1 } { set v 1 }\n"
"    set x0 [expr $i*$w]\n"
"    set y0 [expr (1-$v)*$h]\n"
"    set x1 [expr ($i+1)*$w]\n"
"    set y1 $h\n"
"    if {$w > 1 } {\n"
"        set oc [::tk::Darken $color 110]\n"
"    } else {\n"
"        set oc {}\n"
"    }\n"
"    $c create rectangle $x0 $y0 $x1 $y1 -fill $color -outline $oc -width 1 -tags $t\n"
"    set handle_color [::tk::Darken $color 70]\n"
"    $c create line $x0 $y0 $x1 $y0 -fill $handle_color -width [expr 2*$zoom] -capstyle butt -tags $t\n"
"}\n"
"proc sliders_draw_hbar {c t w h zoom color i bar} {\n"
"    set v [expr $bar / 999.0]\n"
"    if { $v < 0 } { set v 0 }\n"
"    if { $v > 1 } { set v 1 }\n"
"    set x0 0\n"
"    set y0 [expr $i*$h]\n"
"    set x1 [expr $v*$w]\n"
"    set y1 [expr ($i+1)*$h]\n"
"    if {$w > 1 } {\n"
"        set oc [::tk::Darken $color 110]\n"
"    } else {\n"
"        set oc {}\n"
"    }\n"
"    $c create rectangle $x0 $y0 $x1 $y1 -fill $color -outline $oc -width 1 -tags $t\n"
"    set handle_color [::tk::Darken $color 70]\n"
"    $c create line $x1 $y0 $x1 $y1 -fill $handle_color -width [expr 2*$zoom] -capstyle butt -tags $t\n"
"}\n"
"proc sliders_draw_bars {cnv id w h zoom bar_color active_color vert active args} {\n"
"    set c [::ceammc::ui::widget_canvas $cnv $id]\n"
"    set t [::ceammc::ui::widget_tag $id]\n"
"    set n [llength $args]\n"
"    if { $n == 0 } { return }\n"
"    if { $vert == 0 } {\n"
"        set bar_w [expr $w / ($n+0.0)]\n"
"        for { set i 0 } { $i < $n } { incr i } {\n"
"            # draw later\n"
"            if { $active == $i } { continue }\n"
"            set bar [lindex $args $i]\n"
"            sliders_draw_vbar $c $t $bar_w $h $zoom $bar_color $i $bar\n"
"        }\n"
"        if { $active >= 0 } {\n"
"            set bar [lindex $args $active]\n"
"            sliders_draw_vbar $c $t $bar_w $h $zoom $active_color $active $bar\n"
"        }\n"
"    } else {\n"
"        set bar_h [expr $h / ($n+0.0)]\n"
"        for { set i 0 } { $i < $n } { incr i } {\n"
"            # draw later\n"
"            if { $active == $i } { continue }\n"
"            set bar [lindex $args $i]\n"
"            sliders_draw_hbar $c $t $w $bar_h $zoom $bar_color $i $bar\n"
"        }\n"
"        if { $active >= 0 } {\n"
"            set bar [lindex $args $active]\n"
"            sliders_draw_hbar $c $t $w $bar_h $zoom $active_color $active $bar\n"
"        }\n"
"    }\n"
"}\n"
"}\n"
;
#endif
// clang-format on
