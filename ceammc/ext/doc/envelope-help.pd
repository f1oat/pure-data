#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 622 50 cnv 1 143 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 622 50 Envelope data type;
#X obj 1 1 cnv 5 765 40 empty empty envelope 20 20 0 20 -104026 -4096
0;
#X obj 403 11 ceammc/envelope;
#X obj 537 11 ceammc/env;
#X obj 635 11 env;
#X obj 682 11 envelope;
#X obj 210 80 cnv 1 555 190 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 Data type for sound envelope. Contains points specified
by time and value. Points could have stop property - to execute oly
part of envelope and stop on this point. So multisegment envelopes
could be created;
#X text 215 150 Point also has segment type property \, that defines
following segment curve - it could be *step* \, *line* (default) or
*exp* (exponential);
#X text 215 205 Exponential segment also has curve property: if 0 -
(linear) <0 (concave \, negatively curved) >0 (convex \, positively
curved);
#X msg 50 298 ar 100 200 \, bang;
#X msg 232 298 exp 0 30 -2 1 100 -4 0 40 4 0.5 30 2 0 \, bang;
#X msg 69 327 adsr 10 30 60 150 \, bang;
#X msg 318 327 line 0.1 40 0.9 20 0.3 60 0 \, bang;
#X msg 88 356 ear 10 -2 60 -2 \, bang;
#X msg 318 356 sigmoid 0 40 14 1 100 8 0 \, bang;
#X msg 107 385 eadsr 20 -5 70 -12 30 100 -7 \, bang;
#X msg 462 385 sin2 0 80 1 80 0 \, bang;
#X obj 50 414 envelope;
#X obj 50 442 env->array env_arr;
#N canvas 0 22 450 300 (subpatch) 0;
#X array env_arr 100 float 1;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 100 0 400 100 1;
#X restore 50 485 graph;
#X obj 20 617 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 622 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 657 1\.;
#X text 150 657 list;
#X obj 246 658 cnv 1 39 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 657 adsr: ADSR envelope: attack(ms) \, decay(ms) \, sustain(%)
\, release(ms). Type: list.;
#X text 110 692 2\.;
#X text 150 692 list;
#X obj 246 693 cnv 1 31 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 692 asr: ASR envelope: attack(ms) \, release(ms) - with
sustain stop point. Type: list.;
#X text 110 727 3\.;
#X text 150 727 list;
#X obj 246 728 cnv 1 24 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 727 ar: AR envelope: attack(ms) \, release(ms). Type: list.;
#X text 110 747 4\.;
#X text 150 747 list;
#X obj 246 748 cnv 1 47 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 747 eadsr: exponential ADSR envelope: attack(ms) \, attack_curve
\, decay(ms) \, decay_curve \, sustain(%) \, release(ms) \, release_curve.
Type: list.;
#X text 110 797 5\.;
#X text 150 797 list;
#X obj 246 798 cnv 1 39 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 797 easr: exponential ASR envelope: attack(ms) \, attack_curve
\, release(ms) \, release_curve - with sustain stop point. Type: list.;
#X text 110 847 6\.;
#X text 150 847 list;
#X obj 246 848 cnv 1 31 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 847 ear: exponential ASR envelope: attack(ms) \, attack_curve
\, release(ms) \, release_curve - no sustain point. Type: list.;
#X obj 20 892 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 897 cnv 5 98 26 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 932 @length;
#X text 245 932 (readonly) Get total envelope time length. Type: float.
Units: ms. Default value: 0\. Min value: 0\.;
#X msg 110 974 @npoints;
#X text 245 974 (readonly) Get number of points. Type: int. Default
value: 0\. Min value: 0\.;
#X msg 110 1016 @points;
#X text 245 1016 (readonly) Get list of point times (ms). Type: list.;
#X msg 110 1045 @stops;
#X text 245 1045 (readonly) Get list of stop points. Type: list.;
#X msg 110 1074 @values;
#X text 245 1074 (readonly) Get list of point values. Type: list.;
#X obj 20 1113 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1118 cnv 5 73 26 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 1153 add_point;
#X text 245 1153 add envelope point. Arguments are:;
#X obj 255 1176 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1176 TIME: point time. Type: float. Min value: 0\. Units:
ms.;
#X obj 255 1199 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1199 VALUE: point value. Type: float.;
#X obj 255 1222 cnv 1 85 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1222 [IS_STOP=0]: is stop point. Type: int. Allowed values:
0 \, 1\.;
#X obj 255 1245 cnv 1 85 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1245 [TYPE=line]: segment type: step \, linear \, exponential
\, sin^2 or sigmoid curve. Type: symbol. Allowed values: step \, line
\, exp \, sin2 \, sigmoid.;
#X obj 255 1298 cnv 1 70 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1298 [CURVE=1]: exponential curve degree: 0 (linear) <0
(concave \, negatively curved) >0 (convex \, positively curved). Type:
float.;
#X msg 110 1353 add_seg;
#X text 245 1353 add segment to the end of envelope. On empty envelope
adds start point at 0ms and 0 value. Arguments are:;
#X obj 255 1391 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1391 TYPE: segment type. Type: symbol. Allowed values:
step \, line \, sin2 \, exp \, sigmoid.;
#X obj 255 1429 cnv 1 51 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1429 LENGTH: segment length. Type: float. Units: ms.;
#X obj 255 1452 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1452 VALUE: end segment value. Type: float.;
#X obj 255 1475 cnv 1 70 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1475 [CURVE=0]: curve (for exp and sigmoid type). Type:
float.;
#X msg 110 1500 adsr;
#X text 245 1500 creates ADSR envelope with one stop point. Arguments
are:;
#X obj 255 1523 cnv 1 53 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1523 ATTACK: attack time. Type: float. Min value: 0\. Units:
ms.;
#X obj 255 1546 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1546 DECAY: decay time. Type: float. Min value: 0\. Units:
ms.;
#X obj 255 1569 cnv 1 59 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1569 SUSTAIN: sustain level. Type: float. Range: 0\...100\.
Units: %.;
#X obj 255 1607 cnv 1 59 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1607 RELEASE: release time. Type: float. Min value: 0\.
Units: ms.;
#X msg 110 1632 ar;
#X text 245 1632 creates AR envelope without stop points. Arguments
are:;
#X obj 255 1655 cnv 1 53 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1655 ATTACK: attack time. Type: float. Min value: 0\. Units:
ms.;
#X obj 255 1678 cnv 1 59 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1678 RELEASE: release time. Type: float. Min value: 0\.
Units: ms.;
#X msg 110 1703 asr;
#X text 245 1703 creates ASR envelope with one stop point. Arguments
are:;
#X obj 255 1726 cnv 1 53 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1726 ATTACK: attack time. Type: float. Min value: 0\. Units:
ms.;
#X obj 255 1749 cnv 1 59 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1749 RELEASE: release time. Type: float. Min value: 0\.
Units: ms.;
#X msg 110 1774 clear;
#X text 245 1774 remove all envelope points.;
#X msg 110 1801 eadsr;
#X text 245 1801 creates exponential ADSR envelope with one stop point.
Arguments are:;
#X obj 255 1839 cnv 1 53 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1839 ATTACK: attack time. Type: float. Min value: 0\. Units:
ms.;
#X obj 255 1862 cnv 1 98 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1862 ATTACK_CURVE: attack segment curve. Type: float.;
#X obj 255 1885 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1885 DECAY: decay time. Type: float. Min value: 0\. Units:
ms.;
#X obj 255 1908 cnv 1 90 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1908 DECAY_CURVE: decay segment curve. Type: float.;
#X obj 255 1931 cnv 1 59 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1931 SUSTAIN: sustain level. Type: float. Range: 0\...100\.
Units: %.;
#X obj 255 1969 cnv 1 59 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1969 RELEASE: release time. Type: float. Min value: 0\.
Units: ms.;
#X obj 255 1992 cnv 1 105 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1992 RELEASE_CURVE: release segment curve. Type: float.;
#X msg 110 2017 ear;
#X text 245 2017 creates exponential AR envelope without stop points.
Arguments are:;
#X obj 255 2055 cnv 1 53 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2055 ATTACK: attack time. Type: float. Units: ms.;
#X obj 255 2078 cnv 1 98 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2078 ATTACK_CURVE: attack segment curve. Type: float.;
#X obj 255 2101 cnv 1 59 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2101 RELEASE: release time. Type: float. Units: ms.;
#X obj 255 2124 cnv 1 105 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2124 RELEASE_CURVE: release segment curve. Type: float.;
#X msg 110 2149 easr;
#X text 245 2149 creates exponential AR envelope with one stop point.
Arguments are:;
#X obj 255 2187 cnv 1 53 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2187 ATTACK: attack time. Type: float. Min value: 0\. Units:
ms.;
#X obj 255 2210 cnv 1 98 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2210 ATTACK_CURVE: attack segment curve. Type: float.;
#X obj 255 2233 cnv 1 59 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2233 RELEASE: release time. Type: float. Min value: 0\.
Units: ms.;
#X obj 255 2256 cnv 1 105 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2256 RELEASE_CURVE: release segment curve. Type: float.;
#X msg 110 2281 exp;
#X text 245 2281 creates exponential-segmented envelope with arbitrary
number of segments. Arguments are:;
#X obj 255 2319 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2319 VAL0: begin value. Type: float.;
#X obj 255 2342 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2342 LEN0: line length. Type: float. Min value: 1\. Units:
ms.;
#X obj 255 2365 cnv 1 52 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2365 CURVE0: segment curve. Type: float.;
#X obj 255 2388 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2388 VAL1: value. Type: float.;
#X obj 255 2411 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2411 [LEN1]: segment length. Type: float.;
#X obj 255 2434 cnv 1 62 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2434 [CURVE1]: segment curve. Type: float.;
#X obj 255 2457 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2457 [VAL2]: value. Type: float.;
#X msg 110 2482 line;
#X text 245 2482 creates line-segmented envelope with arbitrary number
of segments. Arguments are:;
#X obj 255 2520 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2520 VAL0: begin value. Type: float.;
#X obj 255 2543 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2543 LEN0: line length. Type: float. Min value: 1\. Units:
ms.;
#X obj 255 2566 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2566 VAL1: value. Type: float.;
#X obj 255 2589 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2589 [LEN1]: segment length. Type: float.;
#X obj 255 2612 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2612 [VAL2]: value. Type: float.;
#X msg 110 2637 remove_point;
#X text 245 2637 remove envelope point by specified time. Arguments
are:;
#X obj 255 2660 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2660 IDX: point index. Type: int. Min value: 0\.;
#X msg 110 2685 set_point;
#X text 245 2685 set point time and value. Arguments are:;
#X obj 255 2708 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2708 IDX: point index. Type: int. Min value: 0\.;
#X obj 255 2731 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2731 TIME: point time. Type: float. Min value: 0\. Units:
ms.;
#X obj 255 2754 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2754 VALUE: point value. Type: int. Min value: 0\.;
#X obj 255 2777 cnv 1 85 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2777 [IS_STOP=0]: stop point. Type: int. Allowed values:
0 \, 1\.;
#X msg 110 2802 set_point_time;
#X text 245 2802 set point time. Arguments are:;
#X obj 255 2825 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2825 IDX: point index. Type: int. Min value: 0\.;
#X obj 255 2848 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2848 TIME: point time. Type: float. Min value: 0\. Units:
ms.;
#X msg 110 2873 set_point_value;
#X text 245 2873 set point time. Arguments are:;
#X obj 255 2896 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2896 IDX: point index. Type: int. Min value: 0\.;
#X obj 255 2919 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2919 VALUE: point value. Type: int. Min value: 0\.;
#X msg 110 2944 set_seg_type;
#X text 245 2944 set segment type. Arguments are:;
#X obj 255 2967 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2967 IDX: segment index \, starting from 0\. Type: int.
Min value: 0\.;
#X obj 255 3005 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3005 TYPE: segment type. Type: symbol. Allowed values:
step \, line \, sin2 \, exp \, sigmoid.;
#X msg 110 3045 set_stop_point;
#X text 245 3045 set stop-point. Arguments are:;
#X obj 255 3068 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3068 IDX: point index. Type: int. Min value: 0\.;
#X obj 255 3091 cnv 1 59 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3091 IS_STOP: stop point. Type: int. Allowed values: 0
\, 1\.;
#X msg 110 3116 sigmoid;
#X text 245 3116 creates sigmoid-segmented envelope with arbitrary
number of segments. Arguments are:;
#X obj 255 3154 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3154 VAL0: begin value. Type: float.;
#X obj 255 3177 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3177 LEN0: line length. Type: float. Min value: 1\. Units:
ms.;
#X obj 255 3200 cnv 1 52 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3200 CURVE0: segment curve. Type: float.;
#X obj 255 3223 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3223 VAL1: value. Type: float.;
#X obj 255 3246 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3246 [LEN1]: segment length. Type: float.;
#X obj 255 3269 cnv 1 62 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3269 [CURVE1]: segment curve. Type: float.;
#X obj 255 3292 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3292 [VAL2]: value. Type: float.;
#X msg 110 3317 sin2;
#X text 245 3317 creates quadratic sine-segmented envelope with arbitrary
number of segments. Arguments are:;
#X obj 255 3355 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3355 VAL0: begin value. Type: float.;
#X obj 255 3378 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3378 LEN0: line length. Type: float. Min value: 1\. Units:
ms.;
#X obj 255 3401 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3401 VAL1: value. Type: float.;
#X obj 255 3424 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3424 [LEN1]: segment length. Type: float.;
#X obj 255 3447 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3447 [VAL2]: value. Type: float.;
#X msg 110 3472 step;
#X text 245 3472 creates step-segmented envelope with arbitrary number
of segments. Arguments are:;
#X obj 255 3510 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3510 VAL0: begin value. Type: float.;
#X obj 255 3533 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3533 LEN0: step length. Type: float. Min value: 1\. Units:
ms.;
#X obj 255 3556 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3556 VAL1: value. Type: float.;
#X obj 255 3579 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3579 [LEN1]: segment length. Type: float.;
#X obj 255 3602 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3602 [VAL2]: value. Type: float.;
#X msg 110 3627 *;
#X text 245 3627 multiply all envelope points to specified value. Arguments
are:;
#X obj 255 3665 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3665 VALUE: value. Type: float.;
#X msg 110 3690 +;
#X text 245 3690 add specified value to all envelope points. Arguments
are:;
#X obj 255 3713 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3713 VALUE: value. Type: float.;
#X msg 110 3738 >>;
#X text 245 3738 shift all envelope point by specified time in milliseconds.
Arguments are:;
#X obj 255 3776 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3776 SHIFT: value. Type: float. Units: ms.;
#X obj 20 3811 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 3816 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 3817 1\.;
#X text 150 3817 *bang*;
#X text 245 3817 outputs current envelope.;
#X text 150 3837 *data*;
#X text 245 3837 set new envelope and output it.;
#X obj 20 3867 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 3872 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 3873 1\.;
#X text 245 3873 data output.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title env @url ceammc.env-help.pd;
#X obj 1 3923 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 3926 library: ceammc v0.9.4;
#X text 505 3938 see also:;
#X obj 579 3938 env->array;
#X obj 667 3938 env->vline;
#N canvas 10 3945 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.4;
#X text 10 54 object:;
#X text 120 54 envelope;
#X text 10 76 category:;
#X text 120 76 env;
#X text 10 98 since:;
#X text 120 98 0.5;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 envelope;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 3945 pd info;
#X connect 11 0 19 0;
#X connect 13 0 19 0;
#X connect 15 0 19 0;
#X connect 17 0 19 0;
#X connect 19 0 20 0;
#X connect 12 0 19 0;
#X connect 14 0 19 0;
#X connect 16 0 19 0;
#X connect 18 0 19 0;