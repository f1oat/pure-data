#N canvas 0 0 760 555 12;
#X obj 20 53 ui.link @title index @url ../index-help.pd;
#X text 62 50 ::;
#X obj 79 53 ui.link @title ceammc @url ceammc-help.pd;
#X obj 30 116 array.p2s;
#X text 200 116 convert array phase [0\..1] to sample position;
#X obj 30 143 array.s2p;
#X text 200 143 convert sample position to phase range [0\..1];
#X obj 30 170 conv.amp2dbfs;
#X text 200 170 convert from amplitude to decibel full scale;
#X obj 30 197 conv.amp2dbfs~;
#X text 200 197 convert from amplitude to decibel full scale;
#X obj 30 224 conv.bar2ms;
#X text 200 224 calculate bar and beat duration;
#X obj 30 251 conv.bits2bang;
#X text 200 251 convert list of bits to bang events;
#X obj 30 278 conv.bits2int;
#X text 200 278 convert list of bits to integer;
#X obj 30 305 conv.bits2note;
#X text 200 305 convert list of bits to note events;
#X obj 30 332 conv.bits2pos;
#X text 200 332 convert list of bits to list of bit position;
#X obj 30 359 conv.bpm2hz;
#X text 200 359 converts BPM to frequency in hertz;
#X obj 30 386 conv.bpm2ms;
#X text 200 386 convert frequency in BPM to period in milliseconds;
#X obj 30 413 conv.bpm2sec;
#X text 200 413 convert frequency in BPM to period in seconds;
#X obj 30 440 conv.car2pol;
#X text 200 440 convert cartesian coords to polar;
#X obj 30 467 conv.cc2amp;
#X text 200 467 convert from MIDI Control Change range;
#X obj 30 494 conv.char2morse;
#X text 200 494 convert character to morse code;
#X obj 30 521 conv.color2rgba;
#X text 200 521 convert named or hex color to separate RGBA values;
#X obj 30 548 conv.dbfs2amp;
#X text 200 548 convert decibel full scale to amplitude;
#X obj 30 575 conv.dbfs2amp~;
#X text 200 575 convert decibel full scale to amplitude;
#X obj 30 602 conv.degree2key;
#X text 200 602 convert scale degree to key;
#X obj 30 629 conv.edge2bang;
#X text 200 629 edge detector for numeric stream;
#X obj 30 656 conv.guido2note;
#X text 200 656 convert Guido notation into MIDI and duration;
#X obj 30 683 conv.hex2int;
#X text 200 683 hex symbol to int value;
#X obj 30 710 conv.hsl2rgb;
#X text 200 710 convert HSL color values to RGB;
#X obj 30 737 conv.int2bits;
#X text 200 737 convert integer to list of bits;
#X obj 30 764 conv.lab2rgb;
#X text 200 764 convert LAB color values to RGB;
#X obj 30 791 conv.lin2curve;
#X text 200 791 map linear to exponential range with 0 allowed.;
#X obj 30 818 conv.lin2exp;
#X text 200 818 maps linear range to exponential range;
#X obj 30 845 conv.lin2lin;
#X text 200 845 convert from one linear range to another;
#X obj 30 872 conv.lin2lin~;
#X text 200 872 convert from one linear range to another for signals;
#X obj 30 899 conv.list2props;
#X text 200 899 converts list to series of property messages;
#X obj 30 926 conv.midi2freq;
#X text 200 926 convert from midi pitch to frequency in hz (with various
base A and temperament);
#X obj 30 966 conv.ms2bpm;
#X text 200 966 convert period in milliseconds to frequency in BPM;
#X obj 30 993 conv.ms2samp;
#X text 200 993 convert time in milliseconds to number of samples according
to current samplerate;
#X obj 30 1033 conv.ms2samp~;
#X text 200 1033 convert time in milliseconds to number of samples
according to current samplerate;
#X obj 30 1073 conv.ms2str;
#X text 200 1073 converts float time in milliseconds to formated symbol
(or string);
#X obj 30 1113 conv.note2guido;
#X text 200 1113 convert MIDI note to Guido notation;
#X obj 30 1140 conv.phase2rad;
#X text 200 1140 convert phase value [0-1] to radians [0-2π];
#X obj 30 1167 conv.phase2rad~;
#X text 200 1167 convert phase value [0-1] to radians [0-2π];
#X obj 30 1194 conv.pitch2midi;
#X text 200 1194 converts symbol pitch name to MIDI note number;
#X obj 30 1221 conv.pol2car;
#X text 200 1221 convert from polar coordinates to cartesian;
#X obj 30 1248 conv.rad2phase;
#X text 200 1248 convert radians value to phase;
#X obj 30 1275 conv.rad2phase~;
#X text 200 1275 convert radians value to phase;
#X obj 30 1302 conv.rgb2hex;
#X text 200 1302 convert separate RGB values to hex color;
#X obj 30 1329 conv.samp2ms;
#X text 200 1329 convert samples to time according to samplerate;
#X obj 30 1356 conv.samp2ms~;
#X text 200 1356 convert samples to milliseconds according to samplerate;
#X obj 30 1383 conv.samp2sec;
#X text 200 1383 convert samples to time according to samplerate;
#X obj 30 1410 conv.sec2bpm;
#X text 200 1410 convert period in seconds to frequency in BPM;
#X obj 30 1437 conv.sec2samp;
#X text 200 1437 convert time in seconds to number of samples according
to current samplerate;
#X obj 30 1477 conv.sec2str;
#X text 200 1477 converts float time in seconds to formated symbol
(or string);
#X obj 30 1504 conv.semi2ratio;
#X text 200 1504 convert interval in semitones to frequency ratio in
12-ET;
#X obj 30 1531 conv.sig2float~;
#X text 200 1531 convert signal to floats;
#X obj 30 1558 conv.str2sec;
#X text 200 1558 converts formatted time to float value in seconds;
#X obj 30 1585 music.dur2time;
#X text 200 1585 convert duration list to time;
#X obj 30 1612 music.voice2midi;
#X text 200 1612 convert voice music list of midi pitches;
#X obj 1 1 cnv 5 740 40 empty empty ceammc::conv 20 20 0 20 -104026
-4096 0;
#X obj 1 1639 cnv 5 740 40 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 20 1649 library: ceammc;