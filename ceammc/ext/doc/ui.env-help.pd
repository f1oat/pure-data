#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 591 50 cnv 1 174 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 591 50 envelope editor widget;
#X obj 1 1 cnv 5 765 40 empty empty ui.env 20 20 0 20 -104026 -4096 0;
#X obj 694 13 ui.link @background_color 0.39216 0.39216 0.39216 @title
[ui.env] @url ui.env-help.pd;
#X obj 210 80 cnv 1 555 35 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 Editor of sound envelope function;
#X msg 50 143 ar 10 450 \, bang;
#X obj 50 172 envelope;
#X msg 155 172 adsr 10 20 15 80;
#X msg 338 172 eadsr 180 -2 20 4 30 100 -8;
#X msg 174 201 asr 300 400;
#X msg 357 201 easr 200 2 30 7;
#X msg 194 230 ar 10 80;
#X msg 376 230 ear 10 -4 70 -6;
#X obj 50 287 ui.env @size 240 60;
#X text 405 287 Cmd+Click to play envelope;
#X obj 50 359 env->vline @sync 1;
#X obj 50 388 vline~;
#X obj 146 388 osc~ 1000;
#X obj 50 417 *~;
#X obj 50 446 ui.gain~ @size 120 16;
#X obj 280 446 ui.dsp~;
#X obj 50 474 dac~;
#X obj 20 524 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 529 cnv 5 115 25 empty empty mouse_events: 4 10 0 14 -262144
-49933 0;
#X text 110 564 Left-click;
#X text 285 564 on segment: toggle segment selection.;
#X text 110 584 Left-click + ⌥;
#X text 285 584 remove node under cursor.;
#X text 110 604 Left-click + ⇧;
#X text 285 604 create new node under cursor.;
#X text 110 624 Left-click + ⌘;
#X text 285 624 output envelope on mouse DOWN.;
#X text 110 644 Left-click;
#X text 285 644 output envelope on mouse UP if @output_mode = mouse_up.;
#X text 110 664 Mouse-drag;
#X text 285 664 move node under the cursor. Note: node can have fixed
Y coordinate \, output envelope if @output_mode = drag.;
#X text 110 699 Right-click;
#X text 285 699 on segment: segment type context menu. on selected
node: node context menu. if no selection: opens standard envelope menu.;
#X text 110 734 Right-click + ⇧;
#X text 285 734 open object help.;
#X text 110 754 Right-click + ⌥;
#X text 285 754 open properties dialog.;
#X text 110 774 Mouse-wheel;
#X text 285 774 on selected segment: change curve of exp or sigmoid
curve. on selected node: move node up/down.;
#X text 110 809 Right-click + ⇧;
#X text 285 809 open object help.;
#X text 61 809 [Edit];
#X text 110 829 Right-click + ⌥;
#X text 285 829 open properties dialog.;
#X text 61 829 [Edit];
#X obj 20 859 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 864 cnv 5 98 25 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 899 @length;
#X text 245 899 Get/Set envelope time length. Type: float. Units: 'ms'.
Default value: 400\. Min value: 10\.;
#X msg 110 941 @mouse_events;
#X text 245 941 Get/Set mouse events output mode. If on outputs @mouse_down
\, @mouse_up and @mouse_drag events. Type: bool. Default value: 0\.;
#X msg 110 998 @norm;
#X text 245 998 Get/Set normalize input values. Type: bool. Default
value: 1\.;
#X msg 110 1040 @output_mode;
#X text 245 1040 Get/Set output envelope mode. If set to "mouse_up"
- output envelope on mouse up if Ctrl/Cmd key not pressed. If set to
"drag" - output envelope on every change. Note: in any mode you can
output evenlope with Ctrl/Cmd + mouse down. Type: symbol. Default value:
mouse_up. Allowed values: mouse_up \, drag.;
#X msg 110 1143 @receive;
#X text 245 1143 Get/Set receive source. Type: symbol. Default value:
(null).;
#X msg 110 1173 @send;
#X text 245 1173 Get/Set send destination. Type: symbol. Default value:
(null).;
#X msg 110 1215 @active_color;
#X text 245 1215 Get/Set element active color (list of red \, green
\, blue values in 0-1 range). Type: list. Default value: 0 0.75 1 1\.;
#X msg 110 1257 @background_color;
#X text 245 1257 Get/Set element background color (list of red \, green
\, blue values in 0-1 range). Type: list. Default value: 0.93 0.93
0.93 1\.;
#X msg 110 1314 @border_color;
#X text 245 1314 Get/Set border color (list of red \, green \, blue
values in 0-1 range). Type: list. Default value: 0.6 0.6 0.6 1\.;
#X msg 110 1356 @line_color;
#X text 245 1356 Get/Set line color (list of red \, green \, blue values
in 0-1 range). Type: list. Default value: 0.1 0.1 0.1 1\.;
#X msg 110 1398 @fontname;
#X text 245 1398 Get/Set fontname. Type: symbol. Default value: Helvetica.
Allowed values: Courier \, DejaVu \, Helvetica \, Monaco \, Times.;
#X msg 110 1440 @fontsize;
#X text 245 1440 Get/Set fontsize. Type: int. Default value: 11\. Range:
4\...100\.;
#X msg 110 1482 @fontslant;
#X text 245 1482 Get/Set font slant. Type: symbol. Default value: roman.
Allowed values: roman \, italic.;
#X msg 110 1524 @fontweight;
#X text 245 1524 Get/Set font weight. Type: symbol. Default value:
normal. Allowed values: normal \, bold.;
#X msg 110 1566 @pinned;
#X text 245 1566 Get/Set pin mode. if 1 - put element to the lowest
level. Type: bool. Default value: 0\.;
#X msg 110 1608 @presetname;
#X text 245 1608 Get/Set preset name for using with [ui.preset]. Type:
symbol. Default value: (null).;
#X msg 110 1650 @size;
#X text 245 1650 Get/Set element size (width \, height pair). Type:
list. Default value: 200 150\.;
#X obj 20 1702 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1707 cnv 5 73 25 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 1742 adsr;
#X text 245 1742 creates ADSR envelope with one stop point. Arguments
are:;
#X obj 255 1765 cnv 1 54 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1765 ATTACK: attack time. Type: float. Min value: 0\. Units:
'ms'.;
#X obj 255 1788 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1788 DECAY: decay time. Type: float. Min value: 0\. Units:
'ms'.;
#X obj 255 1811 cnv 1 60 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1811 SUSTAIN: sustain level. Type: float. Range: 0\...100\.
Units: '%'.;
#X obj 255 1849 cnv 1 60 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1849 RELEASE: release time. Type: float. Min value: 0\.
Units: 'ms'.;
#X msg 110 1889 ar;
#X text 245 1889 creates AR envelope without stop points. Arguments
are:;
#X obj 255 1912 cnv 1 54 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1912 ATTACK: attack time. Type: float. Min value: 0\. Units:
'ms'.;
#X obj 255 1935 cnv 1 60 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1935 RELEASE: release time. Type: float. Min value: 0\.
Units: 'ms'.;
#X msg 110 1975 asr;
#X text 245 1975 creates ASR envelope with one stop point. Arguments
are:;
#X obj 255 1998 cnv 1 54 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1998 ATTACK: attack time. Type: float. Min value: 0\. Units:
'ms'.;
#X obj 255 2021 cnv 1 60 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2021 RELEASE: release time. Type: float. Min value: 0\.
Units: 'ms'.;
#X msg 110 2061 at;
#X text 245 2061 output envelope value at specified position to second
outlet. Arguments are:;
#X obj 255 2099 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2099 VAL: position (in milliseconds if unit arg is ommited
). Type: float.;
#X obj 255 2137 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2137 [UNIT]: position unit: ms \, % or *(phase). Type:
symbol. Allowed values: ms \, % \, *.;
#X msg 110 2177 clear;
#X text 245 2177 clear specified preset. Arguments are:;
#X obj 255 2200 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2200 IDX: preset index. Type: int. Min value: 0\.;
#X msg 110 2225 eadsr;
#X text 245 2225 creates exponential ADSR envelope with one stop point.
Arguments are:;
#X obj 255 2263 cnv 1 54 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2263 ATTACK: attack time. Type: float. Min value: 0\. Units:
'ms'.;
#X obj 255 2286 cnv 1 99 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2286 ATTACK_CURVE: attack segment curve. Type: float.;
#X obj 255 2309 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2309 DECAY: decay time. Type: float. Min value: 0\. Units:
'ms'.;
#X obj 255 2332 cnv 1 91 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2332 DECAY_CURVE: decay segment curve. Type: float.;
#X obj 255 2355 cnv 1 60 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2355 SUSTAIN: sustain level. Type: float. Range: 0\...100\.
Units: '%'.;
#X obj 255 2393 cnv 1 60 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2393 RELEASE: release time. Type: float. Min value: 0\.
Units: 'ms'.;
#X obj 255 2431 cnv 1 106 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2431 RELEASE_CURVE: release segment curve. Type: float.;
#X msg 110 2456 ear;
#X text 245 2456 creates exponential AR envelope without stop points.
Arguments are:;
#X obj 255 2494 cnv 1 54 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2494 ATTACK: attack time. Type: float. Units: 'ms'.;
#X obj 255 2517 cnv 1 99 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2517 ATTACK_CURVE: attack segment curve. Type: float.;
#X obj 255 2540 cnv 1 60 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2540 RELEASE: release time. Type: float. Units: 'ms'.;
#X obj 255 2563 cnv 1 106 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2563 RELEASE_CURVE: release segment curve. Type: float.;
#X msg 110 2588 easr;
#X text 245 2588 creates exponential AR envelope with one stop point.
Arguments are:;
#X obj 255 2626 cnv 1 54 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2626 ATTACK: attack time. Type: float. Min value: 0\. Units:
'ms'.;
#X obj 255 2649 cnv 1 99 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2649 ATTACK_CURVE: attack segment curve. Type: float.;
#X obj 255 2672 cnv 1 60 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2672 RELEASE: release time. Type: float. Min value: 0\.
Units: 'ms'.;
#X obj 255 2710 cnv 1 106 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2710 RELEASE_CURVE: release segment curve. Type: float.;
#X msg 110 2735 exp;
#X text 245 2735 creates exponential-segmented envelope with arbitrary
number of segments. Arguments are:;
#X obj 255 2773 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2773 VAL0: begin value. Type: float.;
#X obj 255 2796 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2796 LEN0: line length. Type: float. Min value: 1\. Units:
'ms'.;
#X obj 255 2819 cnv 1 52 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2819 CURVE0: segment curve. Type: float.;
#X obj 255 2842 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2842 VAL1: value. Type: float.;
#X obj 255 2865 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2865 [LEN1]: segment length. Type: float.;
#X obj 255 2888 cnv 1 63 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2888 [CURVE1]: segment curve. Type: float.;
#X obj 255 2911 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2911 [VAL2]: value. Type: float.;
#X msg 110 2936 interp;
#X text 245 2936 for this object acts as *load* \, no interpolation
performed.;
#X msg 110 2964 line;
#X text 245 2964 creates line-segmented envelope with arbitrary number
of segments. Arguments are:;
#X obj 255 3002 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3002 VAL0: begin value. Type: float.;
#X obj 255 3025 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3025 LEN0: line length. Type: float. Min value: 1\. Units:
'ms'.;
#X obj 255 3048 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3048 VAL1: value. Type: float.;
#X obj 255 3071 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3071 [LEN1]: segment length. Type: float.;
#X obj 255 3094 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3094 [VAL2]: value. Type: float.;
#X msg 110 3119 load;
#X text 245 3119 loads specified preset. Arguments are:;
#X obj 255 3142 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3142 IDX: preset index. Type: int.;
#X msg 110 3167 pos;
#X text 245 3167 set UI element position. Arguments are:;
#X obj 255 3190 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3190 X: top left x-coord. Type: float.;
#X obj 255 3213 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3213 Y: top right y-coord. Type: float.;
#X msg 110 3238 sigmoid;
#X text 245 3238 creates sigmoid-segmented envelope with arbitrary
number of segments. Arguments are:;
#X obj 255 3276 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3276 VAL0: begin value. Type: float.;
#X obj 255 3299 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3299 LEN0: line length. Type: float. Min value: 1\. Units:
'ms'.;
#X obj 255 3322 cnv 1 52 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3322 CURVE0: segment curve. Type: float.;
#X obj 255 3345 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3345 VAL1: value. Type: float.;
#X obj 255 3368 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3368 [LEN1]: segment length. Type: float.;
#X obj 255 3391 cnv 1 63 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3391 [CURVE1]: segment curve. Type: float.;
#X obj 255 3414 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3414 [VAL2]: value. Type: float.;
#X msg 110 3439 sin2;
#X text 245 3439 creates quadratic sine-segmented envelope with arbitrary
number of segments. Arguments are:;
#X obj 255 3477 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3477 VAL0: begin value. Type: float.;
#X obj 255 3500 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3500 LEN0: line length. Type: float. Min value: 1\. Units:
'ms'.;
#X obj 255 3523 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3523 VAL1: value. Type: float.;
#X obj 255 3546 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3546 [LEN1]: segment length. Type: float.;
#X obj 255 3569 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3569 [VAL2]: value. Type: float.;
#X msg 110 3594 step;
#X text 245 3594 creates step-segmented envelope with arbitrary number
of segments. Arguments are:;
#X obj 255 3632 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3632 VAL0: begin value. Type: float.;
#X obj 255 3655 cnv 1 36 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3655 LEN0: step length. Type: float. Min value: 1\. Units:
'ms'.;
#X obj 255 3678 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3678 VAL1: value. Type: float.;
#X obj 255 3701 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3701 [LEN1]: segment length. Type: float.;
#X obj 255 3724 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3724 [VAL2]: value. Type: float.;
#X msg 110 3749 store;
#X text 245 3749 stores specified preset. Arguments are:;
#X obj 255 3772 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3772 IDX: preset index. Type: int.;
#X obj 20 3807 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 3812 cnv 5 64 25 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 3813 1\.;
#X text 150 3813 *data*;
#X text 245 3813 set new envelope and output it.;
#X text 150 3833 *bang*;
#X text 245 3833 output current envelope.;
#X obj 20 3863 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 3868 cnv 5 73 25 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 3869 1\.;
#X text 245 3869 envelope.;
#X text 110 3889 2\.;
#X text 245 3889 float: envelope value at time moment.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 68 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 116 45 ::;
#X obj 133 48 ui.link @title ui @url ceammc.ui-help.pd;
#X obj 1 3939 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 3942 library: ceammc v0.9.7;
#N canvas 10 3961 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.7;
#X text 10 54 object:;
#X text 120 54 ui.env;
#X text 10 76 category:;
#X text 120 76 ui;
#X text 10 98 since:;
#X text 120 98 0.5;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 ui \, envelope;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pd-ceammc @url
https://github.com/uliss/pd-ceammc;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 3961 pd info;
#X connect 6 0 7 0;
#X connect 7 0 14 0;
#X connect 8 0 14 0;
#X connect 10 0 14 0;
#X connect 12 0 14 0;
#X connect 9 0 14 0;
#X connect 11 0 14 0;
#X connect 13 0 14 0;
#X connect 14 0 16 0;
#X connect 16 0 17 0;
#X connect 17 0 19 0;
#X connect 18 0 19 1;
#X connect 19 0 20 0;
#X connect 20 0 22 0;
#X connect 20 0 22 1;