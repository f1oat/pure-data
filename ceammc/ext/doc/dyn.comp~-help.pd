#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 529 50 cnv 1 236 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 529 50 mono dynamic range compressors;
#X obj 1 1 cnv 5 765 40 empty empty dyn.comp~ 20 20 0 20 -104026 -4096
0;
#X obj 673 11 dyn.comp~;
#X obj 210 80 cnv 1 555 34 empty empty empty 17 7 0 10 -257983 -1 0;
#X obj 215 80 ui.link @background_color 0.98039 0.98039 0.98039 @title
Dynamic range             compression @url
https://en.wikipedia.org/wiki/Dynamic_range_compression;
#X obj 50 142 ui.hsl -60 20 @show_value 1;
#X obj 338 142 ui.dsp~;
#X obj 50 171 dbfs->amp;
#X obj 50 200 sig~;
#X obj 146 200 ui.hsl 1 16 @show_value 1;
#X obj 280 200 ui.hsl -60 0 @show_value 1;
#X msg 146 243 @ratio \$1;
#X msg 280 243 @threshold \$1;
#X obj 50 286 dyn.comp~ 3 -60 10 100;
#X obj 50 315 env~;
#X obj 203 315 ui.hsl @active_scale 1;
#X obj 50 344 - 100;
#X floatatom 50 373 5 0 0 0 - - -;
#X obj 20 405 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 410 cnv 5 90 25 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 445 1.;
#X text 150 445 float;
#X obj 246 446 cnv 1 47 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 445 RATIO: compression ratio (1 = no compression \, >1
means compression). Type: float. Range: 1...16;
#X text 110 480 2.;
#X text 150 480 float;
#X obj 246 481 cnv 1 109 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 480 THRESHOLD(db): level threshold above which compression
kicks in. Type: float. Range: -90...0;
#X text 110 515 3.;
#X text 150 515 float;
#X obj 246 516 cnv 1 86 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 515 ATTACK(ms): attack time = time constant when level
& compression going up. Type: float. Range: 0.1...100;
#X text 110 550 4.;
#X text 150 550 float;
#X obj 246 551 cnv 1 93 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 550 RELEASE(ms): release time = time constant coming out
of compression. Type: float. Range: 1...500;
#X obj 20 595 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 600 cnv 5 98 25 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 635 @id;
#X text 245 635 (initonly) Get/Set OSC address id. If specified \,
bind all properties to /ID/dyn_comp/PROP_NAME osc address \, if empty
bind to /dyn_comp/PROP_NAME. Type: symbol.;
#X msg 110 692 @osc;
#X text 245 692 (initonly) Get/Set OSC server name to listen. Type:
symbol.;
#X msg 110 722 @active;
#X text 245 722 Turn on/off dsp processing. Type: bool. Default value:
1.;
#X msg 110 752 @attack;
#X text 245 752 Get/Set time constant when level & compression going
up. Type: float. Units: 'ms'. Default value: 10. Range: 0.1...100.;
#X msg 110 809 @bypass;
#X text 245 809 Get/Set bypass flag. If true: bypass 'effected' signal.
Type: bool. Default value: 0.;
#X msg 110 851 @gain;
#X text 245 851 Get/Set make up gain: applied to the signal after the
compression takes place. Type: float. Units: 'db'. Default value: 0.
Range: -18...18.;
#X msg 110 908 @ratio;
#X text 245 908 Get/Set compression ratio (1 = no compression \, >1
means compression). Type: float. Default value: 1. Range: 1...16.;
#X msg 110 950 @refresh;
#X text 245 950 Get/Set compression level output time interval. If
0 - no output. Type: int. Units: 'ms'. Default value: 100. Range: 0...1000.;
#X msg 110 1007 @release;
#X text 245 1007 Get/Set release time = time constant coming out of
compression. Type: float. Units: 'ms'. Default value: 50. Range: 1...500.;
#X msg 110 1064 @threshold;
#X text 245 1064 Get/Set level threshold above which compression kicks
in (100 dB = max level). Type: float. Units: 'db'. Default value: -10.
Range: -90...0.;
#X msg 110 1121 @level?;
#X text 245 1121 (readonly) Get current level of compression. Type:
float. Default value: 0. Range: 0...1.;
#X obj 20 1173 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1178 cnv 5 73 25 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 1213 preset;
#X text 245 1213 choose predefined preset. Arguments are:;
#X obj 255 1236 cnv 1 52 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1236 PRESET: name. Type: symbol. Allowed values: vocal
\, drums \, bass \, strings.;
#X msg 110 1276 reset;
#X text 245 1276 reset to initial state.;
#X obj 20 1314 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1319 cnv 5 64 25 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1320 1.;
#X text 245 1320 input signal.;
#X obj 20 1350 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1355 cnv 5 73 25 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1356 1.;
#X text 245 1356 output compressed signal.;
#X text 110 1376 2.;
#X text 245 1376 float: output current compression level in [0..1].;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 68 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 116 45 ::;
#X obj 133 48 ui.link @title dyn @url ceammc.dyn-help.pd;
#X obj 1 1426 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1429 library: ceammc v0.9.7;
#X text 591 1441 see also:;
#X obj 666 1441 dyn.comp2~;
#N canvas 10 1448 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.7;
#X text 10 54 object:;
#X text 120 54 dyn.comp~;
#X text 10 76 category:;
#X text 120 76 dyn;
#X text 10 98 since:;
#X text 120 98 0.1;
#X text 10 120 authors:;
#X text 120 120 Alex Nadzharov \, Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 compressor;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pd-ceammc @url
https://github.com/uliss/pd-ceammc;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1448 pd info;
#X connect 6 0 8 0;
#X connect 8 0 9 0;
#X connect 10 0 12 0;
#X connect 11 0 13 0;
#X connect 9 0 14 0;
#X connect 12 0 14 0;
#X connect 13 0 14 0;
#X connect 14 0 15 0;
#X connect 14 1 16 0;
#X connect 15 0 17 0;
#X connect 17 0 18 0;