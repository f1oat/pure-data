#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 636 50 cnv 1 129 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 636 50 mono signal gate;
#X obj 1 1 cnv 5 765 40 empty empty dyn.gate~ 20 20 0 20 -104026 -4096
0;
#X obj 673 11 dyn.gate~;
#X obj 50 118 osc~ 440;
#X obj 194 118 ui.hsl -60 0 @show_value 1;
#X obj 194 147 dbfs->amp;
#X obj 50 176 gain~;
#X obj 194 176 ui.hsl -60 0 @show_value 1;
#X msg 194 205 @threshold \$1;
#X obj 50 234 dyn.gate~ -10;
#X obj 50 262 ui.hgain~;
#X obj 194 262 ui.dsp~;
#X obj 50 291 dac~;
#X obj 20 341 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 346 cnv 5 90 25 empty empty arguments: 4 12 0 14 -262144
-49933 0;
#X obj 735 349 ui.link @background_color 0.98039 0.98039 0.98039
@title [?] @url ceammc.args-info.pd;
#X text 110 381 1\.;
#X text 150 381 float;
#X obj 246 382 cnv 1 109 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 381 THRESHOLD(db): dB level threshold above which gate
opens. Type: float. Range: -90\...0;
#X text 110 416 2\.;
#X text 150 416 float;
#X obj 246 417 cnv 1 86 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 416 ATTACK(ms): attack time = time constant (ms) for gate
to open. Type: float. Range: 0\...500;
#X text 110 451 3\.;
#X text 150 451 float;
#X obj 246 452 cnv 1 70 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 451 HOLD(ms): hold time = time (ms) gate stays open after
signal level < threshold. Type: float. Range: 1\...500;
#X text 110 486 4\.;
#X text 150 486 float;
#X obj 246 487 cnv 1 93 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 486 RELEASE(ms): release time = time constant (ms) for
gate to close. Type: float. Range: 1\...500;
#X obj 20 531 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 536 cnv 5 98 25 empty empty properties: 4 12 0 14 -262144
-49933 0;
#X obj 735 539 ui.link @background_color 0.98039 0.98039 0.98039
@title [?] @url ceammc.props-info.pd;
#X msg 110 571 @id;
#X text 245 571 (initonly) Get/Set OSC address id. If specified \,
bind all properties to /ID/dyn_gate/PROP_NAME osc address \, if empty
bind to /dyn_gate/PROP_NAME. Type: symbol.;
#X msg 110 628 @osc;
#X text 245 628 (initonly) Get/Set OSC server name to listen. Type:
symbol.;
#X msg 110 658 @active;
#X text 245 658 Turn on/off dsp processing. Type: bool. Default value:
1\.;
#X msg 110 688 @attack;
#X text 245 688 Get/Set attack time = time constant (ms) for gate to
open. Type: float. Units: 'ms'. Default value: 0.1\. Range: 0\...500\.;
#X msg 110 745 @bypass;
#X text 245 745 Get/Set bypass flag. If true: bypass 'effected' signal.
Type: bool. Default value: 0\.;
#X msg 110 787 @hold;
#X text 245 787 Get/Set hold time = time (ms) gate stays open after
signal level < threshold. Type: float. Units: 'ms'. Default value:
100\. Range: 1\...500\.;
#X msg 110 844 @release;
#X text 245 844 Get/Set release time = time constant (ms) for gate
to close. Type: float. Units: 'ms'. Default value: 20\. Range: 1\...500\.;
#X msg 110 901 @threshold;
#X text 245 901 Get/Set dB level threshold above which gate opens.
Type: float. Units: 'db'. Default value: -60\. Range: -90\...0\.;
#X obj 20 953 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 958 cnv 5 73 25 empty empty methods: 4 12 0 14 -262144
-49933 0;
#X msg 110 993 reset;
#X text 245 993 reset to initial state.;
#X obj 20 1031 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1036 cnv 5 64 25 empty empty inlets: 4 12 0 14 -262144
-49933 0;
#X text 110 1037 1\.;
#X text 245 1037 input signal.;
#X text 110 1057 2\.;
#X text 150 1057 *float*;
#X text 245 1057 set threshold.;
#X obj 20 1087 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1092 cnv 5 73 25 empty empty outlets: 4 12 0 14 -262144
-49933 0;
#X text 110 1093 1\.;
#X text 245 1093 output signal.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 68 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 116 45 ::;
#X obj 133 48 ui.link @title dyn @url ceammc.dyn-help.pd;
#X obj 1 1143 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1146 library: ceammc v0.9.7;
#X text 591 1158 see also:;
#X obj 666 1158 dyn.gate2~;
#N canvas 10 1165 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.7;
#X text 10 54 object:;
#X text 120 54 dyn.gate~;
#X text 10 76 category:;
#X text 120 76 dyn;
#X text 10 98 since:;
#X text 120 98 0.1;
#X text 10 120 authors:;
#X text 120 120 Alex Nadzharov \, Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 gate;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pd-ceammc @url
https://github.com/uliss/pd-ceammc;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1165 pd info;
#X connect 5 0 6 0;
#X connect 4 0 7 0;
#X connect 8 0 9 0;
#X connect 7 0 10 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 11 0 13 0;
#X connect 11 0 13 1;
#X connect 6 0 7 1;