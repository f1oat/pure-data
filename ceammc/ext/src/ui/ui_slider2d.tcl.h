// this is autogenerated file: do not edit
// clang-format off
#ifndef ui_slider2d_tcl_h_
#define ui_slider2d_tcl_h_
constexpr const char* ui_slider2d_tcl = 
"namespace eval ::ui {\n"
"namespace eval slider2d {\n"
"    variable lbl_font_size 7\n"
"    variable lbl_font_family \"Helvetica\"\n"
"}\n"
"proc slider2d_label_font {zoom} {\n"
"    return \"$sliders::lbl_font_family [expr $sliders::lbl_font_size*$zoom] normal roman\"\n"
"}\n"
"proc slider2d_draw_grid {cnv id w h zoom color_bg} {\n"
"    set c [::ceammc::ui::widget_canvas $cnv $id]\n"
"    set t [::ceammc::ui::widget_tag $id]\n"
"    set grid_xstep [expr $w / 10.0]\n"
"    set grid_ystep [expr $h / 10.0]\n"
"    # draw center crossing\n"
"    set lx [expr round(5*$grid_xstep)]\n"
"    set ly [expr round(5*$grid_ystep)]\n"
"    set xcolor [::tk::Darken $color_bg 150]\n"
"    $c create line 0 $ly $w $ly -width 3 -fill $xcolor -tag $t\n"
"    $c create line $lx 0 $lx $h -width 3 -fill $xcolor -tag $t\n"
"    set grid_color [::tk::Darken $color_bg 80]\n"
"    # draw lines\n"
"    for { set i 1 } { $i < 10 } { incr i } {\n"
"        set x [expr round($i * $grid_xstep)]\n"
"        set y [expr round($i * $grid_ystep)]\n"
"        $c create line 0 $y $w $y -width 1 -fill $grid_color -tag $t\n"
"        $c create line $x 0 $x $h -width 1 -fill $grid_color -tag $t\n"
"    }\n"
"}\n"
"proc slider2d_draw_range {cnv id w h zoom show_grid color_txt color_bg xl xr yt yb vx vy} {\n"
"    set c [::ceammc::ui::widget_canvas $cnv $id]\n"
"    set t [::ceammc::ui::widget_tag $id]\n"
"    set ft [slider2d_label_font $zoom]\n"
"    set padx [expr 2*$zoom]\n"
"    set pady [expr 3*$zoom]\n"
"    if { $show_grid == 1 } {\n"
"        set xc [expr $w/2+$padx]\n"
"        set yc [expr $h/2]\n"
"        $c create text $xc $pady -text $yt -anchor nw -justify left -font $ft -fill $color_txt -tag $t\n"
"        $c create text $xc $h    -text $yb -anchor sw -justify left -font $ft -fill $color_txt -tag $t\n"
"        $c create text $padx $yc -text $xl -anchor sw -justify left -font $ft -fill $color_txt -tag $t\n"
"        $c create text [expr $w-$padx] $yc -text $xr -anchor se -justify right -font $ft -fill $color_txt -tag $t\n"
"    } else {\n"
"        set xc [expr $w/2]\n"
"        set yc [expr $h/2]\n"
"        $c create text $xc $pady -text $yt -anchor n -justify center -font $ft -fill $color_txt -tag $t\n"
"        $c create text $xc $h    -text $yb -anchor s -justify center -font $ft -fill $color_txt -tag $t\n"
"        $c create text $padx $yc -text $xl -anchor w -justify left -font $ft -fill $color_txt -tag $t\n"
"        $c create text [expr $w-$padx] $yc -text $xr -anchor e -justify right -font $ft -fill $color_txt -tag $t\n"
"    }\n"
"    set tid [$c create text [expr $w-$padx] $pady -text \"$vx $vy\" -justify right -anchor ne -font $ft -fill $color_txt -tag $t]\n"
"    # calc bbox for bg rectangle\n"
"    lassign [$c bbox $tid] tx0 ty0 tx1 ty1\n"
"    set rx0 [expr $tx0-$padx]\n"
"    set rx1 [expr $tx1+$padx]\n"
"    set ry0 -1\n"
"    set ry1 [expr $ty1+$padx-1]\n"
"    # draw label bg rectangle\n"
"    set rid [$c create rectangle $rx0 $ry0 $rx1 $ry1 \\\n"
"        -outline $color_bg -fill $color_bg -width 1 -tags $t]\n"
"    $c raise $tid $rid\n"
"}\n"
"proc slider2d_draw_knob {cnv id x y vx vy w h zoom show_grid show_range active} {\n"
"    set c [::ceammc::ui::widget_canvas $cnv $id]\n"
"    set t [::ceammc::ui::widget_tag $id]\n"
"    # draw guide lines\n"
"    if {$show_grid == 0} {\n"
"        set gcolor \"#00C0F0\"\n"
"        $c create line $x 0 $x $h -width 1 -fill $gcolor -tag $t\n"
"        $c create line 0 $y $w $y -width 1 -fill $gcolor -tag $t\n"
"    }\n"
"    # knob\n"
"    variable sz\n"
"    variable color_bd\n"
"    variable color_bg\n"
"    if { $h < $w } { set sz [expr $h/20.0] } { set sz [expr $w/20.0] }\n"
"    if { $sz < 2 } { set sz 2 }\n"
"    if { $sz > 10 } { set sz 10 }\n"
"    if { $active == 1 } {\n"
"        set color_bg \"#003070\"\n"
"        set color_bd \"#00C0FF\"\n"
"    } else {\n"
"        set color_bg \"#C0C0C0\"\n"
"        set color_bd \"#707070\"\n"
"    }\n"
"    set knid [$c create rect [expr $x-$sz] [expr $y-$sz] [expr $x+$sz] [expr $y+$sz] \\\n"
"        -width 1 -outline $color_bd -fill $color_bg -tag $t]\n"
"    if {$show_range == 0 } { ceammc_cnv_tooltip $c $knid \"$vx $vy\" }\n"
"}\n"
"proc slider2d_update {cnv id x y vx vy w h zoom show_grid show_range mouse_down color_bg color_bd xl xr yt yb} {\n"
"    set c [::ceammc::ui::widget_canvas $cnv $id]\n"
"    set t [::ceammc::ui::widget_tag $id]\n"
"    $c delete $t\n"
"    if { $show_grid == 1 } { slider2d_draw_grid $cnv $id $w $h $zoom $color_bg }\n"
"    if { $show_range == 1 } { slider2d_draw_range $cnv $id $w $h $zoom $show_grid $color_bd $color_bg $xl $xr $yt $yb $vx $vy }\n"
"    slider2d_draw_knob $cnv $id $x $y $vx $vy $w $h $zoom $show_grid $show_range $mouse_down\n"
"}\n"
"proc slider2d_draw_labels {cnv id w h zoom color lmin lmax} {\n"
"    set c [::ceammc::ui::widget_canvas $cnv $id]\n"
"    set f [sliders_label_font $zoom]\n"
"    set t [::ceammc::ui::widget_tag $id]\n"
"    set off [expr 3 * $zoom]\n"
"    set x0 $off\n"
"    set y0 $off\n"
"    set x1 $off\n"
"    set y1 [expr $h-$off]\n"
"    $c create text $x1 $y1 -text $lmin -anchor sw -justify left -font $f -fill $color -width 0 -tags $t\n"
"    $c create text $x0 $y0 -text $lmax -anchor nw -justify left -font $f -fill $color -width 0 -tags $t\n"
"}\n"
"}\n"
;
#endif
// clang-format on
