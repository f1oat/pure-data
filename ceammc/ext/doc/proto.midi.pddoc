<?xml version='1.0' encoding='utf-8'?>
<pddoc xmlns:xi="http://www.w3.org/2001/XInclude" version="1.0">
    <object name="proto.midi">
        <title>proto.midi</title>
        <meta>
            <authors>
                <author>Serge Poltavsky</author>
            </authors>
            <description>raw midi encoder/parser</description>
            <license>GPL3 or later</license>
            <library>ceammc</library>
            <category>proto</category>
            <keywords>parser midi</keywords>
            <since>0.9.2</since>
        </meta>
        <methods>
            <!-- activesense -->
            <method name="activesense">send Active Sense realtime message (0xFE)</method>
            <!-- aftertouch -->
            <method name="aftertouch">send After Touch (Mono) message 
            <param name="CH" type="int" minvalue="0" maxvalue="15" required="true">midi
            channel</param>
            <param name="VEL" type="int" minvalue="0" maxvalue="127" required="true">
            velocity</param></method>
            <!-- cc -->
            <method name="cc">send Control Change message 
            <param name="CH" type="int" minvalue="0" maxvalue="15" required="true">midi
            channel</param>
            <param name="CTL" type="int" minvalue="0" maxvalue="127" required="true">control
            number</param>
            <param name="VAL" type="int" minvalue="0" maxvalue="127" required="true">control
            value</param></method>
            <!-- clock -->
            <method name="clock">send Timing Clock realtime message (0xF8)</method>
            <!-- continue -->
            <method name="continue">send Continue realtime message (0xFB)</method>
            <!-- note -->
            <method name="note">alias to [noteon(</method>
            <!-- noteoff -->
            <method name="noteoff">send Note Off message 
            <param name="CH" type="int" minvalue="0" maxvalue="15" required="true">midi
            channel</param>
            <param name="NOTE" type="int" minvalue="0" maxvalue="127" required="true">midi
            note</param>
            <param name="VEL" type="int" minvalue="0" maxvalue="127" required="true">
            velocity</param></method>
            <!-- noteon -->
            <method name="noteon">send Note On message 
            <param name="CH" type="int" minvalue="0" maxvalue="15" required="true">midi
            channel</param>
            <param name="NOTE" type="int" minvalue="0" maxvalue="127" required="true">midi
            note</param>
            <param name="VEL" type="int" minvalue="0" maxvalue="127" required="true">
            velocity</param></method>
            <!-- notes_off -->
            <method name="notes_off">send All Notes Off message 
            <param name="CH" type="int" minvalue="0" maxvalue="15" required="false">midi channel.
            if missing or -1: send to all channels</param></method>
            <!-- panic -->
            <method name="panic">send All Notes Off message 
            <param name="CH" type="int" minvalue="0" maxvalue="15" required="false">midi channel.
            if missing or -1: send to all channels</param></method>
            <!-- pitchwheel -->
            <method name="pitchwheel">send Pitch Wheel message 
            <param name="CH" type="int" minvalue="0" maxvalue="15" required="true">midi
            channel</param>
            <param name="VAL" type="int" minvalue="-8192" maxvalue="8191" required="true">
            value</param></method>
            <!-- polytouch -->
            <method name="polytouch">send After Touch (Poly) message 
            <param name="CH" type="int" minvalue="0" maxvalue="15" required="true">midi
            channel</param>
            <param name="NOTE" type="int" minvalue="0" maxvalue="127" required="true">midi
            note</param>
            <param name="VEL" type="int" minvalue="0" maxvalue="127" required="true">
            velocity</param></method>
            <!-- program -->
            <method name="program">send Program Change message 
            <param name="CH" type="int" minvalue="0" maxvalue="15" required="true">midi
            channel</param>
            <param name="N" type="int" minvalue="0" maxvalue="127" required="true">program
            number</param></method>
            <!-- raw -->
            <method name="raw">send raw midi bytes 
            <param name="DATA" type="list" required="true">raw midi data: integers in [0-127] range
            or hex values: Ox3F etc.</param></method>
            <!-- songpos -->
            <method name="songpos">send Song Position Pointer message (0xF2) 
            <param name="IDX" type="int" minvalue="0" required="true">position</param>
            <param name="DUR" type="int" enum="1 2 4 8 16" default="16" required="false">position
            duration. By default is sixteen note.</param></method>
            <!-- songsel -->
            <method name="songsel">send Song Select message (0xF3) 
            <param name="IDX" type="int" minvalue="0" maxvalue="127" required="true">song
            index</param></method>
            <!-- sound_off -->
            <method name="sound_off">send All Sound Off message 
            <param name="CH" type="int" minvalue="0" maxvalue="15" required="false">midi channel.
            if missing or -1: send to all channels</param></method>
            <!-- start -->
            <method name="start">send Start realtime message (0xFA)</method>
            <!-- stop -->
            <method name="stop">send Stop realtime message (0xFC)</method>
            <!-- sysex -->
            <method name="sysex">send SysEx message (0xF0) 
            <param name="BYTES" type="list" minvalue="0" maxvalue="127" required="true">sysex
            message body</param></method>
            <!-- sysreset -->
            <method name="sysreset">send System Reset realtime message (0xFF)</method>
            <!-- tick -->
            <method name="tick">send Timing Tick realtime message (0xF9)</method>
            <!-- timecode -->
            <method name="timecode">send midi timecode as series of MTC quarter frame messages
            (0xF1) 
            <param name="TIME" type="atom" required="true">time value. Various formats can be used:
            100sec, 1h, 20.5min or 01:12:34.11.</param>
            <param name="FPS" type="float" enum="24 25 29.97 30" required="true">
            framerate</param></method>
            <!-- tunerequest -->
            <method name="tunerequest">send Tune Request message (0xF6)</method>
        </methods>
        <inlets>
            <inlet>
                <xinfo on="float">raw midi input bytes</xinfo>
                <xinfo on="list">raw midi input bytes</xinfo>
            </inlet>
        </inlets>
        <outlets>
            <outlet>float: raw midi bytes</outlet>
            <outlet>parsed messages with selector (output format same as for corresponding
            methods)</outlet>
        </outlets>
        <example>
            <pdascii>
<![CDATA[
[midiin]  [S digits=16] [cc 0 23 121 #a( [note 1 60 90 #c(
|         |
|         [sym->any]    [start #b(       [sound_off #d(
|         |
|         |
|         |
|         |
[proto.midi         #x]
|         ^|
|         [ui.dt]
|
[print MIDI]

[X a->x]
[X b->x]
[X c->x]
[X d->x]
]]>
            </pdascii>
        </example>
    </object>
</pddoc>
