#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 644 50 cnv 1 121 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 644 50 Ikeda attractor;
#X obj 1 1 cnv 5 765 40 empty empty noise.ikeda 20 20 0 20 -104026
-4096 0;
#X obj 661 11 noise.ikeda;
#X obj 210 80 cnv 1 555 308 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 Ikeda attractor;
#X text 215 105 z[n+1] = a + b*z[n]*exp(kj - pj/(1+|z[n]^2|));
#X text 215 130 where z is a complex number;
#X text 215 155 real number formula by euler returns:;
#X text 215 180 ===;
#X text 215 205 x[n+1] = a + k*(x0*cos(t[n])) - y0*sin(t[n]) );
#X text 215 230 y[n+1] = k*(x0*sin(t[n])) - y0*cos(t[n]);
#X text 215 255 ===;
#X text 215 280 where t[n] = b - p/(1 + x[n]^2 + y[n]^2);
#X text 215 305 a = 0.85 \, b = 0.9 \, k = 0.4 \, p = 7.7;
#X text 215 330 a = 1.0 \, b = 0.9 \, k = 0.4 \, p = 6.0;
#X obj 215 355 ui.link @background_color 0.98039 0.98039 0.98039
@title wiki: Ikeda map @url https://en.wikipedia.org/wiki/Ikeda_map;
#X obj 50 416 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1;
#X obj 50 445 metro 50;
#X obj 69 474 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1;
#X floatatom 184 474 5 0 0 0 - - -;
#X msg 69 503 om \$1;
#X msg 184 503 set \$1;
#X msg 318 503 reset;
#X floatatom 59 532 5 0 0 0 - - -;
#X floatatom 194 532 5 0 0 0 - - -;
#X msg 59 560 x \$1;
#X msg 194 560 y \$1;
#X floatatom 88 589 5 0 0 0 - - -;
#X floatatom 184 589 5 0 0 0 - - -;
#X floatatom 280 589 5 0 0 0 - - -;
#X floatatom 376 589 5 0 0 0 - - -;
#X msg 88 618 a \$1;
#X msg 184 618 b \$1;
#X msg 280 618 c \$1;
#X msg 376 618 p \$1;
#X obj 50 647 noise.ikeda;
#X obj 50 676 ui.display;
#X obj 20 725 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 730 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 765 1\.;
#X text 150 765 float;
#X obj 246 766 cnv 1 17 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 765 A: a value (optional). Type: float.;
#X text 110 785 2\.;
#X text 150 785 float;
#X obj 246 786 cnv 1 16 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 785 B: b value (optional). Type: float.;
#X text 110 805 3\.;
#X text 150 805 float;
#X obj 246 806 cnv 1 16 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 805 K: k value (optional). Type: float.;
#X text 110 825 4\.;
#X text 150 825 float;
#X obj 246 826 cnv 1 16 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 825 P: p value (optional). Type: float.;
#X text 110 845 5\.;
#X text 150 845 float;
#X obj 246 846 cnv 1 24 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 845 NX: nx value (optional). Type: float.;
#X text 110 865 6\.;
#X text 150 865 float;
#X obj 246 866 cnv 1 24 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 865 NY: ny value (optional). Type: float.;
#X obj 20 895 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 900 cnv 5 73 26 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 935 a;
#X text 245 935 Arguments are:;
#X obj 255 958 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 958 A: a value. Type: float.;
#X msg 110 983 b;
#X text 245 983 Arguments are:;
#X obj 255 1006 cnv 1 14 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1006 B: b value. Type: float.;
#X msg 110 1031 c;
#X text 245 1031 Arguments are:;
#X obj 255 1054 cnv 1 14 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1054 K: k value (note the "c" method in original a-chaos
library). Type: float.;
#X msg 110 1094 om;
#X text 245 1094 Arguments are:;
#X obj 255 1117 cnv 1 21 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1117 OM: enables output when cut or fold value is changed.
Type: int.;
#X msg 110 1157 p;
#X text 245 1157 Arguments are:;
#X obj 255 1180 cnv 1 13 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1180 P: p value. Type: float.;
#X msg 110 1205 reset;
#X text 245 1205 reset state.;
#X msg 110 1232 set;
#X text 245 1232 Arguments are:;
#X obj 255 1255 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1255 SET: set to value. Type: float.;
#X msg 110 1280 x;
#X text 245 1280 Arguments are:;
#X obj 255 1303 cnv 1 23 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1303 NX: x value. Type: float.;
#X msg 110 1328 y;
#X text 245 1328 Arguments are:;
#X obj 255 1351 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1351 NY: y value. Type: float.;
#X obj 20 1386 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1391 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1392 1\.;
#X text 150 1392 *bang*;
#X text 245 1392 output value.;
#X obj 20 1422 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1427 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1428 1\.;
#X text 245 1428 x outlet.;
#X text 110 1448 2\.;
#X text 245 1448 y outlet.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title noise @url ceammc.noise-help.pd;
#X obj 1 1498 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1501 library: ceammc v0.9.7;
#N canvas 10 1520 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.7;
#X text 10 54 object:;
#X text 120 54 noise.ikeda;
#X text 10 76 category:;
#X text 120 76 noise;
#X text 10 98 since:;
#X text 120 98 0.5;
#X text 10 120 authors:;
#X text 120 120 Andr√© Sier;
#X text 10 142 license:;
#X text 120 142 %;
#X text 10 164 keywords:;
#X text 120 164 noise;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pd-ceammc @url
https://github.com/uliss/pd-ceammc;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1520 pd info;
#X connect 17 0 18 0;
#X connect 19 0 21 0;
#X connect 20 0 22 0;
#X connect 24 0 26 0;
#X connect 25 0 27 0;
#X connect 28 0 32 0;
#X connect 29 0 33 0;
#X connect 30 0 34 0;
#X connect 31 0 35 0;
#X connect 36 0 37 0;
#X connect 26 0 36 0;
#X connect 27 0 36 0;
#X connect 32 0 36 0;
#X connect 33 0 36 0;
#X connect 34 0 36 0;
#X connect 35 0 36 0;
#X connect 21 0 36 0;
#X connect 22 0 36 0;
#X connect 23 0 36 0;
#X connect 18 0 36 0;