<?xml version="1.0" encoding="utf-8"?>
<pddoc version="1.0">
    <object name="proto.midi.cc">
        <title>proto.midi.cc</title>
        <meta>
            <authors>
                <author>Serge Poltavsky</author>
            </authors>
            <description>raw midi CC encoder/parser</description>
            <license>GPL3 or later</license>
            <library>ceammc</library>
            <category>proto</category>
            <keywords>parser midi</keywords>
            <since>0.9.4</since>
        </meta>
        <methods>
            <!-- pan messages -->
            <method name="pan:f">send CC Pan messages (coarse and fine) 
            <param type="int" minvalue="0" maxvalue="15" required="true" name="CHAN">midi
            channel</param>
            <param type="float" minvalue="-1" maxvalue="1" required="true" name="PAN">pan value. -1
            means left, 0: center, +1: right</param></method>
            <method name="pan~">send Pan CC coarse message 
            <param type="int" minvalue="0" maxvalue="15" required="true" name="CHAN">midi
            channel</param>
            <param type="int" minvalue="0" maxvalue="127" required="true" name="PAN">pan
            value</param></method>
            <method name="pan.">send Pan CC fine message 
            <param type="int" minvalue="0" maxvalue="15" required="true" name="CHAN">midi
            channel</param>
            <param type="int" minvalue="0" maxvalue="127" required="true" name="PAN">pan
            value</param></method>
            <method name="pan:i">send Pan CC message. Args: CHAN PAN(0..0x3fff) or CHAN MSB(0..127)
            LSB(0..127). In case of 14 bit value 0 means left, 0x2000: center and 0x3fff:
            right</method>
            <!-- volume messages -->
            <method name="volume:f">send CC normalized Volume message 
            <param type="int" minvalue="0" maxvalue="15" required="true" name="CHAN">midi
            channel</param>
            <param type="float" minvalue="0" maxvalue="1" required="true" name="VOL">volume
            value</param></method>
            <method name="volume~">send coarse CC Volume message 
            <param type="int" minvalue="0" maxvalue="15" required="true" name="CHAN">midi
            channel</param>
            <param type="int" minvalue="0" maxvalue="127" required="true" name="VOL">pan
            value</param></method>
            <method name="volume.">send fine CC Volume message 
            <param type="int" minvalue="0" maxvalue="15" required="true" name="CHAN">midi
            channel</param>
            <param type="int" minvalue="0" maxvalue="127" required="true" name="VOL">pan
            value</param></method>
            <method name="volume:i">send 14-bit CC Volume message 
            <param type="int" minvalue="0" maxvalue="15" required="true" name="CHAN">midi
            channel</param>
            <param type="int" minvalue="0" maxvalue="16384" required="true" name="VOL">
            value</param></method>
            <!-- expression messages -->
            <method name="exp:f">send CC normalized Expression message 
            <param type="int" minvalue="0" maxvalue="15" required="true" name="CHAN">midi
            channel</param>
            <param type="float" minvalue="0" maxvalue="1" required="true" name="VAL">expression
            value</param></method>
            <method name="exp~">send coarse CC Expression message 
            <param type="int" minvalue="0" maxvalue="15" required="true" name="CHAN">midi
            channel</param>
            <param type="int" minvalue="0" maxvalue="127" required="true" name="VAL">expression
            value</param></method>
            <method name="exp.">send fine CC Expression message 
            <param type="int" minvalue="0" maxvalue="15" required="true" name="CHAN">midi
            channel</param>
            <param type="int" minvalue="0" maxvalue="127" required="true" name="VAL">expression
            value</param></method>
            <method name="exp:i">send 14-bit CC Expression message 
            <param type="int" minvalue="0" maxvalue="15" required="true" name="CHAN">midi
            channel</param>
            <param type="int" minvalue="0" maxvalue="16384" required="true" name="VAL">
            expression</param></method>
            <!-- modulation messages -->
            <method name="mod:f">send CC normalized Modulation message 
            <param type="int" minvalue="0" maxvalue="15" required="true" name="CHAN">midi
            channel</param>
            <param type="float" minvalue="0" maxvalue="1" required="true" name="VAL">modulation
            value</param></method>
            <method name="mod~">send coarse CC Modulation message 
            <param type="int" minvalue="0" maxvalue="15" required="true" name="CHAN">midi
            channel</param>
            <param type="int" minvalue="0" maxvalue="127" required="true" name="VAL">modulation
            value</param></method>
            <method name="mod.">send fine CC Modulation message 
            <param type="int" minvalue="0" maxvalue="15" required="true" name="CHAN">midi
            channel</param>
            <param type="int" minvalue="0" maxvalue="127" required="true" name="VAL">modulation
            value</param></method>
            <method name="mod:i">send 14-bit CC Modulation message 
            <param type="int" minvalue="0" maxvalue="15" required="true" name="CHAN">midi
            channel</param>
            <param type="int" minvalue="0" maxvalue="16384" required="true" name="VAL">
            modulation</param></method>
            <!-- hold message -->
            <method name="hold">send CC Hold pedal message 
            <param type="int" minvalue="0" maxvalue="15" required="false" name="CHAN">midi
            channel</param>
            <param type="int" enum="0 1" required="true" name="BOOL">on/off value</param></method>
            <!-- sostenuto message -->
            <method name="sostenuto">send CC sostenuto pedal message 
            <param type="int" minvalue="0" maxvalue="15" required="false" name="CHAN">midi
            channel</param>
            <param type="int" enum="0 1" required="true" name="BOOL">on/off value</param></method>
            <!-- portamento message -->
            <method name="portamento">send CC portamento message 
            <param type="int" minvalue="0" maxvalue="15" required="false" name="CHAN">midi
            channel</param>
            <param type="int" minvalue="0" maxvalue="127" required="true" name="VALUE">portamento
            amount</param></method>
            <!-- portamento switch -->
            <method name="portswitch">send CC portamento switch message 
            <param type="int" minvalue="0" maxvalue="15" required="false" name="CHAN">midi
            channel</param>
            <param type="int" enum="0 1" required="true" name="BOOL">on/off value</param></method>
            <!-- all notes off -->
            <method name="notes_off">send All Notes Off message 
            <param type="int" minvalue="0" maxvalue="15" required="true" name="CH">midi channel. if
            missing or -1: send to all channels</param></method>
            <!-- panic -->
            <method name="panic">send All Notes Off message 
            <param type="int" minvalue="0" maxvalue="15" required="true" name="CH">midi channel. if
            missing or -1: send to all channels</param></method>
            <!-- all sound off -->
            <method name="sound_off">send All Sound Off message 
            <param type="int" minvalue="0" maxvalue="15" required="false" name="CH">midi channel.
            if missing or -1: send to all channels</param></method>
            <!-- pitch bend sensitivity -->
            <method name="bendsens">send Pitch bend sensitivity message 
            <param type="int" minvalue="0" required="true" name="CH">midi channel</param></method>
            <!-- tune semitones -->
            <method name="tune:s">send RPN tuning request in semitones 
            <param type="int" minvalue="0" maxvalue="15" required="false" name="CH">midi
            channel</param>
            <param type="float" minvalue="-64" maxvalue="63" required="true" name="SEMI">tuning in
            semitones</param></method>
            <!-- tune coarse -->
            <method name="tune~">send RPN coarse tuning request (in semitones) 
            <param type="int" minvalue="0" maxvalue="15" required="false" name="CH">midi
            channel</param>
            <param type="int" minvalue="-64" maxvalue="63" required="true" name="SEMI">tuning in
            semitones</param></method>
            <!-- tune fine -->
            <method name="tune.">send RPN fine tuning request (in cents) 
            <param type="int" minvalue="0" maxvalue="15" required="false" name="CH">midi
            channel</param>
            <param type="float" minvalue="-100" maxvalue="100" required="true" name="CENTS">tuning
            in cents</param></method>
            <!-- tune fine -->
            <method name="tune:c">send RPN fine tuning request (in cents) 
            <param type="int" minvalue="0" maxvalue="15" required="false" name="CH">midi
            channel</param>
            <param type="float" minvalue="-100" maxvalue="100" required="true" name="CENTS">tuning
            in cents</param></method>
            <!-- tune bank -->
            <method name="tunebank">send RPN tune bank select 
            <param type="int" minvalue="0" maxvalue="15" required="false" name="CH">midi
            channel</param>
            <param type="int" minvalue="0" maxvalue="127" required="true" name="BANK">tuning
            bank</param></method>
            <!-- tune prog -->
            <method name="tuneprog">send RPN tune prog change 
            <param type="int" minvalue="0" maxvalue="15" required="false" name="CH">midi
            channel</param>
            <param type="int" minvalue="0" maxvalue="127" required="true" name="PROG">tuning
            program</param></method>
            <!-- tune select -->
            <method name="tunesel">send RPN tune select 
            <param type="int" minvalue="0" maxvalue="15" required="false" name="CH">midi
            channel</param>
            <param type="int" minvalue="0" maxvalue="127" required="true" name="BANK">tuning
            bank</param>
            <param type="int" minvalue="0" maxvalue="127" required="true" name="PROG">tuning
            program</param></method>
            <!-- bank -->
            <method name="bank">send CC Bank Select 
            <param type="int" minvalue="0" maxvalue="15" required="false" name="CH">midi
            channel</param>
            <param type="int" minvalue="0" maxvalue="16384" required="true" name="BANK">
            bank</param></method>
            <!-- bank:i -->
            <method name="bank:i">same as [bank(</method>
            <!-- bank:msb -->
            <method name="bank:msb">send CC Bank Select MSB 
            <param type="int" minvalue="0" maxvalue="15" required="false" name="CH">midi
            channel</param>
            <param type="int" minvalue="0" maxvalue="127" required="true" name="BANK">bank
            MSB</param></method>
            <!-- bank:lsb -->
            <method name="bank:lsb">send CC Bank Select LSB 
            <param type="int" minvalue="0" maxvalue="15" required="false" name="CH">midi
            channel</param>
            <param type="int" minvalue="0" maxvalue="127" required="true" name="BANK">bank
            LSB</param></method>
        </methods>
        <properties>
            <property name="@list" type="flag" access="initonly">output as list</property>
        </properties>
        <inlets>
            <inlet>
                <xinfo on="float">raw midi input bytes</xinfo>
                <xinfo on="list">raw midi input bytes</xinfo>
            </inlet>
        </inlets>
        <outlets>
            <outlet>float: raw midi output or parsed messages with selector (output format is the
            same as for corresponding methods)</outlet>
        </outlets>
        <example>
            <pdascii>
<![CDATA[
[proto.midi.cc.pan]

[proto.midi.cc.vol]
]]>
            </pdascii>
            <pdascii id="pan">
<![CDATA[
[T]                  [ui.k @min -1 @max 1 @show_value 1]
|                    |
[metro 250]          |
|                    |
[80(                 |
|                    |
[makenote 127 50]    [pan:f 0 $1(
*|*                  |
[pack f f]           [proto.midi.cc]
|                    |
[msg note]           [msg midi]
|                    |
[fluid~              ]
*|*
[ui.hgain2~]   [ui.dsp~]
*|*
[dac~]
]]>
            </pdascii>
            <pdascii id="vol">
<![CDATA[
[T]                  [ui.k @min 0 @max 1 @show_value 1]
|                    |
[metro 250]          |
|                    |
[80(                 |
|                    |
[makenote 127 50]    [volume:f 0 $1(
*|*                  |
[pack f f]           [proto.midi.cc]
|                    |
[msg note]           [msg midi]
|                    |
[fluid~              ]
*|*
[ui.hgain2~]   [ui.dsp~]
*|*
[dac~]
]]>
            </pdascii>
        </example>
    </object>
</pddoc>
