#N canvas 0 0 760 555 12;
#X obj 20 53 ui.link @title index @url ../index-help.pd;
#X text 62 50 ::;
#X obj 80 53 ui.link @title ceammc @url ceammc-help.pd;
#X obj 30 117 array.bpm;
#X text 200 117 BPM calculator;
#X obj 30 145 array.circular;
#X text 200 145 array read/write as circular buffer;
#X obj 30 173 array.circular~;
#X text 200 173 circular buffer for arrays;
#X obj 30 201 array.convolve;
#X text 200 201 array FFT convolution;
#X obj 30 229 array.copy;
#X text 200 229 copy samples from one array to another;
#X obj 30 257 array.do;
#X text 200 257 iterate and modify array content via side-chain;
#X obj 30 285 array.each;
#X text 200 285 process each array elements via side-chain;
#X obj 30 313 array.fill;
#X text 200 313 fill array with single value \, pattern or function;
#X obj 30 341 array.grainer~;
#X text 200 341 array granulator;
#X obj 30 369 array.hist;
#X text 200 369 calculates array histogram;
#X obj 30 397 array.ltcplay~;
#X text 200 397 array player controlled by LTC;
#X obj 30 425 array.mean;
#X text 200 425 calculates array arithmetic mean value;
#X obj 30 453 array.minmax;
#X text 200 453 find array min and max element value;
#X obj 30 481 array.play~;
#X text 200 481 array player with variable speed and amplitude;
#X obj 30 509 array.plot;
#X text 200 509 array data plotter;
#X obj 30 537 array.plot~;
#X text 200 537 plot signal on specified array;
#X obj 30 565 array.readwrite~;
#X text 200 565 array reader/writer;
#X obj 30 593 array.resample;
#X text 200 593 array resampler;
#X obj 30 621 array.rms;
#X text 200 621 calculates root mean square value for array;
#X obj 30 649 array.set;
#X text 200 649 set array content from list;
#X obj 30 677 array.stddev;
#X text 200 677 calculates standard deviation for array values;
#X obj 30 705 array.stretch;
#X text 200 705 array time-stretch \, pitch-shift or rate-change;
#X obj 30 733 array.sum;
#X text 200 733 calculates sum of array elements;
#X obj 30 761 array.sum2;
#X text 200 761 calculates sum of squares of array elements;
#X obj 30 789 array.tramp~;
#X text 200 789 triggered ramp generator for array;
#X obj 30 817 array.variance;
#X text 200 817 calculates variance of array values;
#X obj 30 845 array.vplay;
#X text 200 845 simple array player for using with vline~;
#X obj 30 873 array.window;
#X text 200 873 fill array with window;
#X obj 30 901 plot.geomspace~;
#X text 200 901 outputs numbers spaced evenly on a log scale (a geometric
progression);
#X obj 30 941 plot.hist~;
#X text 200 941 calculate and output signal histogram;
#X obj 30 969 plot.linspace~;
#X text 200 969 outputs numbers spaced evenly spaced over a specified
interval;
#X obj 30 1009 plot.logspace~;
#X text 200 1009 outputs numbers spaced evenly on a log scale;
#X obj 30 1037 plot.response~;
#X text 200 1037 output amp/phase freq response to impulse;
#X obj 1 1 cnv 5 740 40 empty empty ceammc::array 20 20 0 20 -104026
-4096 0;
#X obj 1 1065 cnv 5 740 40 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 20 1075 library: ceammc;