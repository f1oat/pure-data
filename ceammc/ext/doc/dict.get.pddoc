<?xml version='1.0' encoding='utf-8'?>
<pddoc xmlns:xi="http://www.w3.org/2001/XInclude" version="1.0">
    <object name="dict.get">
        <title>dict.get</title>
        <meta>
            <authors>
                <author>Serge Poltavsky</author>
            </authors>
            <description>output dict values</description>
            <license>GPL3 or later</license>
            <library>ceammc</library>
            <category>data</category>
            <keywords>get dictionary</keywords>
            <since>0.6</since>
            <also>
                <see>data.dict</see>
                <see>flow.route</see>
            </also>
        </meta>
        <info>
            <par>You can use path-like expression, to get nested keys: /x/y/foo.</par>
        </info>
        <arguments>
            <argument name="KEYS" type="list">keys</argument>
        </arguments>
        <properties>
            <property name="@keys" type="list" access="initonly" default="">extracted
            keys</property>
            <property name="@default" type="atom" default="null">default value when key is not
            found in dictionary. If not specified no output is performed.</property>
        </properties>
        <inlets>
            <inlet>
                <xinfo on="data:dict">input dictionary</xinfo>
            </inlet>
        </inlets>
        <outlets dynamic="true">
            <outlet number="1">first key output</outlet>
            <outlet number="...">... key output</outlet>
            <outlet number="n">n-th key output</outlet>
        </outlets>
        <example>
            <pdascii>
<![CDATA[
[\[a: b @prop: val 1: 100\], bang(
|
|
|
[data.dict]
|
[dict.get "@prop" "1" a /*]
|     ^|    ^^|   ^^^|
|      |      |      |
|      |      |      |
[S]    [F]    [S]    [ui.display]


[dict.get.paths]
]]>
            </pdascii>
            <pdascii id="paths">
<![CDATA[
[\[users: [name: Alice age: 23 levels: 1 2 3 4] [name: Bob age: 25 levels: 1 2 3]], bang(
|
|
|
[data.dict]
|
[dict.get /users/*/name /users/*/age /users/*/levels/2:3 #z]
|
[print NAMES #a]

            [print AGE #b]

                        [print LEVELS #c]

[X z:0->a] [X z:1->b] [X z:2->c]

/*path segment can be:*/

    /* * - match to all dict keys or all list elements*/

    /* key - match to the dict key*/

    /* POS - match to the element in the list at specified position*/

    /* POS: - match to the elements in the list from specified position until the end of the list*/


    /* POS:LENGTH - match to the number of elements in the list from specified position*/
]]>
            </pdascii>
        </example>
    </object>
</pddoc>
