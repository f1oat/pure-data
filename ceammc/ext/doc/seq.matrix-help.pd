#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 521 50 cnv 1 244 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 521 50 sequencer control for ui.matrix;
#X obj 1 1 cnv 5 765 40 empty empty seq.matrix 20 20 0 20 -104026
-4096 0;
#X obj 667 11 seq.matrix;
#X obj 50 118 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1;
#X msg 88 118 rewind;
#X obj 184 118 ui.tab inc dec tri;
#X obj 405 118 ui.dsp~;
#X msg 184 147 @mode \$1;
#X obj 50 176 seq.matrix 16 120bpm @div 4;
#X obj 270 176 loadmsg random;
#X obj 50 205 ui.matrix 3 16 @size 320 51;
#X obj 50 262 route col;
#X obj 50 291 unpack f f f f;
#X floatatom 50 320 5 0 0 0 - - -;
#X obj 98 320 osc~ 400;
#X msg 117 349 @gate \$1;
#X obj 232 349 synth.kick2~ 10 80;
#X obj 98 378 env.ar~ 20 100;
#X obj 232 378 synth.clap~ 6 200;
#X obj 50 406 pan.spread~ 5, f 16;
#X obj 50 435 ui.hgain2~;
#X obj 50 464 dac~, f 16;
#X obj 20 514 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 519 cnv 5 90 25 empty empty arguments: 4 12 0 14 -262144
-49933 0;
#X obj 735 522 ui.link @background_color 0.98039 0.98039 0.98039
@title [?] @url ceammc.args-info.pd;
#X text 110 554 1\.;
#X text 150 554 int;
#X obj 246 555 cnv 1 17 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 554 N: number of steps. Type: int. Min value: 0;
#X text 110 574 2\.;
#X text 150 574 float;
#X obj 246 575 cnv 1 48 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 574 T(ms): time interval between steps or bpm. Type: float.
Range: 1\...20000;
#X obj 20 619 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 624 cnv 5 98 25 empty empty properties: 4 12 0 14 -262144
-49933 0;
#X obj 735 627 ui.link @background_color 0.98039 0.98039 0.98039
@title [?] @url ceammc.props-info.pd;
#X msg 110 659 @div;
#X text 245 659 Get/Set beat subdivision. Type: int. Default value:
1\. Range: 1\...64\.;
#X msg 110 701 @dur;
#X text 245 701 Get/Set whole sequence duration. (Recalculates @t property
accordingly). Type: float. Units: 'ms'. Default value: 4000\. Min value:
0\.;
#X msg 110 758 @inf;
#X text 245 758 alias to @r -1 \, repeats infinitely.;
#X msg 110 788 @mode;
#X text 245 788 Get/Set sequencer mode. 'inc': from first to last \,
'dec': from last to first \, 'tri': from first to last \, then back.
Type: symbol. Default value: inc. Allowed values: inc \, dec \, tri.;
#X msg 110 860 @n;
#X text 245 860 Get/Set number of cols in matrix. Type: int. Default
value: 16\. Min value: 0\.;
#X msg 110 902 @once;
#X text 245 902 alias to @r 1 \, play once.;
#X msg 110 932 @r;
#X text 245 932 Get/Set number of whole sequence repeats. If -1: repeat
infinitely. Type: int. Default value: -1\. Min value: -1\.;
#X msg 110 974 @t;
#X text 245 974 Get/Set time between beats. Unit values like 100ms
or 240bpm also can be used. Type: float. Units: 'ms'. Default value:
250\. Range: 1\...20000\.;
#X msg 110 1031 @upbeat;
#X text 245 1031 Get/Set wait specified number of beats before sequence
start. Type: float. Default value: 0\. Min value: 0\.;
#X msg 110 1073 @i?;
#X text 245 1073 (readonly) Get current sequence iteration. Type: int.
Default value: 0\.;
#X msg 110 1115 @ri?;
#X text 245 1115 (readonly) Get current repeat iteration. Type: int.
Default value: 0\.;
#X obj 20 1167 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1172 cnv 5 73 25 empty empty methods: 4 12 0 14 -262144
-49933 0;
#X msg 110 1207 reset;
#X text 245 1207 reset all counters and stop.;
#X msg 110 1235 rewind;
#X text 245 1235 reset all counters without stopping.;
#X msg 110 1263 start;
#X text 245 1263 start sequencer from current position.;
#X msg 110 1291 stop;
#X text 245 1291 stop sequencer.;
#X msg 110 1319 tick;
#X text 245 1319 output current sequence element and move to next.;
#X obj 20 1357 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1362 cnv 5 64 25 empty empty inlets: 4 12 0 14 -262144
-49933 0;
#X text 110 1363 1\.;
#X text 150 1363 *bang*;
#X text 245 1363 reset all counters and start sequencer.;
#X text 150 1383 *float*;
#X text 245 1383 if 1 reset then start \, if 0 - stop.;
#X text 110 1403 2\.;
#X text 150 1403 *bang*;
#X text 245 1403 reset.;
#X text 150 1423 *float*;
#X text 245 1423 set number of steps.;
#X obj 20 1453 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1458 cnv 5 73 25 empty empty outlets: 4 12 0 14 -262144
-49933 0;
#X text 110 1459 1\.;
#X text 245 1459 output for ui.matrix.;
#X text 110 1479 2\.;
#X text 245 1479 [i IDX N( - sequence iteration \, [ri IDX N( - repeat
iteration or [done( when done.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 68 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 116 45 ::;
#X obj 133 48 ui.link @title seq @url ceammc.seq-help.pd;
#X obj 1 1544 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1547 library: ceammc v0.9.7;
#X text 597 1559 see also:;
#X obj 672 1562 ui.link @background_color 0.78431 0.78431 0.78431
@title [ui.matrix] @url ui.matrix-help.pd;
#N canvas 10 1566 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.7;
#X text 10 54 object:;
#X text 120 54 seq.matrix;
#X text 10 76 category:;
#X text 120 76 seq;
#X text 10 98 since:;
#X text 120 98 0.9.1;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 seq \, sequencer \, bang \, pattern \, rhythm \, matrix;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pd-ceammc @url
https://github.com/uliss/pd-ceammc;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1566 pd info;
#X connect 6 0 8 0;
#X connect 4 0 9 0;
#X connect 5 0 9 0;
#X connect 8 0 9 0;
#X connect 9 0 11 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 15 0 18 0;
#X connect 16 0 18 0;
#X connect 20 0 21 0;
#X connect 20 1 21 1;
#X connect 21 0 22 0;
#X connect 21 1 22 1;
#X connect 13 1 16 0;
#X connect 13 2 17 0;
#X connect 13 3 19 0;
#X connect 18 0 20 1;
#X connect 17 0 20 2;
#X connect 19 0 20 3;