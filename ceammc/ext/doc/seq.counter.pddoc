<?xml version='1.0' encoding='utf-8'?>
<pddoc xmlns:xi="http://www.w3.org/2001/XInclude" version="1.0">
    <object name="seq.counter">
        <title>seq.counter</title>
        <meta>
            <authors>
                <author>Serge Poltavsky</author>
            </authors>
            <description>sequencer counter</description>
            <license>GPL3 or later</license>
            <library>ceammc</library>
            <category>seq</category>
            <keywords>counter modulo</keywords>
            <since>0.9.1</since>
        </meta>
        <arguments>
            <argument name="FROM" type="int">start value</argument>
            <argument name="TO" type="int">end value</argument>
            <argument name="R" type="int">number of repeats</argument>
        </arguments>
        <properties>
            <property name="@from" type="int" default="0">start value. Setting this property resets
            @i to 0</property>
            <property name="@to" type="int" default="0">end value (inclusive)</property>
            <property name="@r" type="int" default="-1" minvalue="-1">number of repeats. If -1:
            repeat infinitely.</property>
            <property name="@inf" type="alias">alias to @r -1, repeats infinitely</property>
            <property name="@once" type="alias">alias to @r 1, play once</property>
            <property name="@i" type="int" default="0">current iteration</property>
            <property name="@ri" type="int" access="readonly" default="0">current repeat
            iteration</property>
            <property name="@mode" type="symbol" enum="wrap fold" default="wrap">repeat counter
            mode</property>
            <property name="@wrap" type="alias">alias to @mode wrap</property>
            <property name="@fold" type="alias">alias to @mode fold</property>
            <property name="@value" type="int" default="0" access="readonly">current
            value</property>
        </properties>
        <methods>
            <!-- next -->
            <method name="next">increment counter then output</method>
            <!-- prev -->
            <method name="prev">decrement counter then output</method>
            <!-- reset -->
            <method name="reset">reset counter to start value and repeat counter to 0</method>
        </methods>
        <inlets>
            <inlet>
                <xinfo on="bang">output current value then increment counter</xinfo>
            </inlet>
            <inlet>
                <xinfo on="bang">reset counter to start value</xinfo>
            </inlet>
        </inlets>
        <outlets>
            <outlet>int: counter value</outlet>
            <outlet>int: repeat counter, done: when done</outlet>
        </outlets>
        <example>
            <pdascii>
<![CDATA[
[B]   [prev( [next(
|     |      |
[seq.counter 1 4]
|
[ui.dt]

[B]            [B]
|              |.
[seq.counter 1 4 @r 2]/*repeat two times*/
|              ^|
[F]            [ui.dt]
]]>
            </pdascii>
        </example>
    </object>
</pddoc>
