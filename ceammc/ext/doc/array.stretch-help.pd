#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 406 50 cnv 1 359 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 406 50 array time-stretch \, pitch-shift or rate-change;
#X obj 1 1 cnv 5 765 40 empty empty array.stretch 20 20 0 20 -104026
-4096 0;
#X obj 645 11 array.stretch;
#X obj 210 80 cnv 1 555 65 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 Based on SoundTouch library for changing the Tempo \,
Pitch and Playback Rates of arrays. Copies time-stretched data from
source to destination array;
#X obj 50 173 loadbang;
#X msg 50 202 symbol voice.wav;
#X msg 232 202 symbol bell.aiff;
#N canvas 0 22 450 300 (subpatch) 0;
#X array A1 100 float 0;
#X coords 0 1 100 -1 64 18 1;
#X restore 414 202 graph;
#N canvas 0 22 450 300 (subpatch) 0;
#X array A2 100 float 0;
#X coords 0 1 100 -1 63 18 1;
#X restore 578 202 graph;
#X msg 50 231 load %DOC%/sound/\$1 @to A1 @resize;
#X obj 50 260 expand_env;
#X obj 50 289 snd.file;
#X obj 50 317 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 107 317 lower pitch;
#X obj 50 346 array.stretch A1 A2 @pitch -5;
#X obj 50 375 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 107 375 speed up and high;
#X obj 357 375 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 405 375 timestretch;
#X obj 50 404 array.stretch A1 A2 @rate 1.5;
#X obj 357 404 array.stretch A1 A2 @tempo -30 @speech;
#X text 50 433 Play;
#X obj 50 461 ui.tab @items A1 A2;
#X msg 50 490 set \$2 \, bang;
#X msg 194 490 stop;
#X obj 50 519 tabplay~ A2;
#X obj 50 548 ui.gain~ @size 120 16;
#X obj 309 548 ui.dsp~;
#X obj 50 576 dac~;
#X obj 20 626 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 631 cnv 5 90 25 empty empty arguments: 4 12 0 14 -262144
-49933 0;
#X obj 735 634 ui.link @background_color 0.98039 0.98039 0.98039
@title [?] @url ceammc.args-info.pd;
#X text 110 666 1\.;
#X text 150 666 symbol;
#X obj 246 667 cnv 1 32 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 666 SRC: source array. Type: symbol.;
#X text 110 686 2\.;
#X text 150 686 symbol;
#X obj 246 687 cnv 1 39 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 686 DEST: destination array. Type: symbol.;
#X obj 20 716 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 721 cnv 5 98 25 empty empty properties: 4 12 0 14 -262144
-49933 0;
#X obj 735 724 ui.link @background_color 0.98039 0.98039 0.98039
@title [?] @url ceammc.props-info.pd;
#X msg 110 756 @aalength;
#X text 245 756 Get/Set pitch transposer anti-alias filter length.
Type: int. Default value: 64\. Range: 8\...128\.;
#X msg 110 798 @antialias;
#X text 245 798 Get/Set use of anti-alias filter. Anti-alias filter
is used to prevent folding of high frequencies when transposing the
sample rate with interpolation. Type: bool. Default value: 0\.;
#X msg 110 870 @dest;
#X text 245 870 Get/Set destination array. Type: symbol.;
#X msg 110 900 @overlap;
#X text 245 900 Get/Set Overlap length in milliseconds. When the chopped
sound sequences are mixed back together \, to form a continuous sound
stream \, this parameter defines over how long period the two consecutive
sequences are let to overlap each other. Increasing this value increases
computational burden & vice versa. Type: int. Units: 'ms'. Default
value: 8\. Range: 0\...100\.;
#X msg 110 1018 @pitch;
#X text 245 1018 Get/Set relative pitch change while keeping the original
tempo. Type: float. Units: 'semitone'. Default value: 0\.;
#X msg 110 1060 @rate;
#X text 245 1060 Get/Set playback rate - changes both tempo and pitch
together as if a vinyl disc was played at different RPM rate. Type:
float. Default value: 1\. Range: 0.1\...2\.;
#X msg 110 1117 @seekwindow;
#X text 245 1117 Get/Set Seeking window default length in milliseconds
for algorithm that finds the best possible overlapping location. This
determines from how wide window the algorithm may look for an optimal
joining location when mixing the sound sequences back together. The
bigger this window setting is \, the higher the possibility to find
a better mixing position will become \, but at the same time large
values may cause a "drifting" artifact because consequent sequences
will be taken at more uneven intervals. If there's a disturbing artifact
that sounds as if a constant frequency was drifting around \, try reducing
this setting. Increasing this value increases computational burden
& vice versa. Giving *0* value for the seek window length sets automatic
parameter value according to tempo setting (recommended). Type: int.
Units: 'ms'. Default value: 0\. Range: 0\...100\.;
#X msg 110 1355 @sequence;
#X text 245 1355 Get/Set Default length of a single processing sequence
\, in milliseconds. This determines to how long sequences the original
sound is chopped in the time-stretch algorithm. The larger this value
is \, the lesser sequences are used in processing. In principle a bigger
value sounds better when slowing down tempo \, but worse when increasing
tempo and vice versa. Increasing this value reduces computational burden
& vice versa. Giving *0* value for the sequence length sets automatic
parameter value according to tempo setting (recommended). Type: int.
Units: 'ms'. Default value: 0\. Range: 0\...100\.;
#X msg 110 1533 @speech;
#X text 245 1533 Get/Set optimize for speech sound source. Type: bool.
Default value: 0\.;
#X msg 110 1575 @src;
#X text 245 1575 Get/Set source array. Type: symbol.;
#X msg 110 1605 @tempo;
#X text 245 1605 Get/Set relative tempo change without affecting the
sound pitch. Type: float. Units: '%'. Default value: 0\. Range: -50\...100\.;
#X obj 20 1672 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1677 cnv 5 64 25 empty empty inlets: 4 12 0 14 -262144
-49933 0;
#X text 110 1678 1\.;
#X text 150 1678 *bang*;
#X text 245 1678 starts processing.;
#X obj 20 1708 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1713 cnv 5 73 25 empty empty outlets: 4 12 0 14 -262144
-49933 0;
#X text 110 1714 1\.;
#X text 245 1714 float value - number of result samples.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 68 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 116 45 ::;
#X obj 133 48 ui.link @title array @url ceammc.array-help.pd;
#X obj 1 1764 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1767 library: ceammc v0.9.7;
#N canvas 10 1786 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.7;
#X text 10 54 object:;
#X text 120 54 array.stretch;
#X text 10 76 category:;
#X text 120 76 array;
#X text 10 98 since:;
#X text 120 98 0.4;
#X text 10 120 authors:;
#X text 120 120 Olli Parviainen \, Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 array \, stretch;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pd-ceammc @url
https://github.com/uliss/pd-ceammc;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1786 pd info;
#X connect 6 0 7 0;
#X connect 7 0 11 0;
#X connect 8 0 11 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 14 0 16 0;
#X connect 17 0 21 0;
#X connect 19 0 22 0;
#X connect 24 0 25 0;
#X connect 25 0 27 0;
#X connect 26 0 27 0;
#X connect 27 0 28 0;
#X connect 28 0 30 0;
#X connect 28 0 30 1;