#N canvas 0 0 760 555 12;
#X obj 20 53 ui.link @title index @url ../index-help.pd;
#X text 62 50 ::;
#X obj 79 53 ui.link @title numeric @url numeric-help.pd;
#X obj 30 116 rational.!=;
#X text 200 116 not equal check;
#X obj 30 143 rational.==;
#X text 200 143 equal check;
#X obj 30 170 rational.abs;
#X text 200 170 abs absolute value;
#X obj 30 197 rational.add;
#X text 200 197 add two rational numbers;
#X obj 30 224 rational.div;
#X text 200 224 divide rational numbers;
#X obj 30 251 rational.from_float;
#X text 200 251 converts input float to rational with specified precision;
#X obj 30 278 rational.ge;
#X text 200 278 greater equal compare operator;
#X obj 30 305 rational.gt;
#X text 200 305 greater than compare operator;
#X obj 30 332 rational.le;
#X text 200 332 less equal compare operator;
#X obj 30 359 rational.lt;
#X text 200 359 less than compare operator;
#X obj 30 386 rational.mul;
#X text 200 386 multiply rational numbers;
#X obj 30 413 rational.new;
#X text 200 413 The Rational class;
#X obj 30 440 rational.pow;
#X text 200 440 rational power;
#X obj 30 467 rational.reciprocal;
#X text 200 467 reciprocal rational number;
#X obj 30 494 rational.sub;
#X text 200 494 substruct rational numbers;
#X obj 30 521 rational.to_float;
#X text 200 521 convert to float value;
#X obj 30 548 rational.to_list;
#X text 200 548 numerator and denominator part as list;
#X obj 30 575 rational.unpack;
#X text 200 575 unpacks rational number to numerator and denominator
parts;
#X obj 1 1 cnv 5 740 40 empty empty numeric::rational 20 20 0 20
-104026 -4096 0;
#X obj 1 602 cnv 5 740 40 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 20 612 library: numeric;