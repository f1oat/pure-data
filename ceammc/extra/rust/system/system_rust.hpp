#ifndef ceammc_rust_system_h
#define ceammc_rust_system_h

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <cstdint>
#include <cstddef>


enum class ceammc_system_process_mode {
    Bytes,
    Lines,
    String,
    Fudi,
};

enum class ceammc_system_process_rc {
    Error,
    Running,
    Ready,
};

struct ceammc_system_process;

struct ceammc_system_process_cmd {
    const char *prog;
    const char *const *argv;
    size_t argc;
};


extern "C" {

bool ceammc_system_process_clear(ceammc_system_process *proc);

bool ceammc_system_process_exec(ceammc_system_process *proc);

void ceammc_system_process_free(ceammc_system_process *proc);

ceammc_system_process *ceammc_system_process_new(const ceammc_system_process_cmd *cmd,
                                                 size_t cmd_len,
                                                 ceammc_system_process_mode mode,
                                                 bool capture_stdout,
                                                 bool capture_stderr,
                                                 const char *pwd,
                                                 const char *stdin,
                                                 void *user,
                                                 void (*on_err)(void *user, const char *msg),
                                                 void (*on_stdout_data)(void *user, const uint8_t *data, size_t len),
                                                 void (*on_stderr_data)(void *user, const uint8_t *data, size_t len));

ceammc_system_process_rc ceammc_system_process_results(ceammc_system_process *proc,
                                                       int32_t *result_code);

bool ceammc_system_process_terminate(ceammc_system_process *proc);

} // extern "C"

#endif // ceammc_rust_system_h
