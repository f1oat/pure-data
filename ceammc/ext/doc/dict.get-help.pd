#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 622 50 cnv 1 143 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 622 50 output dict values;
#X obj 1 1 cnv 5 765 40 empty empty dict.get 20 20 0 20 -104026 -4096
0;
#X obj 682 11 dict.get;
#X obj 210 80 cnv 1 555 50 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 You can use path-like expression \, to get nested keys:
/x/y/foo.;
#X msg 50 158 [a: b @prop: val 1: 100] \, bang;
#X obj 50 216 data.dict;
#X obj 50 245 dict.get "@prop" "1" a /*;
#X symbolatom 50 302 5 0 0 0 - - -;
#X floatatom 117 302 5 0 0 0 - - -;
#X symbolatom 184 302 5 0 0 0 - - -;
#X obj 251 302 ui.display;
#X obj 50 345 dict.get.paths;
#X obj 20 394 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 399 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 434 1\.;
#X text 150 434 list;
#X obj 246 435 cnv 1 39 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 434 KEYS: keys. Type: list.;
#X obj 20 464 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 469 cnv 5 98 26 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 504 @keys;
#X text 245 504 (initonly) Get/Set extracted keys. Type: list.;
#X msg 110 533 @default;
#X text 245 533 Get/Set default value when key is not found in dictionary.
If not specified no output is performed. Type: atom. Default value:
null.;
#X obj 20 600 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 605 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144 -49933
0;
#X text 110 606 1\.;
#X text 150 606 *data:dict*;
#X text 245 606 input dictionary.;
#X obj 20 636 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 641 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 642 1\.;
#X text 245 642 first key output.;
#X text 110 662 ....;
#X text 245 662 ... key output.;
#X text 110 682 n.;
#X text 245 682 n-th key output.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title data @url ceammc.data-help.pd;
#X obj 1 732 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 735 library: ceammc v0.9.7;
#X text 514 747 see also:;
#X obj 588 747 data.dict;
#X obj 668 747 flow.route;
#N canvas 10 754 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.7;
#X text 10 54 object:;
#X text 120 54 dict.get;
#X text 10 76 category:;
#X text 120 76 data;
#X text 10 98 since:;
#X text 120 98 0.6;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 get \, dictionary;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pd-ceammc @url
https://github.com/uliss/pd-ceammc;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 754 pd info;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 8 1 10 0;
#X connect 8 2 11 0;
#X connect 8 3 12 0;