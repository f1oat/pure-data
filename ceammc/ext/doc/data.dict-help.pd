#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 433 50 cnv 1 332 21 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 433 50 dictionary container: store values by key;
#X obj 1 1 cnv 5 765 40 empty empty data.dict 20 20 0 20 -104026 -4096
0;
#X obj 621 11 dict;
#X obj 675 11 data.dict;
#X obj 210 80 cnv 1 555 61 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 Syntax: ([key1: value] [key2 : "with space"]).
Parenthesis can be ommitted if you are not using nested dictionaries.
Nested dictionaries are supported: ([a: ([A:1][B:2])]).;
#X msg 50 169 bang;
#X msg 78 198 [a: b] [c: d] \, bang;
#X msg 290 198 clear;
#X msg 366 198 remove a;
#X msg 107 227 add 100 float;
#X obj 386 227 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 386 256 openpanel;
#X msg 136 270 list a b c d;
#X msg 386 285 read \$1;
#X obj 50 313 data.dict (\[tempo: 120\]\[title: "New Masterpiece"\]);
#X obj 50 342 ui.display @display_type 1 @size 150 18;
#X obj 20 382 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 387 cnv 5 98 26 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 422 @empty;
#X text 245 422 (readonly) Get 1 if dict is empty \, otherwise 0\.
Type: int. Allowed values: 0 \, 1\.;
#X msg 110 461 @keys;
#X text 245 461 (readonly) Get keys of dictionary. Type: list.;
#X msg 110 490 @size;
#X text 245 490 (readonly) Get number of entries in dictionary. Type:
int. Min value: 0\.;
#X obj 20 539 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 544 cnv 5 73 26 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 579 add;
#X text 245 579 adds entry to dictionary. Arguments are:;
#X obj 255 600 cnv 1 30 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 600 KEY: entry key. Type: atom.;
#X obj 255 621 cnv 1 30 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 621 VAL: single value or list. Type: list.;
#X msg 110 644 clear;
#X text 245 644 removes all dict values. No output.;
#X msg 110 671 get_key;
#X text 245 671 get entry from dictionary. Arguments are:;
#X obj 255 692 cnv 1 30 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 692 KEY: entry key. Type: atom.;
#X msg 110 715 read;
#X text 245 715 read dict from JSON file. Arguments are:;
#X obj 255 736 cnv 1 37 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 736 PATH: file path. Type: symbol.;
#X msg 110 759 remove;
#X text 245 759 remove entry from dictionary. Arguments are:;
#X obj 255 780 cnv 1 30 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 780 KEY: entry key. Type: atom.;
#X msg 110 803 set;
#X text 245 803 set dict content without output.;
#X msg 110 830 set_key;
#X text 245 830 change entry in dictionary. If it's not exists \, do
nothing. Arguments are:;
#X obj 255 865 cnv 1 30 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 865 KEY: key. Type: atom.;
#X obj 255 886 cnv 1 30 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 886 VAL: single value or list. Type: list.;
#X msg 110 909 write;
#X text 245 909 write dict as JSON file. Arguments are:;
#X obj 255 930 cnv 1 37 21 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 930 PATH: file path. Type: symbol.;
#X msg 110 953 [....];
#X text 245 953 sets new content without output.;
#X obj 20 990 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 995 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144 -49933
0;
#X text 110 996 1\.;
#X text 150 996 *bang*;
#X text 245 996 output current dictionary value.;
#X text 150 1014 *list*;
#X text 245 1014 set dict from list. Key-value pairs are expected. [1
2 3 4( becames dict with keys: 1 and 3 \, values: 2 and 4\. No
output.;
#X text 150 1060 *data:dict*;
#X text 245 1060 set and output new dict.;
#X obj 20 1088 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1093 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1094 1\.;
#X text 245 1094 output dictionary.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title data @url ceammc.data-help.pd;
#X obj 1 1142 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1145 library: ceammc v0.7.1;
#X text 519 1157 see also:;
#X obj 595 1157 data.set;
#X obj 668 1157 data.mlist;
#N canvas 10 1164 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.7.1;
#X text 10 54 object:;
#X text 120 54 data.dict;
#X text 10 76 category:;
#X text 120 76 data;
#X text 10 98 since:;
#X text 120 98 0.6;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3;
#X text 10 164 keywords:;
#X text 120 164 data \, dictionary;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1164 pd info;
#X connect 12 0 13 0;
#X connect 13 0 15 0;
#X connect 7 0 16 0;
#X connect 8 0 16 0;
#X connect 11 0 16 0;
#X connect 14 0 16 0;
#X connect 9 0 16 0;
#X connect 10 0 16 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;