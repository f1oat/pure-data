#N canvas 0 0 760 555 12;
#X obj 20 53 ui.link @title index @url ../index-help.pd;
#X text 62 50 ::;
#X obj 80 53 ui.link @title ceammc @url ceammc-help.pd;
#X obj 30 117 expand_env;
#X text 200 117 Substitute environment variables in data stream;
#X obj 30 145 flow.append;
#X text 200 145 append message to flow stream;
#X obj 30 173 flow.change;
#X text 200 173 rejects redundant input values;
#X obj 30 201 flow.count;
#X text 200 201 control flow event counter;
#X obj 30 229 flow.delay;
#X text 200 229 enhanced version on vanilla delay object;
#X obj 30 257 flow.demultiplex;
#X text 200 257 control flow demultiplexer;
#X obj 30 285 flow.demultiplex2~;
#X text 200 285 audio stream stereo demultiplexer;
#X obj 30 313 flow.demultiplex~;
#X text 200 313 audio stream demultiplexer;
#X obj 30 341 flow.dollar;
#X text 200 341 data flow dollar converter;
#X obj 30 369 flow.dup;
#X text 200 369 message duplicator;
#X obj 30 397 flow.float;
#X text 200 397 pass floats;
#X obj 30 425 flow.gate;
#X text 200 425 control flow gate. [spigot] analog;
#X obj 30 453 flow.greater;
#X text 200 453 numeric stream router;
#X obj 30 481 flow.greater_eq;
#X text 200 481 numeric stream router;
#X obj 30 509 flow.group;
#X text 200 509 group input atoms in list of specified size;
#X obj 30 537 flow.histogram;
#X text 200 537 control flow histogram;
#X obj 30 565 flow.interval;
#X text 200 565 measure time between flow events;
#X obj 30 593 flow.less;
#X text 200 593 numeric stream router \, like many [moses];
#X obj 30 621 flow.less_eq;
#X text 200 621 numeric stream router \, like many [moses];
#X obj 30 649 flow.list2many;
#X text 200 649 routes list element with message selectors;
#X obj 30 677 flow.match;
#X text 200 677 route data flow by regexp match;
#X obj 30 705 flow.mem;
#X text 200 705 store data flow in memory;
#X obj 30 733 flow.multiplex;
#X text 200 733 control flow multiplexer;
#X obj 30 761 flow.multiplex2~;
#X text 200 761 audio stream stereo multiplexer;
#X obj 30 789 flow.multiplex~;
#X text 200 789 audio stream multiplexer;
#X obj 30 817 flow.once;
#X text 200 817 one message pass thru;
#X obj 30 845 flow.pack;
#X text 200 845 flow pack;
#X obj 30 873 flow.pass;
#X text 200 873 pass specified values;
#X obj 30 901 flow.pass_if;
#X text 200 901 pass values that accepted by predicate object;
#X obj 30 929 flow.pipe;
#X text 200 929 enhanced version on vanilla pipe object;
#X obj 30 957 flow.prepend;
#X text 200 957 prepend message before received one;
#X obj 30 985 flow.queue;
#X text 200 985 multi-channel control flow sync queue (or FIFO);
#X obj 30 1013 flow.record;
#X text 200 1013 flow stream recorder/player;
#X obj 30 1041 flow.reject;
#X text 200 1041 reject specified values;
#X obj 30 1069 flow.reject_if;
#X text 200 1069 reject values by predicate;
#X obj 30 1097 flow.ring;
#X text 200 1097 dataflow ring buffer;
#X obj 30 1125 flow.route;
#X text 200 1125 advanced message router;
#X obj 30 1153 flow.select;
#X text 200 1153 vanilla flow on steroids;
#X obj 30 1181 flow.seqdelay;
#X text 200 1181 sequential delay/router for input flow;
#X obj 30 1209 flow.space;
#X text 200 1209 space in time messages received at the same logical
time;
#X obj 30 1237 flow.speedlim;
#X text 200 1237 control stream speed limiter;
#X obj 30 1265 flow.split;
#X text 200 1265 split data flow by external side-chain predicate;
#X obj 30 1293 flow.stack;
#X text 200 1293 any message stack;
#X obj 30 1321 flow.sync;
#X text 200 1321 bus with only hot inlets;
#X obj 30 1349 flow.sync_pack;
#X text 200 1349 flow pack with all hot inlets;
#X obj 30 1377 flow.tee~;
#X text 200 1377 separate audio and control streams;
#X obj 30 1405 replace;
#X text 200 1405 Replace atoms in data stream;
#X obj 30 1433 route.any;
#X text 200 1433 separate any messages from bangs \, floats \, symbols
and lists;
#X obj 30 1461 route.bang;
#X text 200 1461 separate bang messages from other types;
#X obj 30 1489 route.cycle;
#X text 200 1489 cyclic message router;
#X obj 30 1517 route.data;
#X text 200 1517 separate any messages from bangs \, floats \, symbols
and lists;
#X obj 30 1545 route.float;
#X text 200 1545 separate float messages from other types;
#X obj 30 1573 route.list;
#X text 200 1573 separate list messages from other types;
#X obj 30 1601 route.prop;
#X text 200 1601 separate property messages from other types;
#X obj 30 1629 route.random;
#X text 200 1629 routes input flow to random outlet;
#X obj 30 1657 route.symbol;
#X text 200 1657 separate symbol messages from other types;
#X obj 1 1 cnv 5 740 40 empty empty ceammc::flow 20 20 0 20 -104026
-4096 0;
#X obj 1 1685 cnv 5 740 40 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 20 1695 library: ceammc;