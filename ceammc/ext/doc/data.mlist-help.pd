#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 521 50 cnv 1 244 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 521 50 multidimensional list container;
#X obj 1 1 cnv 5 765 40 empty empty data.mlist 20 20 0 20 -104026
-4096 0;
#X obj 565 11 mlist;
#X obj 626 11 ml;
#X obj 668 11 data.mlist;
#X obj 210 80 cnv 1 555 100 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 Syntax: values are separated by spaces: (1 2 3) - list
of 1 \, 2 and 3;
#X text 215 120 Nested lists: (1 2 3 (nested liat values));
#X text 215 145 Symbols with spaces: ("single item list");
#X msg 50 208 bang;
#X msg 78 237 (A B C) \, bang;
#X msg 107 266 1 2 3 \, bang;
#X obj 50 295 data.mlist (1 2 3 (1 3 3));
#X obj 50 324 ui.d @display_type 1;
#X obj 20 373 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 378 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 413 1\.;
#X text 150 413 any;
#X obj 246 414 cnv 1 17 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 413 X: initial list values in (). For example: (1 2 3 (1
2) 4).;
#X obj 20 443 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 448 cnv 5 98 26 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 483 @empty;
#X text 245 483 (readonly) Get 1 if list is empty \, otherwise 0\.
Type: int. Default value: 1\. Allowed values: 0 \, 1\.;
#X msg 110 525 @size;
#X text 245 525 (readonly) Get number of elements in list. Type: int.
Default value: 0\. Min value: 0\.;
#X obj 20 577 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 582 cnv 5 73 26 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 617 append;
#X text 245 617 adds values to the end of the list. Arguments are:;
#X obj 255 640 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 640 VAL: appended value. Type: atom.;
#X msg 110 665 clear;
#X text 245 665 removes all list elements.;
#X msg 110 692 fill;
#X text 245 692 fills with specified value. Arguments are:;
#X obj 255 715 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 715 VAL: fill value. Type: atom.;
#X msg 110 740 insert;
#X text 245 740 inserts values to the specified position. Arguments
are:;
#X obj 255 763 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 763 IDX: insert position. Type: int.;
#X obj 255 786 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 786 VAL: value. Type: atom.;
#X msg 110 811 pop;
#X text 245 811 removes last list element.;
#X msg 110 838 prepend;
#X text 245 838 inserts values to the list beginning. Arguments are:;
#X obj 255 861 cnv 1 30 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 861 VAL: prepended value. Type: atom.;
#X msg 110 886 remove;
#X text 245 886 removes specified element. Arguments are:;
#X obj 255 909 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 909 IDX: element index. Type: int.;
#X msg 110 934 reverse;
#X text 245 934 reverses list.;
#X msg 110 961 set;
#X text 245 961 sets new list without output. Arguments are:;
#X obj 255 984 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 984 LIST: new list content. Type: list.;
#X msg 110 1009 shuffle;
#X text 245 1009 put elements in random order.;
#X msg 110 1036 sort;
#X text 245 1036 sorts list.;
#X msg 110 1063 (....);
#X text 245 1063 sets new list without output.;
#X msg 110 1090 dump;
#X text 245 1090 dump object info to Pd window.;
#X obj 20 1127 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1132 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1133 1\.;
#X text 150 1133 *bang*;
#X text 245 1133 output current list value.;
#X text 150 1153 *symbol*;
#X text 245 1153 set new list with single symbol element and output.;
#X text 150 1173 *list*;
#X text 245 1173 sets new list and output it.;
#X obj 20 1203 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1208 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1209 1\.;
#X text 245 1209 output list or list elements.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title data @url ceammc.data-help.pd;
#X obj 1 1259 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1262 library: ceammc v0.9.0;
#X text 601 1274 see also:;
#X obj 675 1274 data.list;
#N canvas 10 1281 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.0;
#X text 10 54 object:;
#X text 120 54 data.mlist;
#X text 10 76 category:;
#X text 120 76 data;
#X text 10 98 since:;
#X text 120 98 0.6;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 data \, multilist;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1281 pd info;
#X connect 10 0 13 0;
#X connect 11 0 13 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;