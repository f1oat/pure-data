#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 545 50 cnv 1 220 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 545 50 control stream speed limiter;
#X obj 1 1 cnv 5 765 40 empty empty flow.speedlim 20 20 0 20 -104026
-4096 0;
#X obj 429 11 ceammc/speedlim;
#X obj 563 11 speedlim;
#X obj 646 11 flow.speedlim;
#X obj 210 80 cnv 1 555 110 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 Passthru all control data not often then specified limit
in ms. Can be used for button debouncing. In initial state is opened
\, on first message pass it and then became closed within specified
time interval. All incoming messages in that time are dropped. After
this interval expiried goes to opened state;
#X msg 50 218 0 \, 100 1000;
#X msg 184 218 0 \, 100 200;
#X obj 50 247 line;
#X obj 50 276 trigger f f;
#X obj 50 305 flow.speedlim 100;
#X obj 242 305 sel 100;
#X msg 242 334 flush;
#X obj 50 362 flow.group @by 100;
#X obj 50 391 msg set;
#X msg 50 420 ;
#X obj 20 469 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 474 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 509 1\.;
#X text 150 509 int;
#X obj 246 510 cnv 1 70 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 509 TIME(ms): limit time.;
#X obj 20 539 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 544 cnv 5 98 26 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 579 @limit;
#X text 245 579 Get/Set speed limit. If set to zero there is no flow
limitations. Type: int. Units: ms. Default value: 0\. Min value: 0\.;
#X obj 20 646 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 651 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144 -49933
0;
#X text 110 652 1\.;
#X text 245 652 input flow.;
#X text 110 672 2\.;
#X text 150 672 *bang*;
#X text 245 672 reset internal timer and goes to opened state.;
#X text 150 692 *float*;
#X text 245 692 set speed limit.;
#X text 245 712 reset: reset internal timer and goes to opened state.;
#X obj 20 742 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 747 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 748 1\.;
#X text 245 748 output flow.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title flow @url ceammc.flow-help.pd;
#X obj 1 798 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 801 library: ceammc v0.9.3;
#N canvas 10 820 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.3;
#X text 10 54 object:;
#X text 120 54 flow.speedlim;
#X text 10 76 category:;
#X text 120 76 flow;
#X text 10 98 since:;
#X text 120 98 0.5;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 speelim \, drop;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 820 pd info;
#X connect 8 0 10 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 11 1 12 0;
#X connect 11 0 13 0;
#X connect 13 0 14 0;
#X connect 12 0 15 0;
#X connect 14 0 15 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;