#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 401 50 cnv 1 364 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 401 50 map linear to exponential range with 0 allowed.;
#X obj 1 1 cnv 5 765 40 empty empty conv.lin2curve 20 20 0 20 -104026
-4096 0;
#X obj 394 11 ceammc/lin->curve;
#X obj 542 11 lin->curve;
#X obj 639 11 conv.lin2curve;
#X obj 210 80 cnv 1 555 95 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 map the receiver from an assumed linear input range
to an exponential curve output range. Unlike with [conv.lin2exp] \,
the output range may include zero. If the input exceeds the input range
\, the following behaviours are specified by the clip property.;
#X obj 50 203 loadbang;
#X floatatom 194 203 5 0 0 0 - - -;
#N canvas 0 22 450 300 (subpatch) 0;
#X array l2c 255 float 1;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 255 0 250 180 1;
#X restore 357 203 graph;
#X msg 50 232 0 256;
#X obj 194 232 t b f;
#X obj 50 261 list.seq;
#X msg 194 261 @curve \$1;
#X obj 50 290 list.separate;
#X obj 50 319 t f f, f 12;
#X obj 50 347 lin->curve 0 256 0 1;
#X obj 50 376 tabwrite l2c;
#X obj 20 425 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 430 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 465 1\.;
#X text 150 465 float;
#X obj 246 466 cnv 1 38 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 465 FROM: begin of input range. Type: float.;
#X text 110 485 2\.;
#X text 150 485 float;
#X obj 246 486 cnv 1 24 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 485 TO: end of input range. Type: float.;
#X text 110 505 3\.;
#X text 150 505 float;
#X obj 246 506 cnv 1 38 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 505 FROM: begin of output range. Type: float.;
#X text 110 525 4\.;
#X text 150 525 float;
#X obj 246 526 cnv 1 24 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 525 TO: end of output range. Type: float.;
#X text 110 545 5\.;
#X text 150 545 float;
#X obj 246 546 cnv 1 47 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 545 CURVE: curve shape. Type: float.;
#X obj 20 575 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 580 cnv 5 98 26 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 615 @clip;
#X text 245 615 Get/Set noclip (don't clip) max (clip ceiling) min
(clip floor) minmax (clip both). Type: symbol. Default value: minmax.
Allowed values: noclip \, min \, max \, minmax.;
#X msg 110 672 @curve;
#X text 245 672 Get/Set 0 (linear) <0 (concave \, negatively curved)
>0 (convex \, positively curved). Type: float. Default value: -4\.;
#X msg 110 714 @in_from;
#X text 245 714 Get/Set begin of input range. Type: float. Default
value: 0\.;
#X msg 110 743 @in_to;
#X text 245 743 Get/Set end of input range. Type: float. Default value:
127\.;
#X msg 110 772 @max;
#X text 245 772 Get/Set alias to @clip max. Type: symbol.;
#X msg 110 801 @min;
#X text 245 801 Get/Set alias to @clip min. Type: symbol.;
#X msg 110 830 @minmax;
#X text 245 830 Get/Set alias to @clip minmax. Type: symbol.;
#X msg 110 859 @noclip;
#X text 245 859 Get/Set alias to @clip noclip. Type: symbol.;
#X msg 110 888 @out_from;
#X text 245 888 Get/Set begin of output range. Type: float. Default
value: 0\.;
#X msg 110 930 @out_to;
#X text 245 930 Get/Set end of output range. Type: float. Default value:
1\.;
#X obj 20 969 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 974 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144 -49933
0;
#X text 110 975 1\.;
#X text 150 975 *float*;
#X text 245 975 input value.;
#X obj 20 1005 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1010 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1011 1\.;
#X text 245 1011 converted value.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title conv @url ceammc.conv-help.pd;
#X obj 1 1061 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1064 library: ceammc v0.9.4;
#X text 579 1076 see also:;
#X obj 653 1076 conv.lin2exp;
#N canvas 10 1083 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.4;
#X text 10 54 object:;
#X text 120 54 conv.lin2curve;
#X text 10 76 category:;
#X text 120 76 conv;
#X text 10 98 since:;
#X text 120 98 0.1;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 convert \, exponential \, curve;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1083 pd info;
#X connect 8 0 11 0;
#X connect 9 0 12 0;
#X connect 11 0 13 0;
#X connect 12 1 14 0;
#X connect 13 0 15 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 16 1 18 1;
#X connect 14 0 17 0;
#X connect 12 0 11 0;